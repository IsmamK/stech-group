{"version":3,"file":"LayoutsEditor-C-rKgBR0.js","sources":["../../src/components/editor_components/editor_modals/layout_modals/EditNavbarModal.jsx","../../src/components/editor_components/editor_modals/layout_modals/EditFooterModal.jsx","../../src/components/editor_components/LayoutsEditor.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  Button,\n  Form,\n  Input,\n  message,\n  Upload,\n  Spin,\n  Card,\n  List,\n  Collapse,\n  Tooltip,\n  Alert,\n} from \"antd\";\nimport {\n  UploadOutlined,\n  DeleteOutlined,\n  PlusOutlined,\n  QuestionCircleOutlined,\n  InfoCircleOutlined,\n} from \"@ant-design/icons\";\nimport Swal from \"sweetalert2\";\n\nconst { Panel } = Collapse;\nconst { TextArea } = Input;\n\nconst EditNavbarModal = ({ isOpen, onClose }) => {\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const [imageLoading, setImageLoading] = useState(false);\n  const [initialized, setInitialized] = useState(false);\n  const [navigationItems, setNavigationItems] = useState([]);\n  const [brands, setBrands] = useState([]);\n  const apiUrl = import.meta.env.VITE_API_URL;\n\n  useEffect(() => {\n    if (isOpen) {\n      fetchNavbarData();\n    } else {\n      setInitialized(false);\n    }\n  }, [isOpen]);\n\n  const fetchNavbarData = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(`${apiUrl}/layout/navbar/`);\n\n      if (!response.ok) {\n        if (response.status === 404) {\n          initializeWithDefaults();\n          return;\n        }\n        throw new Error(\"Failed to fetch navbar data\");\n      }\n\n      const data = await response.json();\n      form.setFieldsValue({\n        logo: {\n          desktop: data.header?.logo?.desktop || \"\",\n          mobile: data.header?.logo?.mobile || \"\",\n          altText: data.header?.logo?.altText || \"\",\n        },\n      });\n\n      // Ensure navigation items have IDs\n      const navItemsWithIds =\n        data.header?.navigation?.map((item) => ({\n          ...item,\n          id: item.id || Date.now() + Math.random(),\n          submenu: Array.isArray(item.submenu)\n            ? item.submenu.map((sub) => ({\n                ...sub,\n                id: sub.id || Date.now() + Math.random(),\n              }))\n            : item.submenu,\n        })) || [];\n\n      // Ensure brands have IDs\n      const brandsWithIds =\n        data.header?.brands?.map((brand) => ({\n          ...brand,\n          id: brand.id || Date.now() + Math.random(),\n        })) || [];\n\n      setNavigationItems(navItemsWithIds);\n      setBrands(brandsWithIds);\n      setInitialized(true);\n    } catch (error) {\n      console.error(\"Error fetching navbar data:\", error);\n      message.error(\"Failed to load navbar data. Using default values.\");\n      initializeWithDefaults();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const initializeWithDefaults = () => {\n    form.setFieldsValue({\n      logo: {\n        desktop: \"/images/logo.svg\",\n        mobile: \"/images/logo-mobile.svg\",\n        altText: \"brand-logo\",\n      },\n    });\n    setNavigationItems([\n      { id: Date.now() + 1, label: \"Home\", path: \"/\", submenu: null },\n      { id: Date.now() + 2, label: \"About Us\", path: \"/about\", submenu: [] },\n      {\n        id: Date.now() + 3,\n        label: \"Our Concern\",\n        path: \"/our-concern\",\n        submenu: \"dynamic\",\n      },\n      {\n        id: Date.now() + 4,\n        label: \"Services\",\n        path: \"/service\",\n        submenu: null,\n      },\n      { id: Date.now() + 5, label: \"Gallery\", path: \"/gallery\", submenu: null },\n      {\n        id: Date.now() + 6,\n        label: \"News & Event\",\n        path: \"/newsevents\",\n        submenu: null,\n      },\n      {\n        id: Date.now() + 7,\n        label: \"Our Clients\",\n        path: \"/clients\",\n        submenu: null,\n      },\n      {\n        id: Date.now() + 8,\n        label: \"Contact Us\",\n        path: \"/contact\",\n        submenu: null,\n      },\n    ]);\n    setBrands([]);\n    setInitialized(true);\n  };\n\n  const handleImageUpload = async (file, field) => {\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    formData.append(\"category\", \"navbar_images\");\n\n    try {\n      setImageLoading(true);\n      const response = await fetch(`${apiUrl}/images/`, {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Upload failed\");\n      }\n\n      const data = await response.json();\n      const newImageUrl = `${data.image}`;\n\n      // Update the specific field in the form\n      const currentValues = form.getFieldsValue();\n      form.setFieldsValue({\n        logo: {\n          ...currentValues.logo,\n          [field]: newImageUrl,\n        },\n      });\n\n      message.success(\"Image uploaded successfully!\");\n      return newImageUrl;\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      message.error(\"Image upload failed\");\n      return null;\n    } finally {\n      setImageLoading(false);\n    }\n  };\n\n  const uploadProps = (field) => ({\n    name: \"image\",\n    showUploadList: false,\n    customRequest: async ({ file, onSuccess, onError }) => {\n      const imageUrl = await handleImageUpload(file, field);\n      if (imageUrl) {\n        onSuccess(imageUrl, file);\n      } else {\n        onError(new Error(\"Upload failed\"));\n      }\n    },\n    beforeUpload: (file) => {\n      const isImage = file.type.startsWith(\"image/\");\n      if (!isImage) {\n        message.error(\"You can only upload image files!\");\n        return Upload.LIST_IGNORE;\n      }\n      const isLt5M = file.size / 1024 / 1024 < 5;\n      if (!isLt5M) {\n        message.error(\"Image must be smaller than 5MB!\");\n        return Upload.LIST_IGNORE;\n      }\n      return isImage && isLt5M;\n    },\n  });\n\n  const handleAddNavigationItem = () => {\n    const newItem = {\n      id: Date.now(),\n      label: \"\",\n      path: \"\",\n      submenu: null,\n    };\n    setNavigationItems([...navigationItems, newItem]);\n    message.info(\"New navigation item added. Please fill in the details.\");\n  };\n\n  const handleRemoveNavigationItem = (id) => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"This will remove the navigation item and all its submenus.\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, remove it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        setNavigationItems(navigationItems.filter((item) => item.id !== id));\n        message.success(\"Navigation item removed successfully\");\n      }\n    });\n  };\n\n  const handleNavigationItemChange = (id, field, value) => {\n    const updatedItems = navigationItems.map((item) =>\n      item.id === id ? { ...item, [field]: value } : item\n    );\n    setNavigationItems(updatedItems);\n  };\n\n  const handleAddSubmenuItem = (parentId) => {\n    const updatedItems = navigationItems.map((item) => {\n      if (item.id === parentId) {\n        const submenu = Array.isArray(item.submenu) ? item.submenu : [];\n        return {\n          ...item,\n          submenu: [...submenu, { id: Date.now(), label: \"\", path: \"\" }],\n        };\n      }\n      return item;\n    });\n    setNavigationItems(updatedItems);\n    message.info(\"New submenu item added. Please fill in the details.\");\n  };\n\n  const handleRemoveSubmenuItem = (parentId, submenuId) => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"This will remove the submenu item.\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, remove it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const updatedItems = navigationItems.map((item) => {\n          if (item.id === parentId && Array.isArray(item.submenu)) {\n            return {\n              ...item,\n              submenu: item.submenu.filter((sub) => sub.id !== submenuId),\n            };\n          }\n          return item;\n        });\n        setNavigationItems(updatedItems);\n        message.success(\"Submenu item removed successfully\");\n      }\n    });\n  };\n\n  const handleSubmenuItemChange = (parentId, submenuId, field, value) => {\n    const updatedItems = navigationItems.map((item) => {\n      if (item.id === parentId && Array.isArray(item.submenu)) {\n        return {\n          ...item,\n          submenu: item.submenu.map((sub) =>\n            sub.id === submenuId ? { ...sub, [field]: value } : sub\n          ),\n        };\n      }\n      return item;\n    });\n    setNavigationItems(updatedItems);\n  };\n\n  const handleAddBrand = () => {\n    const newBrand = {\n      id: Date.now() + Math.random(), // More unique ID\n      name: \"\",\n      logo: \"\",\n      url: \"\",\n      slug: \"\",\n    };\n    setBrands([...brands, newBrand]);\n    message.info(\"New brand added. Please fill in the details.\");\n  };\n\n  const handleRemoveBrand = (id) => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"This will permanently remove the brand.\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, remove it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        setBrands(brands.filter((brand) => brand.id !== id));\n        message.success(\"Brand removed successfully\");\n      }\n    });\n  };\n\n  const handleBrandChange = (id, field, value) => {\n    setBrands((prevBrands) =>\n      prevBrands.map((brand) =>\n        brand.id === id ? { ...brand, [field]: value } : brand\n      )\n    );\n  };\n\n  const handleBrandLogoUpload = async (file, brandId) => {\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    formData.append(\"category\", \"brand_logos\");\n\n    try {\n      setImageLoading(true);\n      const response = await fetch(`${apiUrl}/images/`, {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Upload failed\");\n      }\n\n      const data = await response.json();\n      const newImageUrl = `${data.image}`;\n\n      // Update the specific brand's logo\n      setBrands((prevBrands) =>\n        prevBrands.map((brand) =>\n          brand.id === brandId ? { ...brand, logo: newImageUrl } : brand\n        )\n      );\n\n      message.success(\"Brand logo uploaded successfully!\");\n      return newImageUrl;\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      message.error(\"Image upload failed\");\n      return null;\n    } finally {\n      setImageLoading(false);\n    }\n  };\n\n  const brandLogoUploadProps = (brandId) => ({\n    name: \"logo\",\n    showUploadList: false,\n    customRequest: async ({ file, onSuccess, onError }) => {\n      const imageUrl = await handleBrandLogoUpload(file, brandId);\n      if (imageUrl) {\n        onSuccess(imageUrl, file);\n      } else {\n        onError(new Error(\"Upload failed\"));\n      }\n    },\n    beforeUpload: (file) => {\n      const isImage = file.type.startsWith(\"image/\");\n      if (!isImage) {\n        message.error(\"You can only upload image files!\");\n        return Upload.LIST_IGNORE;\n      }\n      const isLt5M = file.size / 1024 / 1024 < 5;\n      if (!isLt5M) {\n        message.error(\"Image must be smaller than 5MB!\");\n        return Upload.LIST_IGNORE;\n      }\n      return isImage && isLt5M;\n    },\n  });\n\n  const handleSubmit = async () => {\n    try {\n      const values = await form.validateFields();\n      \n      // Validate navigation items\n      const hasEmptyNavItems = navigationItems.some(\n        (item) => !item.label.trim() || !item.path.trim()\n      );\n      \n      if (hasEmptyNavItems) {\n        throw new Error(\"Please fill in all navigation item fields\");\n      }\n      \n      // Validate submenu items\n      const hasEmptySubmenu = navigationItems.some(\n        (item) =>\n          Array.isArray(item.submenu) &&\n          item.submenu.some((sub) => !sub.label.trim() || !sub.path.trim())\n      );\n      \n      if (hasEmptySubmenu) {\n        throw new Error(\"Please fill in all submenu item fields\");\n      }\n      \n      // Validate brands\n      const hasEmptyBrands = brands.some(\n        (brand) => !brand.name.trim() || !brand.logo.trim() || !brand.url.trim()\n      );\n      \n      if (hasEmptyBrands) {\n        throw new Error(\"Please fill in all brand fields\");\n      }\n\n      const updatedData = {\n        header: {\n          logo: values.logo,\n          navigation: navigationItems\n            .map((item) => ({\n              id: item.id, // Preserve ID\n              label: item.label,\n              path: item.path,\n              submenu:\n                item.submenu === \"dynamic\"\n                  ? \"dynamic\"\n                  : Array.isArray(item.submenu)\n                  ? item.submenu.map((sub) => ({\n                      id: sub.id, // Preserve submenu ID\n                      label: sub.label,\n                      path: sub.path,\n                    }))\n                  : null,\n            }))\n            .filter((item) => item.label && item.path),\n          brands: brands\n            .map((brand) => ({\n              id: brand.id, // Preserve brand ID\n              name: brand.name,\n              logo: brand.logo,\n              url: brand.url,\n              slug: brand.slug,\n            }))\n            .filter((brand) => brand.name && brand.logo && brand.url),\n        },\n      };\n\n      setLoading(true);\n      const response = await fetch(`${apiUrl}/layout/navbar/`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(updatedData),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || \"Failed to save navbar data\");\n      }\n\n      Swal.fire({\n        position: \"top-end\",\n        icon: \"success\",\n        title: \"Navigation Bar Updated Successfully\",\n        showConfirmButton: false,\n        timer: 3000,\n      });\n      onClose();\n    } catch (error) {\n      console.error(\"Error saving navbar data:\", error);\n      message.error(error.message || \"Failed to update navigation bar\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Modal\n      title={\n        <div className=\"flex items-center\">\n          <span className=\"text-xl font-bold text-gray-800\">\n            Edit Navigation Bar\n          </span>\n          <Tooltip title=\"Configure your website's navigation menu, logo, and brand links\">\n            <QuestionCircleOutlined className=\"ml-2 text-gray-500\" />\n          </Tooltip>\n        </div>\n      }\n      open={isOpen}\n      onCancel={onClose}\n      footer={[\n        <Button\n          key=\"back\"\n          onClick={onClose}\n          className=\"px-6 h-10 rounded-lg border-gray-300 hover:bg-gray-100\"\n        >\n          Cancel\n        </Button>,\n        <Button\n          key=\"submit\"\n          type=\"primary\"\n          onClick={handleSubmit}\n          loading={loading}\n          className=\"px-6 h-10 rounded-lg bg-blue-600 hover:bg-blue-700\"\n        >\n          Save Changes\n        </Button>,\n      ]}\n      width={900}\n      className=\"rounded-lg overflow-hidden\"\n      styles={{ body: { padding: \"24px\" } }}\n      destroyOnClose\n    >\n      <Spin spinning={loading} tip=\"Loading navigation data...\">\n        <Form form={form} layout=\"vertical\" className=\"space-y-6\">\n          <Alert\n            message=\"Tip: Drag and drop items to reorder them (coming soon)\"\n            type=\"info\"\n            showIcon\n            className=\"mb-4\"\n          />\n          \n          <Collapse defaultActiveKey={[\"1\", \"2\", \"3\"]} ghost>\n            {/* Logo Section */}\n            <Panel\n              header={\n                <span className=\"font-semibold text-base\">Logo Settings</span>\n              }\n              key=\"1\"\n            >\n              <Card\n                bordered={false}\n                className=\"rounded-lg shadow-sm border-0\"\n                bodyStyle={{ padding: \"16px\" }}\n              >\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n                  <div>\n                    <Form.Item\n                      name={[\"logo\", \"desktop\"]}\n                      label={\n                        <span>\n                          Desktop Logo URL{\" \"}\n                          <Tooltip title=\"Recommended size: 180x60px\">\n                            <InfoCircleOutlined className=\"text-gray-400 ml-1\" />\n                          </Tooltip>\n                        </span>\n                      }\n                    >\n                      <Input\n                        placeholder=\"e.g., /images/logo-desktop.svg\"\n                        addonAfter={\n                          <Upload {...uploadProps(\"desktop\")}>\n                            <Button\n                              icon={<UploadOutlined />}\n                              loading={imageLoading}\n                              size=\"small\"\n                            >\n                              Upload\n                            </Button>\n                          </Upload>\n                        }\n                      />\n                    </Form.Item>\n                    {form.getFieldValue([\"logo\", \"desktop\"]) && (\n                      <div className=\"mt-2\">\n                        <div className=\"text-sm text-gray-500 mb-1\">\n                          Current Logo Preview:\n                        </div>\n                        <div className=\"w-48 h-16 border rounded p-1 bg-gray-50\">\n                          <img\n                            src={form.getFieldValue([\"logo\", \"desktop\"])}\n                            alt=\"Current desktop logo\"\n                            className=\"w-full h-full object-contain\"\n                          />\n                        </div>\n                      </div>\n                    )}\n                  </div>\n\n                  <div>\n                    <Form.Item\n                      name={[\"logo\", \"mobile\"]}\n                      label={\n                        <span>\n                          Mobile Logo URL{\" \"}\n                          <Tooltip title=\"Recommended size: 120x40px\">\n                            <InfoCircleOutlined className=\"text-gray-400 ml-1\" />\n                          </Tooltip>\n                        </span>\n                      }\n                    >\n                      <Input\n                        placeholder=\"e.g., /images/logo-mobile.svg\"\n                        addonAfter={\n                          <Upload {...uploadProps(\"mobile\")}>\n                            <Button\n                              icon={<UploadOutlined />}\n                              loading={imageLoading}\n                              size=\"small\"\n                            >\n                              Upload\n                            </Button>\n                          </Upload>\n                        }\n                      />\n                    </Form.Item>\n                    {form.getFieldValue([\"logo\", \"mobile\"]) && (\n                      <div className=\"mt-2\">\n                        <div className=\"text-sm text-gray-500 mb-1\">\n                          Current Logo Preview:\n                        </div>\n                        <div className=\"w-32 h-16 border rounded p-1 bg-gray-50\">\n                          <img\n                            src={form.getFieldValue([\"logo\", \"mobile\"])}\n                            alt=\"Current mobile logo\"\n                            className=\"w-full h-full object-contain\"\n                          />\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                <Form.Item\n                  name={[\"logo\", \"altText\"]}\n                  label=\"Logo Alt Text\"\n                  extra=\"Important for SEO and accessibility\"\n                >\n                  <Input placeholder=\"e.g., Company Logo\" />\n                </Form.Item>\n              </Card>\n            </Panel>\n\n            {/* Navigation Items Section */}\n            <Panel\n              header={\n                <span className=\"font-semibold text-base\">\n                  Navigation Menu\n                </span>\n              }\n              key=\"2\"\n            >\n              <Card\n                bordered={false}\n                className=\"rounded-lg shadow-sm border-0\"\n                bodyStyle={{ padding: \"16px\" }}\n                extra={\n                  <Button\n                    icon={<PlusOutlined />}\n                    onClick={handleAddNavigationItem}\n                    type=\"primary\"\n                    size=\"small\"\n                  >\n                    Add Menu Item\n                  </Button>\n                }\n              >\n                {navigationItems.length === 0 && (\n                  <div className=\"text-center py-4 text-gray-500\">\n                    No navigation items added yet\n                  </div>\n                )}\n                <List\n                  dataSource={navigationItems}\n                  renderItem={(item) => (\n                    <List.Item\n                      key={item.id}\n                      className=\"p-4 border-b border-gray-200 last:border-b-0 hover:bg-gray-50 transition-colors\"\n                    >\n                      <div className=\"w-full\">\n                        <div className=\"flex flex-col md:flex-row justify-between items-start mb-4 gap-4\">\n                          <div className=\"flex-1 grid grid-cols-1 md:grid-cols-2 gap-4\">\n                            <div>\n                              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                Menu Label*\n                              </label>\n                              <Input\n                                placeholder=\"e.g., About Us\"\n                                value={item.label}\n                                onChange={(e) =>\n                                  handleNavigationItemChange(\n                                    item.id,\n                                    \"label\",\n                                    e.target.value\n                                  )\n                                }\n                                className=\"w-full\"\n                              />\n                            </div>\n                            <div>\n                              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                Menu Path*\n                              </label>\n                              <Input\n                                placeholder=\"e.g., /about\"\n                                value={item.path}\n                                onChange={(e) =>\n                                  handleNavigationItemChange(\n                                    item.id,\n                                    \"path\",\n                                    e.target.value\n                                  )\n                                }\n                                className=\"w-full\"\n                                addonBefore={\n                                  <span className=\"text-gray-500\">\n                                    {window.location.origin}\n                                  </span>\n                                }\n                              />\n                            </div>\n                          </div>\n                          <Button\n                            danger\n                            icon={<DeleteOutlined />}\n                            onClick={() => handleRemoveNavigationItem(item.id)}\n                            className=\"md:ml-4\"\n                          />\n                        </div>\n\n                        <div className=\"pl-4 border-l-2 border-gray-200\">\n                          <div className=\"flex flex-col\">\n                            <div className=\"flex justify-between items-center mb-2\">\n                              <span className=\"text-sm font-medium text-gray-600\">\n                                Submenu Items\n                              </span>\n                              <div className=\"flex gap-2\">\n                                {item.submenu !== \"dynamic\" && (\n                                  <Button\n                                    type=\"dashed\"\n                                    size=\"small\"\n                                    icon={<PlusOutlined />}\n                                    onClick={() =>\n                                      handleAddSubmenuItem(item.id)\n                                    }\n                                  >\n                                    Add Submenu\n                                  </Button>\n                                )}\n                                <Button\n                                  type=\"link\"\n                                  size=\"small\"\n                                  onClick={() =>\n                                    handleNavigationItemChange(\n                                      item.id,\n                                      \"submenu\",\n                                      item.submenu === \"dynamic\"\n                                        ? null\n                                        : \"dynamic\"\n                                    )\n                                  }\n                                >\n                                  {item.submenu === \"dynamic\"\n                                    ? \"Remove Dynamic\"\n                                    : \"Set as Dynamic\"}\n                                </Button>\n                              </div>\n                            </div>\n\n                            {item.submenu === \"dynamic\" ? (\n                              <Alert\n                                message=\"This menu will show dynamic submenu content\"\n                                type=\"info\"\n                                showIcon\n                                className=\"mb-2\"\n                              />\n                            ) : Array.isArray(item.submenu) &&\n                              item.submenu.length > 0 ? (\n                              <List\n                                dataSource={item.submenu}\n                                renderItem={(subItem) => (\n                                  <List.Item\n                                    key={subItem.id}\n                                    className=\"p-3 bg-gray-50 rounded mb-2\"\n                                  >\n                                    <div className=\"w-full\">\n                                      <div className=\"flex flex-col md:flex-row justify-between items-start gap-4\">\n                                        <div className=\"flex-1 grid grid-cols-1 md:grid-cols-2 gap-4\">\n                                          <div>\n                                            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                              Submenu Label*\n                                            </label>\n                                            <Input\n                                              placeholder=\"e.g., Our Team\"\n                                              value={subItem.label}\n                                              onChange={(e) =>\n                                                handleSubmenuItemChange(\n                                                  item.id,\n                                                  subItem.id,\n                                                  \"label\",\n                                                  e.target.value\n                                                )\n                                              }\n                                              className=\"w-full\"\n                                            />\n                                          </div>\n                                          <div>\n                                            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                              Submenu Path*\n                                            </label>\n                                            <Input\n                                              placeholder=\"e.g., /about/team\"\n                                              value={subItem.path}\n                                              onChange={(e) =>\n                                                handleSubmenuItemChange(\n                                                  item.id,\n                                                  subItem.id,\n                                                  \"path\",\n                                                  e.target.value\n                                                )\n                                              }\n                                              className=\"w-full\"\n                                              addonBefore={\n                                                <span className=\"text-gray-500\">\n                                                  {window.location.origin}\n                                                </span>\n                                              }\n                                            />\n                                          </div>\n                                        </div>\n                                        <Button\n                                          danger\n                                          icon={<DeleteOutlined />}\n                                          onClick={() =>\n                                            handleRemoveSubmenuItem(\n                                              item.id,\n                                              subItem.id\n                                            )\n                                          }\n                                          size=\"small\"\n                                        />\n                                      </div>\n                                    </div>\n                                  </List.Item>\n                                )}\n                              />\n                            ) : (\n                              <div className=\"text-sm text-gray-500 py-2\">\n                                No submenu items added\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    </List.Item>\n                  )}\n                />\n              </Card>\n            </Panel>\n\n            {/* Brands Section */}\n            <Panel\n              header={\n                <span className=\"font-semibold text-base\">Brands Section</span>\n              }\n              key=\"3\"\n            >\n              <Card\n                bordered={false}\n                className=\"rounded-lg shadow-sm border-0\"\n                bodyStyle={{ padding: \"16px\" }}\n                extra={\n                  <Button\n                    icon={<PlusOutlined />}\n                    onClick={handleAddBrand}\n                    type=\"primary\"\n                    size=\"small\"\n                  >\n                    Add Brand\n                  </Button>\n                }\n              >\n                {brands.length === 0 && (\n                  <div className=\"text-center py-4 text-gray-500\">\n                    No brands added yet\n                  </div>\n                )}\n                <List\n                  dataSource={brands}\n                  renderItem={(brand) => (\n                    <List.Item\n                      key={brand.id}\n                      className=\"p-4 border-b border-gray-200 last:border-b-0 hover:bg-gray-50 transition-colors\"\n                    >\n                      <div className=\"w-full\">\n                        <div className=\"flex flex-col md:flex-row justify-between items-start gap-6\">\n                          <div className=\"flex-1 grid grid-cols-1 md:grid-cols-2 gap-6\">\n                            <div className=\"space-y-4\">\n                              <div>\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                  Brand Name*\n                                </label>\n                                <Input\n                                  placeholder=\"e.g., Nike\"\n                                  value={brand.name}\n                                  onChange={(e) =>\n                                    handleBrandChange(\n                                      brand.id,\n                                      \"name\",\n                                      e.target.value\n                                    )\n                                  }\n                                  className=\"w-full\"\n                                />\n                              </div>\n                              <div>\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                  Brand URL*\n                                </label>\n                                <Input\n                                  placeholder=\"e.g., https://nike.com\"\n                                  value={brand.url}\n                                  onChange={(e) =>\n                                    handleBrandChange(\n                                      brand.id,\n                                      \"url\",\n                                      e.target.value\n                                    )\n                                  }\n                                  className=\"w-full\"\n                                />\n                              </div>\n                            </div>\n                            <div className=\"space-y-4\">\n                              <div>\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                  Brand Slug\n                                </label>\n                                <Input\n                                  placeholder=\"e.g., nike\"\n                                  value={brand.slug}\n                                  onChange={(e) =>\n                                    handleBrandChange(\n                                      brand.id,\n                                      \"slug\",\n                                      e.target.value\n                                    )\n                                  }\n                                  className=\"w-full\"\n                                />\n                              </div>\n                              <div>\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                  Brand Logo*\n                                </label>\n                                <div className=\"flex items-center gap-4\">\n                                  <Upload {...brandLogoUploadProps(brand.id)}>\n                                    <Button\n                                      icon={<UploadOutlined />}\n                                      loading={imageLoading}\n                                      className=\"h-10\"\n                                    >\n                                      Upload Logo\n                                    </Button>\n                                  </Upload>\n                                  {brand.logo ? (\n                                    <div className=\"relative w-16 h-16 border rounded overflow-hidden bg-white\">\n                                      <img\n                                        src={brand.logo}\n                                        alt=\"Brand logo preview\"\n                                        className=\"w-full h-full object-contain p-1\"\n                                      />\n                                    </div>\n                                  ) : (\n                                    <div className=\"text-sm text-gray-500\">\n                                      No logo uploaded\n                                    </div>\n                                  )}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <Button\n                            danger\n                            icon={<DeleteOutlined />}\n                            onClick={() => handleRemoveBrand(brand.id)}\n                            className=\"md:ml-4\"\n                          />\n                        </div>\n                      </div>\n                    </List.Item>\n                  )}\n                />\n              </Card>\n            </Panel>\n          </Collapse>\n        </Form>\n      </Spin>\n    </Modal>\n  );\n};\n\nexport default EditNavbarModal;","import React, { useState, useEffect } from \"react\";\nimport { Modal, Button, Form, Input, message, Upload, Spin, Card, List, Collapse } from \"antd\";\nimport { UploadOutlined, DeleteOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport Swal from \"sweetalert2\";\n\nconst { Panel } = Collapse;\nconst { TextArea } = Input;\n\nconst EditFooterModal = ({ isOpen, onClose }) => {\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const [imageLoading, setImageLoading] = useState(false);\n  const [initialized, setInitialized] = useState(false);\n  const apiUrl = import.meta.env.VITE_API_URL;\n\n  const [footerData, setFooterData] = useState({\n    logo: {\n      src: \"\",\n      alt: \"\",\n      width: 200,\n      height: 56\n    },\n    links: [],\n    contact: {\n      title: \"\",\n      items: []\n    },\n    social: [],\n    copyright: {\n      text: \"\"\n    }\n  });\n\n  useEffect(() => {\n    if (isOpen && !initialized) {\n      fetchFooterData();\n      setInitialized(true);\n    }\n  }, [isOpen, initialized]);\n\n  const fetchFooterData = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(`${apiUrl}/layout/footer/`);\n\n      if (!response.ok) {\n        if (response.status === 404) {\n          initializeWithDefaults();\n          return;\n        }\n        throw new Error(\"Failed to fetch footer data\");\n      }\n\n      const data = await response.json();\n      setFooterData(data);\n      \n      // Set form values\n      form.setFieldsValue({\n        logo: data.logo?.src || \"\",\n        copyrightText: data.copyright?.text || \"\"\n      });\n    } catch (error) {\n      console.error(\"Error fetching footer data:\", error);\n      message.error(\"Failed to load footer data. Using default values.\");\n      initializeWithDefaults();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const initializeWithDefaults = () => {\n    const defaultData = {\n      logo: {\n        src: \"/images/logo-white.svg\",\n        alt: \"logo-white\",\n        width: 200,\n        height: 56\n      },\n      links: [\n        { text: \"Home\", url: \"/\" },\n        { text: \"About Us\", url: \"/about-us\" },\n        { text: \"Our Concern\", url: \"/our-concern\" },\n        { text: \"Services\", url: \"/services\" },\n        { text: \"Gallery\", url: \"/gallery\" },\n        { text: \"News & Event\", url: \"/newsevents\" },\n        { text: \"Our Clients\", url: \"/our-clients\" },\n        { text: \"Contact Us\", url: \"/contact\" }\n      ],\n      contact: {\n        title: \"Contact\",\n        items: [\n          { icon: \"phone\", text: \"+8809643434343\", url: \"tel:+88012312322539\" },\n          { icon: \"email\", text: \"info@stechgroupbd.com\", url: \"mailto:support@stech.xyz\" },\n          { icon: \"location\", text: \"House- 31, Road- 17, Block-E\\nBanani, Dhaka- 1213, Bangladesh\", url: \"#\" }\n        ]\n      },\n      social: [\n        { name: \"Facebook\", url: \"https://facebook.com\", icon: \"facebook\", tooltip: \"Follow us on Facebook\" },\n        { name: \"YouTube\", url: \"https://youtube.com\", icon: \"youtube\", tooltip: \"Follow us on Youtube\" },\n        { name: \"Instagram\", url: \"https://instagram.com\", icon: \"instagram\", tooltip: \"Follow us on Instagram\" },\n        { name: \"LinkedIn\", url: \"https://linkedin.com\", icon: \"linkedin\", tooltip: \"Follow us on Linkedin\" }\n      ],\n      copyright: {\n        text: \"Stech – All rights reserved.\"\n      }\n    };\n\n    setFooterData(defaultData);\n    form.setFieldsValue({\n      logo: defaultData.logo.src,\n      copyrightText: defaultData.copyright.text\n    });\n  };\n\n  const handleImageUpload = async (file, field) => {\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    formData.append(\"category\", \"logos\");\n\n    try {\n      setImageLoading(true);\n      const response = await fetch(`${apiUrl}/images/`, {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Upload failed\");\n      }\n\n      const data = await response.json();\n      const newImageUrl = `${data.image}`;\n\n      setFooterData(prev => ({\n        ...prev,\n        logo: {\n          ...prev.logo,\n          [field]: newImageUrl\n        }\n      }));\n\n      form.setFieldsValue({\n        logo: newImageUrl\n      });\n\n      return newImageUrl;\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      message.error(\"Image upload failed\");\n      return null;\n    } finally {\n      setImageLoading(false);\n    }\n  };\n\n  const uploadProps = {\n    name: \"logo\",\n    showUploadList: false,\n    customRequest: async ({ file, onSuccess, onError }) => {\n      const imageUrl = await handleImageUpload(file, \"src\");\n      if (imageUrl) {\n        onSuccess(imageUrl, file);\n      } else {\n        onError(new Error(\"Upload failed\"));\n      }\n    },\n    beforeUpload: (file) => {\n      const isImage = file.type.startsWith(\"image/\");\n      if (!isImage) {\n        message.error(\"You can only upload image files!\");\n        return Upload.LIST_IGNORE;\n      }\n      const isLt5M = file.size / 1024 / 1024 < 5;\n      if (!isLt5M) {\n        message.error(\"Image must be smaller than 5MB!\");\n        return Upload.LIST_IGNORE;\n      }\n      return isImage && isLt5M;\n    },\n  };\n\n  const handleAddLink = () => {\n    const newLink = {\n      id: Date.now(),\n      text: \"\",\n      url: \"\"\n    };\n    setFooterData(prev => ({\n      ...prev,\n      links: [...prev.links, newLink]\n    }));\n  };\n\n  const handleRemoveLink = (index) => {\n    setFooterData(prev => ({\n      ...prev,\n      links: prev.links.filter((_, i) => i !== index)\n    }));\n  };\n\n  const handleLinkChange = (index, field, value) => {\n    setFooterData(prev => {\n      const updatedLinks = [...prev.links];\n      updatedLinks[index] = {\n        ...updatedLinks[index],\n        [field]: value\n      };\n      return {\n        ...prev,\n        links: updatedLinks\n      };\n    });\n  };\n\n  const handleAddContactItem = () => {\n    const newItem = {\n      id: Date.now(),\n      icon: \"\",\n      text: \"\",\n      url: \"\"\n    };\n    setFooterData(prev => ({\n      ...prev,\n      contact: {\n        ...prev.contact,\n        items: [...prev.contact.items, newItem]\n      }\n    }));\n  };\n\n  const handleRemoveContactItem = (index) => {\n    setFooterData(prev => ({\n      ...prev,\n      contact: {\n        ...prev.contact,\n        items: prev.contact.items.filter((_, i) => i !== index)\n      }\n    }));\n  };\n\n  const handleContactItemChange = (index, field, value) => {\n    setFooterData(prev => {\n      const updatedItems = [...prev.contact.items];\n      updatedItems[index] = {\n        ...updatedItems[index],\n        [field]: value\n      };\n      return {\n        ...prev,\n        contact: {\n          ...prev.contact,\n          items: updatedItems\n        }\n      };\n    });\n  };\n\n  const handleAddSocialItem = () => {\n    const newItem = {\n      id: Date.now(),\n      name: \"\",\n      url: \"\",\n      icon: \"\",\n      tooltip: \"\"\n    };\n    setFooterData(prev => ({\n      ...prev,\n      social: [...prev.social, newItem]\n    }));\n  };\n\n  const handleRemoveSocialItem = (index) => {\n    setFooterData(prev => ({\n      ...prev,\n      social: prev.social.filter((_, i) => i !== index)\n    }));\n  };\n\n  const handleSocialItemChange = (index, field, value) => {\n    setFooterData(prev => {\n      const updatedSocial = [...prev.social];\n      updatedSocial[index] = {\n        ...updatedSocial[index],\n        [field]: value\n      };\n      return {\n        ...prev,\n        social: updatedSocial\n      };\n    });\n  };\n\n  const handleSubmit = async () => {\n    try {\n      const values = await form.validateFields();\n      const updatedData = {\n        logo: {\n          ...footerData.logo,\n          src: values.logo\n        },\n        links: footerData.links\n          .filter(link => link.text && link.url),\n        contact: {\n          title: footerData.contact.title,\n          items: footerData.contact.items\n            .filter(item => item.text && item.url)\n        },\n        social: footerData.social\n          .filter(social => social.name && social.url && social.icon),\n        copyright: {\n          text: values.copyrightText\n        }\n      };\n\n      const response = await fetch(`${apiUrl}/layout/footer/`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(updatedData),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to save footer data');\n      }\n\n      Swal.fire({\n        position: \"top-end\",\n        icon: \"success\",\n        title: \"Footer Updated Successfully\",\n        showConfirmButton: false,\n        timer: 3000,\n      });\n      onClose();\n    } catch (error) {\n      console.error(\"Error saving footer data:\", error);\n      message.error(error.message || \"Failed to update footer\");\n    }\n  };\n\n  return (\n    <Modal\n      title={\n        <span className=\"text-xl font-bold text-gray-800\">\n          Edit Footer Content\n        </span>\n      }\n      open={isOpen}\n      onCancel={onClose}\n      footer={[\n        <Button\n          key=\"back\"\n          onClick={onClose}\n          className=\"px-6 h-10 rounded-lg border-gray-300 hover:bg-gray-100\"\n        >\n          Cancel\n        </Button>,\n        <Button\n          key=\"submit\"\n          type=\"primary\"\n          onClick={handleSubmit}\n          loading={loading}\n          className=\"px-6 h-10 rounded-lg bg-blue-600 hover:bg-blue-700\"\n        >\n          Save Changes\n        </Button>,\n      ]}\n      width={900}\n      className=\"rounded-lg overflow-hidden\"\n      styles={{ body: { padding: \"24px\" } }}\n      destroyOnClose\n    >\n      <Spin spinning={loading}>\n        <Form form={form} layout=\"vertical\" className=\"space-y-6\">\n          <Card\n            title=\"Logo\"\n            bordered={false}\n            className=\"rounded-lg shadow-sm border-0\"\n            headStyle={{\n              background: \"linear-gradient(90deg, #f8f9fa 0%, #ffffff 100%)\",\n              borderBottom: \"1px solid #e8e8e8\",\n            }}\n          >\n            <Form.Item\n              name=\"logo\"\n              label={\n                <span className=\"font-medium text-gray-700\">\n                  Footer Logo URL\n                </span>\n              }\n              rules={[{ required: true, message: \"Please provide footer logo\" }]}\n            >\n              <div className=\"flex gap-2\">\n                <Input\n                  value={footerData.logo.src}\n                  onChange={(e) => setFooterData(prev => ({\n                    ...prev,\n                    logo: { ...prev.logo, src: e.target.value }\n                  }))}\n                  placeholder=\"e.g., /images/logo-white.svg\"\n                  className=\"flex-1 rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                />\n                <Upload {...uploadProps}>\n                  <Button\n                    icon={<UploadOutlined />}\n                    loading={imageLoading}\n                    className=\"h-10 rounded-lg bg-blue-600 hover:bg-blue-700 text-white\"\n                  >\n                    Upload\n                  </Button>\n                </Upload>\n              </div>\n              {footerData.logo.src && (\n                <div className=\"mt-2\">\n                  <img\n                    src={footerData.logo.src}\n                    alt=\"Footer logo preview\"\n                    className=\"h-12 object-contain\"\n                  />\n                </div>\n              )}\n            </Form.Item>\n          </Card>\n\n          <Card\n            title=\"Quick Links\"\n            bordered={false}\n            className=\"rounded-lg shadow-sm border-0\"\n            headStyle={{\n              background: \"linear-gradient(90deg, #f8f9fa 0%, #ffffff 100%)\",\n              borderBottom: \"1px solid #e8e8e8\",\n            }}\n            extra={\n              <Button\n                type=\"primary\"\n                icon={<PlusOutlined />}\n                onClick={handleAddLink}\n                className=\"flex items-center bg-blue-600 hover:bg-blue-700\"\n              >\n                Add Link\n              </Button>\n            }\n          >\n            <List\n              dataSource={footerData.links}\n              renderItem={(link, index) => (\n                <List.Item key={index} className=\"p-4 border-b border-gray-200 last:border-b-0\">\n                  <div className=\"w-full grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <Input\n                      placeholder=\"Link Text\"\n                      value={link.text}\n                      onChange={(e) => handleLinkChange(index, \"text\", e.target.value)}\n                      className=\"rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                    />\n                    <div className=\"flex gap-2\">\n                      <Input\n                        placeholder=\"URL\"\n                        value={link.url}\n                        onChange={(e) => handleLinkChange(index, \"url\", e.target.value)}\n                        className=\"flex-1 rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                      />\n                      <Button\n                        danger\n                        icon={<DeleteOutlined />}\n                        onClick={() => handleRemoveLink(index)}\n                      />\n                    </div>\n                  </div>\n                </List.Item>\n              )}\n            />\n          </Card>\n\n          <Card\n            title=\"Contact Information\"\n            bordered={false}\n            className=\"rounded-lg shadow-sm border-0\"\n            headStyle={{\n              background: \"linear-gradient(90deg, #f8f9fa 0%, #ffffff 100%)\",\n              borderBottom: \"1px solid #e8e8e8\",\n            }}\n            extra={\n              <Button\n                type=\"primary\"\n                icon={<PlusOutlined />}\n                onClick={handleAddContactItem}\n                className=\"flex items-center bg-blue-600 hover:bg-blue-700\"\n              >\n                Add Contact\n              </Button>\n            }\n          >\n            <List\n              dataSource={footerData.contact.items}\n              renderItem={(item, index) => (\n                <List.Item key={index} className=\"p-4 border-b border-gray-200 last:border-b-0\">\n                  <div className=\"w-full space-y-4\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                      <Input\n                        placeholder=\"Icon (e.g., phone, email, location)\"\n                        value={item.icon}\n                        onChange={(e) => handleContactItemChange(index, \"icon\", e.target.value)}\n                        className=\"rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                      />\n                      <Input\n                        placeholder=\"Text\"\n                        value={item.text}\n                        onChange={(e) => handleContactItemChange(index, \"text\", e.target.value)}\n                        className=\"rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                      />\n                      <div className=\"flex gap-2\">\n                        <Input\n                          placeholder=\"URL\"\n                          value={item.url}\n                          onChange={(e) => handleContactItemChange(index, \"url\", e.target.value)}\n                          className=\"flex-1 rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                        />\n                        <Button\n                          danger\n                          icon={<DeleteOutlined />}\n                          onClick={() => handleRemoveContactItem(index)}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </List.Item>\n              )}\n            />\n          </Card>\n\n          <Card\n            title=\"Social Links\"\n            bordered={false}\n            className=\"rounded-lg shadow-sm border-0\"\n            headStyle={{\n              background: \"linear-gradient(90deg, #f8f9fa 0%, #ffffff 100%)\",\n              borderBottom: \"1px solid #e8e8e8\",\n            }}\n            extra={\n              <Button\n                type=\"primary\"\n                icon={<PlusOutlined />}\n                onClick={handleAddSocialItem}\n                className=\"flex items-center bg-blue-600 hover:bg-blue-700\"\n              >\n                Add Social Link\n              </Button>\n            }\n          >\n            <List\n              dataSource={footerData.social}\n              renderItem={(social, index) => (\n                <List.Item key={index} className=\"p-4 border-b border-gray-200 last:border-b-0\">\n                  <div className=\"w-full space-y-4\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n                      <Input\n                        placeholder=\"Platform Name\"\n                        value={social.name}\n                        onChange={(e) => handleSocialItemChange(index, \"name\", e.target.value)}\n                        className=\"rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                      />\n                      <Input\n                        placeholder=\"URL\"\n                        value={social.url}\n                        onChange={(e) => handleSocialItemChange(index, \"url\", e.target.value)}\n                        className=\"rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                      />\n                      <Input\n                        placeholder=\"Icon (e.g., facebook, twitter)\"\n                        value={social.icon}\n                        onChange={(e) => handleSocialItemChange(index, \"icon\", e.target.value)}\n                        className=\"rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                      />\n                      <div className=\"flex gap-2\">\n                        <Input\n                          placeholder=\"Tooltip\"\n                          value={social.tooltip}\n                          onChange={(e) => handleSocialItemChange(index, \"tooltip\", e.target.value)}\n                          className=\"flex-1 rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                        />\n                        <Button\n                          danger\n                          icon={<DeleteOutlined />}\n                          onClick={() => handleRemoveSocialItem(index)}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </List.Item>\n              )}\n            />\n          </Card>\n\n          <Card\n            title=\"Copyright Information\"\n            bordered={false}\n            className=\"rounded-lg shadow-sm border-0\"\n            headStyle={{\n              background: \"linear-gradient(90deg, #f8f9fa 0%, #ffffff 100%)\",\n              borderBottom: \"1px solid #e8e8e8\",\n            }}\n          >\n            <Form.Item\n              name=\"copyrightText\"\n              label={\n                <span className=\"font-medium text-gray-700\">\n                  Copyright Text\n                </span>\n              }\n            >\n              <Input\n                placeholder=\"Stech – All rights reserved.\"\n                className=\"rounded-lg hover:border-blue-400 focus:border-blue-400\"\n              />\n            </Form.Item>\n          </Card>\n        </Form>\n      </Spin>\n    </Modal>\n  );\n};\n\nexport default EditFooterModal;","import React, { useState, useEffect } from \"react\";\nimport { Modal, Button, Form, Input, message, Upload, Spin, Card, List } from \"antd\";\n\nimport EditNavbarModal from \"./editor_modals/layout_modals/EditNavbarModal\";\nimport EditFooterModal from \"./editor_modals/layout_modals/EditFooterModal\";\n\nconst { TextArea } = Input;\n\nconst OurClientsEditor = ({ isOpen, onClose }) => {\n   const [isnavbarModal, setnavbarModal] = useState(false);\n   const [isfooterModal, setfooterModal] = useState(false);\n\n  return (\n    <div className='flex gap-40 items-start justify-between p-20 w-[1300px]'>\n      {/* Buttons Section */}\n      <div className='grid grid-cols-2 gap-28 font-bold text-center'>\n\n        <button className=\"btn btn-primary w-20 m-2\" onClick={() => setnavbarModal(true)}>Navbar</button>\n        <button className=\"btn btn-primary w-20 m-2\" onClick={() => setfooterModal(true)}>Footer</button>\n      </div>\n\n      <EditNavbarModal isOpen={isnavbarModal} onClose={() => setnavbarModal(false)} />\n      <EditFooterModal isOpen={isfooterModal} onClose={() => setfooterModal(false)} />\n    </div>\n  );\n};\n\nexport default OurClientsEditor;"],"names":["Panel","Collapse","TextArea","Input","EditNavbarModal","isOpen","onClose","form","Form","loading","setLoading","useState","imageLoading","setImageLoading","initialized","setInitialized","navigationItems","setNavigationItems","brands","setBrands","apiUrl","useEffect","fetchNavbarData","response","initializeWithDefaults","data","_b","_a","_d","_c","_f","_e","navItemsWithIds","_h","_g","item","sub","brandsWithIds","_j","_i","brand","error","message","handleImageUpload","file","field","formData","newImageUrl","currentValues","uploadProps","onSuccess","onError","imageUrl","isImage","Upload","isLt5M","handleAddNavigationItem","newItem","handleRemoveNavigationItem","id","Swal","result","handleNavigationItemChange","value","updatedItems","handleAddSubmenuItem","parentId","submenu","handleRemoveSubmenuItem","submenuId","handleSubmenuItemChange","handleAddBrand","newBrand","handleRemoveBrand","handleBrandChange","prevBrands","handleBrandLogoUpload","brandId","brandLogoUploadProps","handleSubmit","values","updatedData","errorData","jsx","Modal","jsxs","Tooltip","QuestionCircleOutlined","Button","Spin","Alert","Card","InfoCircleOutlined","UploadOutlined","PlusOutlined","List","e","DeleteOutlined","subItem","EditFooterModal","footerData","setFooterData","fetchFooterData","defaultData","prev","handleAddLink","newLink","handleRemoveLink","index","_","handleLinkChange","updatedLinks","handleAddContactItem","handleRemoveContactItem","handleContactItemChange","handleAddSocialItem","handleRemoveSocialItem","handleSocialItemChange","updatedSocial","link","social","OurClientsEditor","isnavbarModal","setnavbarModal","isfooterModal","setfooterModal"],"mappings":"qLAwBA,KAAM,CAAEA,MAAAA,EAAU,EAAAC,GACZ,CAAEC,SAAAA,EAAa,EAAAC,EAEfC,GAAkB,CAAC,CAAE,OAAAC,EAAQ,QAAAC,KAAc,CAC/C,KAAM,CAACC,CAAI,EAAIC,EAAK,QAAQ,EACtB,CAACC,EAASC,CAAU,EAAIC,EAAAA,SAAS,EAAK,EACtC,CAACC,EAAcC,CAAe,EAAIF,EAAAA,SAAS,EAAK,EAChD,CAACG,EAAaC,CAAc,EAAIJ,EAAAA,SAAS,EAAK,EAC9C,CAACK,EAAiBC,CAAkB,EAAIN,EAAAA,SAAS,CAAA,CAAE,EACnD,CAACO,EAAQC,CAAS,EAAIR,EAAAA,SAAS,CAAA,CAAE,EACjCS,EAAS,4BAEfC,EAAAA,UAAU,IAAM,CACVhB,EACciB,EAAA,EAEhBP,EAAe,EAAK,CACtB,EACC,CAACV,CAAM,CAAC,EAEX,MAAMiB,EAAkB,SAAY,2BAC9B,GAAA,CACFZ,EAAW,EAAI,EACf,MAAMa,EAAW,MAAM,MAAM,GAAGH,CAAM,iBAAiB,EAEnD,GAAA,CAACG,EAAS,GAAI,CACZ,GAAAA,EAAS,SAAW,IAAK,CACJC,EAAA,EACvB,MAAA,CAEI,MAAA,IAAI,MAAM,6BAA6B,CAAA,CAGzC,MAAAC,EAAO,MAAMF,EAAS,KAAK,EACjChB,EAAK,eAAe,CAClB,KAAM,CACJ,UAASmB,GAAAC,EAAAF,EAAK,SAAL,YAAAE,EAAa,OAAb,YAAAD,EAAmB,UAAW,GACvC,SAAQE,GAAAC,EAAAJ,EAAK,SAAL,YAAAI,EAAa,OAAb,YAAAD,EAAmB,SAAU,GACrC,UAASE,GAAAC,EAAAN,EAAK,SAAL,YAAAM,EAAa,OAAb,YAAAD,EAAmB,UAAW,EAAA,CACzC,CACD,EAGD,MAAME,KACJC,GAAAC,EAAAT,EAAK,SAAL,YAAAS,EAAa,aAAb,YAAAD,EAAyB,IAAKE,IAAU,CACtC,GAAGA,EACH,GAAIA,EAAK,IAAM,KAAK,IAAI,EAAI,KAAK,OAAO,EACxC,QAAS,MAAM,QAAQA,EAAK,OAAO,EAC/BA,EAAK,QAAQ,IAAKC,KAAS,CACzB,GAAGA,GACH,GAAIA,GAAI,IAAM,KAAK,IAAI,EAAI,KAAK,OAAO,CAAA,EACvC,EACFD,EAAK,OACX,MAAO,CAAC,EAGJE,KACJC,IAAAC,GAAAd,EAAK,SAAL,YAAAc,GAAa,SAAb,YAAAD,GAAqB,IAAKE,IAAW,CACnC,GAAGA,EACH,GAAIA,EAAM,IAAM,KAAK,IAAI,EAAI,KAAK,OAAO,CAC3C,MAAO,CAAC,EAEVvB,EAAmBe,EAAe,EAClCb,EAAUkB,EAAa,EACvBtB,EAAe,EAAI,QACZ0B,EAAO,CACN,QAAA,MAAM,8BAA+BA,CAAK,EAClDC,EAAQ,MAAM,mDAAmD,EAC1ClB,EAAA,CAAA,QACvB,CACAd,EAAW,EAAK,CAAA,CAEpB,EAEMc,EAAyB,IAAM,CACnCjB,EAAK,eAAe,CAClB,KAAM,CACJ,QAAS,mBACT,OAAQ,0BACR,QAAS,YAAA,CACX,CACD,EACkBU,EAAA,CACjB,CAAE,GAAI,KAAK,IAAI,EAAI,EAAG,MAAO,OAAQ,KAAM,IAAK,QAAS,IAAK,EAC9D,CAAE,GAAI,KAAK,IAAA,EAAQ,EAAG,MAAO,WAAY,KAAM,SAAU,QAAS,CAAA,CAAG,EACrE,CACE,GAAI,KAAK,IAAA,EAAQ,EACjB,MAAO,cACP,KAAM,eACN,QAAS,SACX,EACA,CACE,GAAI,KAAK,IAAA,EAAQ,EACjB,MAAO,WACP,KAAM,WACN,QAAS,IACX,EACA,CAAE,GAAI,KAAK,IAAI,EAAI,EAAG,MAAO,UAAW,KAAM,WAAY,QAAS,IAAK,EACxE,CACE,GAAI,KAAK,IAAA,EAAQ,EACjB,MAAO,eACP,KAAM,cACN,QAAS,IACX,EACA,CACE,GAAI,KAAK,IAAA,EAAQ,EACjB,MAAO,cACP,KAAM,WACN,QAAS,IACX,EACA,CACE,GAAI,KAAK,IAAA,EAAQ,EACjB,MAAO,aACP,KAAM,WACN,QAAS,IAAA,CACX,CACD,EACDE,EAAU,CAAA,CAAE,EACZJ,EAAe,EAAI,CACrB,EAEM4B,EAAoB,MAAOC,EAAMC,IAAU,CACzC,MAAAC,EAAW,IAAI,SACZA,EAAA,OAAO,QAASF,CAAI,EACpBE,EAAA,OAAO,WAAY,eAAe,EAEvC,GAAA,CACFjC,EAAgB,EAAI,EACpB,MAAMU,EAAW,MAAM,MAAM,GAAGH,CAAM,WAAY,CAChD,OAAQ,OACR,KAAM0B,CAAA,CACP,EAEG,GAAA,CAACvB,EAAS,GACN,MAAA,IAAI,MAAM,eAAe,EAI3B,MAAAwB,EAAc,IADP,MAAMxB,EAAS,KAAK,GACL,KAAK,GAG3ByB,EAAgBzC,EAAK,eAAe,EAC1C,OAAAA,EAAK,eAAe,CAClB,KAAM,CACJ,GAAGyC,EAAc,KACjB,CAACH,CAAK,EAAGE,CAAA,CACX,CACD,EAEDL,EAAQ,QAAQ,8BAA8B,EACvCK,QACAN,EAAO,CACN,eAAA,MAAM,gBAAiBA,CAAK,EACpCC,EAAQ,MAAM,qBAAqB,EAC5B,IAAA,QACP,CACA7B,EAAgB,EAAK,CAAA,CAEzB,EAEMoC,EAAeJ,IAAW,CAC9B,KAAM,QACN,eAAgB,GAChB,cAAe,MAAO,CAAE,KAAAD,EAAM,UAAAM,EAAW,QAAAC,KAAc,CACrD,MAAMC,EAAW,MAAMT,EAAkBC,EAAMC,CAAK,EAChDO,EACFF,EAAUE,EAAUR,CAAI,EAEhBO,EAAA,IAAI,MAAM,eAAe,CAAC,CAEtC,EACA,aAAeP,GAAS,CACtB,MAAMS,EAAUT,EAAK,KAAK,WAAW,QAAQ,EAC7C,GAAI,CAACS,EACHX,OAAAA,EAAQ,MAAM,kCAAkC,EACzCY,EAAO,YAEhB,MAAMC,EAASX,EAAK,KAAO,KAAO,KAAO,EACzC,OAAKW,EAIEF,GAAWE,GAHhBb,EAAQ,MAAM,iCAAiC,EACxCY,EAAO,YAEE,CACpB,GAGIE,EAA0B,IAAM,CACpC,MAAMC,EAAU,CACd,GAAI,KAAK,IAAI,EACb,MAAO,GACP,KAAM,GACN,QAAS,IACX,EACAxC,EAAmB,CAAC,GAAGD,EAAiByC,CAAO,CAAC,EAChDf,EAAQ,KAAK,wDAAwD,CACvE,EAEMgB,EAA8BC,GAAO,CACzCC,EAAK,KAAK,CACR,MAAO,gBACP,KAAM,6DACN,KAAM,UACN,iBAAkB,GAClB,mBAAoB,UACpB,kBAAmB,OACnB,kBAAmB,iBAAA,CACpB,EAAE,KAAMC,GAAW,CACdA,EAAO,cACT5C,EAAmBD,EAAgB,OAAQmB,GAASA,EAAK,KAAOwB,CAAE,CAAC,EACnEjB,EAAQ,QAAQ,sCAAsC,EACxD,CACD,CACH,EAEMoB,EAA6B,CAACH,EAAId,EAAOkB,IAAU,CACvD,MAAMC,EAAehD,EAAgB,IAAKmB,GACxCA,EAAK,KAAOwB,EAAK,CAAE,GAAGxB,EAAM,CAACU,CAAK,EAAGkB,GAAU5B,CACjD,EACAlB,EAAmB+C,CAAY,CACjC,EAEMC,EAAwBC,GAAa,CACzC,MAAMF,EAAehD,EAAgB,IAAKmB,GAAS,CAC7C,GAAAA,EAAK,KAAO+B,EAAU,CAClB,MAAAC,EAAU,MAAM,QAAQhC,EAAK,OAAO,EAAIA,EAAK,QAAU,CAAC,EACvD,MAAA,CACL,GAAGA,EACH,QAAS,CAAC,GAAGgC,EAAS,CAAE,GAAI,KAAK,IAAA,EAAO,MAAO,GAAI,KAAM,EAAI,CAAA,CAC/D,CAAA,CAEK,OAAAhC,CAAA,CACR,EACDlB,EAAmB+C,CAAY,EAC/BtB,EAAQ,KAAK,qDAAqD,CACpE,EAEM0B,EAA0B,CAACF,EAAUG,IAAc,CACvDT,EAAK,KAAK,CACR,MAAO,gBACP,KAAM,qCACN,KAAM,UACN,iBAAkB,GAClB,mBAAoB,UACpB,kBAAmB,OACnB,kBAAmB,iBAAA,CACpB,EAAE,KAAMC,GAAW,CAClB,GAAIA,EAAO,YAAa,CACtB,MAAMG,EAAehD,EAAgB,IAAKmB,GACpCA,EAAK,KAAO+B,GAAY,MAAM,QAAQ/B,EAAK,OAAO,EAC7C,CACL,GAAGA,EACH,QAASA,EAAK,QAAQ,OAAQC,GAAQA,EAAI,KAAOiC,CAAS,CAC5D,EAEKlC,CACR,EACDlB,EAAmB+C,CAAY,EAC/BtB,EAAQ,QAAQ,mCAAmC,CAAA,CACrD,CACD,CACH,EAEM4B,EAA0B,CAACJ,EAAUG,EAAWxB,EAAOkB,IAAU,CACrE,MAAMC,EAAehD,EAAgB,IAAKmB,GACpCA,EAAK,KAAO+B,GAAY,MAAM,QAAQ/B,EAAK,OAAO,EAC7C,CACL,GAAGA,EACH,QAASA,EAAK,QAAQ,IAAKC,GACzBA,EAAI,KAAOiC,EAAY,CAAE,GAAGjC,EAAK,CAACS,CAAK,EAAGkB,GAAU3B,CAAA,CAExD,EAEKD,CACR,EACDlB,EAAmB+C,CAAY,CACjC,EAEMO,EAAiB,IAAM,CAC3B,MAAMC,EAAW,CACf,GAAI,KAAK,MAAQ,KAAK,OAAO,EAC7B,KAAM,GACN,KAAM,GACN,IAAK,GACL,KAAM,EACR,EACArD,EAAU,CAAC,GAAGD,EAAQsD,CAAQ,CAAC,EAC/B9B,EAAQ,KAAK,8CAA8C,CAC7D,EAEM+B,EAAqBd,GAAO,CAChCC,EAAK,KAAK,CACR,MAAO,gBACP,KAAM,0CACN,KAAM,UACN,iBAAkB,GAClB,mBAAoB,UACpB,kBAAmB,OACnB,kBAAmB,iBAAA,CACpB,EAAE,KAAMC,GAAW,CACdA,EAAO,cACT1C,EAAUD,EAAO,OAAQsB,GAAUA,EAAM,KAAOmB,CAAE,CAAC,EACnDjB,EAAQ,QAAQ,4BAA4B,EAC9C,CACD,CACH,EAEMgC,EAAoB,CAACf,EAAId,EAAOkB,IAAU,CAC9C5C,EAAWwD,GACTA,EAAW,IAAKnC,GACdA,EAAM,KAAOmB,EAAK,CAAE,GAAGnB,EAAO,CAACK,CAAK,EAAGkB,GAAUvB,CAAA,CAErD,CACF,EAEMoC,EAAwB,MAAOhC,EAAMiC,IAAY,CAC/C,MAAA/B,EAAW,IAAI,SACZA,EAAA,OAAO,QAASF,CAAI,EACpBE,EAAA,OAAO,WAAY,aAAa,EAErC,GAAA,CACFjC,EAAgB,EAAI,EACpB,MAAMU,EAAW,MAAM,MAAM,GAAGH,CAAM,WAAY,CAChD,OAAQ,OACR,KAAM0B,CAAA,CACP,EAEG,GAAA,CAACvB,EAAS,GACN,MAAA,IAAI,MAAM,eAAe,EAI3B,MAAAwB,EAAc,IADP,MAAMxB,EAAS,KAAK,GACL,KAAK,GAGjC,OAAAJ,EAAWwD,GACTA,EAAW,IAAKnC,GACdA,EAAM,KAAOqC,EAAU,CAAE,GAAGrC,EAAO,KAAMO,GAAgBP,CAAA,CAE7D,EAEAE,EAAQ,QAAQ,mCAAmC,EAC5CK,QACAN,EAAO,CACN,eAAA,MAAM,gBAAiBA,CAAK,EACpCC,EAAQ,MAAM,qBAAqB,EAC5B,IAAA,QACP,CACA7B,EAAgB,EAAK,CAAA,CAEzB,EAEMiE,EAAwBD,IAAa,CACzC,KAAM,OACN,eAAgB,GAChB,cAAe,MAAO,CAAE,KAAAjC,EAAM,UAAAM,EAAW,QAAAC,KAAc,CACrD,MAAMC,EAAW,MAAMwB,EAAsBhC,EAAMiC,CAAO,EACtDzB,EACFF,EAAUE,EAAUR,CAAI,EAEhBO,EAAA,IAAI,MAAM,eAAe,CAAC,CAEtC,EACA,aAAeP,GAAS,CACtB,MAAMS,EAAUT,EAAK,KAAK,WAAW,QAAQ,EAC7C,GAAI,CAACS,EACHX,OAAAA,EAAQ,MAAM,kCAAkC,EACzCY,EAAO,YAEhB,MAAMC,EAASX,EAAK,KAAO,KAAO,KAAO,EACzC,OAAKW,EAIEF,GAAWE,GAHhBb,EAAQ,MAAM,iCAAiC,EACxCY,EAAO,YAEE,CACpB,GAGIyB,EAAe,SAAY,CAC3B,GAAA,CACI,MAAAC,EAAS,MAAMzE,EAAK,eAAe,EAOzC,GAJyBS,EAAgB,KACtCmB,GAAS,CAACA,EAAK,MAAM,QAAU,CAACA,EAAK,KAAK,KAAK,CAClD,EAGQ,MAAA,IAAI,MAAM,2CAA2C,EAU7D,GANwBnB,EAAgB,KACrCmB,GACC,MAAM,QAAQA,EAAK,OAAO,GAC1BA,EAAK,QAAQ,KAAMC,GAAQ,CAACA,EAAI,MAAM,QAAU,CAACA,EAAI,KAAK,KAAM,CAAA,CACpE,EAGQ,MAAA,IAAI,MAAM,wCAAwC,EAQ1D,GAJuBlB,EAAO,KAC3BsB,GAAU,CAACA,EAAM,KAAK,KAAK,GAAK,CAACA,EAAM,KAAK,KAAK,GAAK,CAACA,EAAM,IAAI,KAAK,CACzE,EAGQ,MAAA,IAAI,MAAM,iCAAiC,EAGnD,MAAMyC,EAAc,CAClB,OAAQ,CACN,KAAMD,EAAO,KACb,WAAYhE,EACT,IAAKmB,IAAU,CACd,GAAIA,EAAK,GACT,MAAOA,EAAK,MACZ,KAAMA,EAAK,KACX,QACEA,EAAK,UAAY,UACb,UACA,MAAM,QAAQA,EAAK,OAAO,EAC1BA,EAAK,QAAQ,IAAKC,IAAS,CACzB,GAAIA,EAAI,GACR,MAAOA,EAAI,MACX,KAAMA,EAAI,MACV,EACF,IAAA,EACN,EACD,OAAQD,GAASA,EAAK,OAASA,EAAK,IAAI,EAC3C,OAAQjB,EACL,IAAKsB,IAAW,CACf,GAAIA,EAAM,GACV,KAAMA,EAAM,KACZ,KAAMA,EAAM,KACZ,IAAKA,EAAM,IACX,KAAMA,EAAM,IAAA,EACZ,EACD,OAAQA,GAAUA,EAAM,MAAQA,EAAM,MAAQA,EAAM,GAAG,CAAA,CAE9D,EAEA9B,EAAW,EAAI,EACf,MAAMa,EAAW,MAAM,MAAM,GAAGH,CAAM,kBAAmB,CACvD,OAAQ,QACR,QAAS,CACP,eAAgB,kBAClB,EACA,KAAM,KAAK,UAAU6D,CAAW,CAAA,CACjC,EAEG,GAAA,CAAC1D,EAAS,GAAI,CACV,MAAA2D,EAAY,MAAM3D,EAAS,KAAK,EACtC,MAAM,IAAI,MAAM2D,EAAU,SAAW,4BAA4B,CAAA,CAGnEtB,EAAK,KAAK,CACR,SAAU,UACV,KAAM,UACN,MAAO,sCACP,kBAAmB,GACnB,MAAO,GAAA,CACR,EACOtD,EAAA,QACDmC,EAAO,CACN,QAAA,MAAM,4BAA6BA,CAAK,EACxCC,EAAA,MAAMD,EAAM,SAAW,iCAAiC,CAAA,QAChE,CACA/B,EAAW,EAAK,CAAA,CAEpB,EAGE,OAAAyE,EAAA,IAACC,GAAA,CACC,MACGC,EAAA,KAAA,MAAI,CAAA,UAAU,oBACb,SAAA,OAAC,OAAA,CAAK,UAAU,kCAAkC,SAElD,sBAAA,EACCF,EAAAA,IAAAG,IAAQ,MAAM,kEACb,SAACH,EAAA,IAAAI,GAAuB,CAAA,UAAU,oBAAqB,CAAA,CACzD,CAAA,CAAA,EACF,EAEF,KAAMlF,EACN,SAAUC,EACV,OAAQ,CACN6E,EAAA,IAACK,EAAA,CAEC,QAASlF,EACT,UAAU,yDACX,SAAA,QAAA,EAHK,MAKN,EACA6E,EAAA,IAACK,EAAA,CAEC,KAAK,UACL,QAAST,EACT,QAAAtE,EACA,UAAU,qDACX,SAAA,cAAA,EALK,QAAA,CAQR,EACA,MAAO,IACP,UAAU,6BACV,OAAQ,CAAE,KAAM,CAAE,QAAS,OAAS,EACpC,eAAc,GAEd,SAAC0E,EAAA,IAAAM,GAAA,CAAK,SAAUhF,EAAS,IAAI,6BAC3B,SAAC4E,EAAAA,KAAA7E,EAAA,CAAK,KAAAD,EAAY,OAAO,WAAW,UAAU,YAC5C,SAAA,CAAA4E,EAAA,IAACO,GAAA,CACC,QAAQ,yDACR,KAAK,OACL,SAAQ,GACR,UAAU,MAAA,CACZ,EAEAL,EAAAA,KAACpF,IAAS,iBAAkB,CAAC,IAAK,IAAK,GAAG,EAAG,MAAK,GAEhD,SAAA,CAAAkF,EAAA,IAACnF,GAAA,CACC,aACG,OAAK,CAAA,UAAU,0BAA0B,SAAa,gBAAA,EAIzD,SAAAqF,EAAA,KAACM,EAAA,CACC,SAAU,GACV,UAAU,gCACV,UAAW,CAAE,QAAS,MAAO,EAE7B,SAAA,CAACN,EAAAA,KAAA,MAAA,CAAI,UAAU,6CACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAF,EAAA,IAAC3E,EAAK,KAAL,CACC,KAAM,CAAC,OAAQ,SAAS,EACxB,aACG,OAAK,CAAA,SAAA,CAAA,mBACa,IAChB2E,EAAAA,IAAAG,IAAQ,MAAM,6BACb,SAACH,EAAA,IAAAS,GAAmB,CAAA,UAAU,oBAAqB,CAAA,CACrD,CAAA,CAAA,EACF,EAGF,SAAAT,EAAA,IAAChF,EAAA,CACC,YAAY,iCACZ,iBACGmD,EAAA,CAAQ,GAAGL,EAAY,SAAS,EAC/B,SAAAkC,EAAA,IAACK,EAAA,CACC,WAAOK,EAAe,EAAA,EACtB,QAASjF,EACT,KAAK,QACN,SAAA,QAAA,CAAA,CAGH,CAAA,CAAA,CAAA,CAEJ,CACF,EACCL,EAAK,cAAc,CAAC,OAAQ,SAAS,CAAC,GACrC8E,EAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,OAAC,MAAA,CAAI,UAAU,6BAA6B,SAE5C,wBAAA,EACCF,EAAAA,IAAA,MAAI,CAAA,UAAU,0CACb,SAAAA,EAAA,IAAC,MAAA,CACC,IAAK5E,EAAK,cAAc,CAAC,OAAQ,SAAS,CAAC,EAC3C,IAAI,uBACJ,UAAU,8BAAA,CAAA,CAEd,CAAA,CAAA,CACF,CAAA,CAAA,EAEJ,SAEC,MACC,CAAA,SAAA,CAAA4E,EAAA,IAAC3E,EAAK,KAAL,CACC,KAAM,CAAC,OAAQ,QAAQ,EACvB,aACG,OAAK,CAAA,SAAA,CAAA,kBACY,IACf2E,EAAAA,IAAAG,IAAQ,MAAM,6BACb,SAACH,EAAA,IAAAS,GAAmB,CAAA,UAAU,oBAAqB,CAAA,CACrD,CAAA,CAAA,EACF,EAGF,SAAAT,EAAA,IAAChF,EAAA,CACC,YAAY,gCACZ,iBACGmD,EAAA,CAAQ,GAAGL,EAAY,QAAQ,EAC9B,SAAAkC,EAAA,IAACK,EAAA,CACC,WAAOK,EAAe,EAAA,EACtB,QAASjF,EACT,KAAK,QACN,SAAA,QAAA,CAAA,CAGH,CAAA,CAAA,CAAA,CAEJ,CACF,EACCL,EAAK,cAAc,CAAC,OAAQ,QAAQ,CAAC,GACpC8E,EAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,OAAC,MAAA,CAAI,UAAU,6BAA6B,SAE5C,wBAAA,EACCF,EAAAA,IAAA,MAAI,CAAA,UAAU,0CACb,SAAAA,EAAA,IAAC,MAAA,CACC,IAAK5E,EAAK,cAAc,CAAC,OAAQ,QAAQ,CAAC,EAC1C,IAAI,sBACJ,UAAU,8BAAA,CAAA,CAEd,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,EACF,EAEA4E,EAAA,IAAC3E,EAAK,KAAL,CACC,KAAM,CAAC,OAAQ,SAAS,EACxB,MAAM,gBACN,MAAM,sCAEN,SAAC2E,EAAAA,IAAAhF,EAAM,CAAA,YAAY,oBAAqB,CAAA,CAAA,CAAA,CAC1C,CAAA,CAAA,CACF,EAtGI,GAuGN,EAGAgF,EAAA,IAACnF,GAAA,CACC,aACG,OAAK,CAAA,UAAU,0BAA0B,SAE1C,kBAAA,EAIF,SAAAqF,EAAA,KAACM,EAAA,CACC,SAAU,GACV,UAAU,gCACV,UAAW,CAAE,QAAS,MAAO,EAC7B,MACER,EAAA,IAACK,EAAA,CACC,WAAOM,EAAa,EAAA,EACpB,QAAStC,EACT,KAAK,UACL,KAAK,QACN,SAAA,eAAA,CAED,EAGD,SAAA,CAAAxC,EAAgB,SAAW,GACzBmE,MAAA,MAAI,CAAA,UAAU,iCAAiC,SAEhD,gCAAA,EAEFA,EAAA,IAACY,EAAA,CACC,WAAY/E,EACZ,WAAamB,GACXgD,EAAA,IAACY,EAAK,KAAL,CAEC,UAAU,kFAEV,SAACV,EAAA,KAAA,MAAI,CAAA,UAAU,SACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,mEACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,+CACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,OAAC,QAAA,CAAM,UAAU,+CAA+C,SAEhE,cAAA,EACAF,EAAA,IAAChF,EAAA,CACC,YAAY,iBACZ,MAAOgC,EAAK,MACZ,SAAW6D,GACTlC,EACE3B,EAAK,GACL,QACA6D,EAAE,OAAO,KACX,EAEF,UAAU,QAAA,CAAA,CACZ,EACF,SACC,MACC,CAAA,SAAA,OAAC,QAAA,CAAM,UAAU,+CAA+C,SAEhE,aAAA,EACAb,EAAA,IAAChF,EAAA,CACC,YAAY,eACZ,MAAOgC,EAAK,KACZ,SAAW6D,GACTlC,EACE3B,EAAK,GACL,OACA6D,EAAE,OAAO,KACX,EAEF,UAAU,SACV,YACGb,EAAAA,IAAA,OAAA,CAAK,UAAU,gBACb,SAAA,OAAO,SAAS,MACnB,CAAA,CAAA,CAAA,CAEJ,CACF,CAAA,CAAA,EACF,EACAA,EAAA,IAACK,EAAA,CACC,OAAM,GACN,WAAOS,EAAe,EAAA,EACtB,QAAS,IAAMvC,EAA2BvB,EAAK,EAAE,EACjD,UAAU,SAAA,CAAA,CACZ,EACF,QAEC,MAAI,CAAA,UAAU,kCACb,SAACkD,EAAA,KAAA,MAAA,CAAI,UAAU,gBACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,OAAC,OAAA,CAAK,UAAU,oCAAoC,SAEpD,gBAAA,EACCA,EAAAA,KAAA,MAAI,CAAA,UAAU,aACZ,SAAA,CAAAlD,EAAK,UAAY,WAChBgD,EAAA,IAACK,EAAA,CACC,KAAK,SACL,KAAK,QACL,WAAOM,EAAa,EAAA,EACpB,QAAS,IACP7B,EAAqB9B,EAAK,EAAE,EAE/B,SAAA,aAAA,CAED,EAEFgD,EAAA,IAACK,EAAA,CACC,KAAK,OACL,KAAK,QACL,QAAS,IACP1B,EACE3B,EAAK,GACL,UACAA,EAAK,UAAY,UACb,KACA,SACN,EAGD,SAAAA,EAAK,UAAY,UACd,iBACA,gBAAA,CAAA,CACN,CACF,CAAA,CAAA,EACF,EAECA,EAAK,UAAY,UAChBgD,EAAA,IAACO,GAAA,CACC,QAAQ,8CACR,KAAK,OACL,SAAQ,GACR,UAAU,MAAA,CAAA,EAEV,MAAM,QAAQvD,EAAK,OAAO,GAC5BA,EAAK,QAAQ,OAAS,EACtBgD,EAAA,IAACY,EAAA,CACC,WAAY5D,EAAK,QACjB,WAAa+D,GACXf,EAAA,IAACY,EAAK,KAAL,CAEC,UAAU,8BAEV,eAAC,MAAI,CAAA,UAAU,SACb,SAACV,EAAAA,KAAA,MAAA,CAAI,UAAU,8DACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,+CACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,OAAC,QAAA,CAAM,UAAU,+CAA+C,SAEhE,iBAAA,EACAF,EAAA,IAAChF,EAAA,CACC,YAAY,iBACZ,MAAO+F,EAAQ,MACf,SAAWF,GACT1B,EACEnC,EAAK,GACL+D,EAAQ,GACR,QACAF,EAAE,OAAO,KACX,EAEF,UAAU,QAAA,CAAA,CACZ,EACF,SACC,MACC,CAAA,SAAA,OAAC,QAAA,CAAM,UAAU,+CAA+C,SAEhE,gBAAA,EACAb,EAAA,IAAChF,EAAA,CACC,YAAY,oBACZ,MAAO+F,EAAQ,KACf,SAAWF,GACT1B,EACEnC,EAAK,GACL+D,EAAQ,GACR,OACAF,EAAE,OAAO,KACX,EAEF,UAAU,SACV,YACGb,EAAAA,IAAA,OAAA,CAAK,UAAU,gBACb,SAAA,OAAO,SAAS,MACnB,CAAA,CAAA,CAAA,CAEJ,CACF,CAAA,CAAA,EACF,EACAA,EAAA,IAACK,EAAA,CACC,OAAM,GACN,WAAOS,EAAe,EAAA,EACtB,QAAS,IACP7B,EACEjC,EAAK,GACL+D,EAAQ,EACV,EAEF,KAAK,OAAA,CAAA,CACP,CAAA,CACF,CACF,CAAA,CAAA,EA5DKA,EAAQ,EAAA,CA6Df,CAAA,QAIH,MAAI,CAAA,UAAU,6BAA6B,SAE5C,wBAAA,CAAA,CAAA,CAAA,CAEJ,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EAjLK/D,EAAK,EAAA,CAkLZ,CAAA,CAEJ,CAAA,CAAA,CACF,EA/MI,GAgNN,EAGAgD,EAAA,IAACnF,GAAA,CACC,aACG,OAAK,CAAA,UAAU,0BAA0B,SAAc,iBAAA,EAI1D,SAAAqF,EAAA,KAACM,EAAA,CACC,SAAU,GACV,UAAU,gCACV,UAAW,CAAE,QAAS,MAAO,EAC7B,MACER,EAAA,IAACK,EAAA,CACC,WAAOM,EAAa,EAAA,EACpB,QAASvB,EACT,KAAK,UACL,KAAK,QACN,SAAA,WAAA,CAED,EAGD,SAAA,CAAArD,EAAO,SAAW,GAChBiE,MAAA,MAAI,CAAA,UAAU,iCAAiC,SAEhD,sBAAA,EAEFA,EAAA,IAACY,EAAA,CACC,WAAY7E,EACZ,WAAasB,GACX2C,EAAA,IAACY,EAAK,KAAL,CAEC,UAAU,kFAEV,eAAC,MAAI,CAAA,UAAU,SACb,SAACV,EAAAA,KAAA,MAAA,CAAI,UAAU,8DACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,+CACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,OAAC,QAAA,CAAM,UAAU,+CAA+C,SAEhE,cAAA,EACAF,EAAA,IAAChF,EAAA,CACC,YAAY,aACZ,MAAOqC,EAAM,KACb,SAAWwD,GACTtB,EACElC,EAAM,GACN,OACAwD,EAAE,OAAO,KACX,EAEF,UAAU,QAAA,CAAA,CACZ,EACF,SACC,MACC,CAAA,SAAA,OAAC,QAAA,CAAM,UAAU,+CAA+C,SAEhE,aAAA,EACAb,EAAA,IAAChF,EAAA,CACC,YAAY,yBACZ,MAAOqC,EAAM,IACb,SAAWwD,GACTtB,EACElC,EAAM,GACN,MACAwD,EAAE,OAAO,KACX,EAEF,UAAU,QAAA,CAAA,CACZ,CACF,CAAA,CAAA,EACF,EACCX,EAAAA,KAAA,MAAI,CAAA,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,OAAC,QAAA,CAAM,UAAU,+CAA+C,SAEhE,aAAA,EACAF,EAAA,IAAChF,EAAA,CACC,YAAY,aACZ,MAAOqC,EAAM,KACb,SAAWwD,GACTtB,EACElC,EAAM,GACN,OACAwD,EAAE,OAAO,KACX,EAEF,UAAU,QAAA,CAAA,CACZ,EACF,SACC,MACC,CAAA,SAAA,OAAC,QAAA,CAAM,UAAU,+CAA+C,SAEhE,cAAA,EACCX,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAF,EAAA,IAAC7B,EAAQ,CAAA,GAAGwB,EAAqBtC,EAAM,EAAE,EACvC,SAAA2C,EAAA,IAACK,EAAA,CACC,WAAOK,EAAe,EAAA,EACtB,QAASjF,EACT,UAAU,OACX,SAAA,aAAA,CAAA,EAGH,EACC4B,EAAM,KACJ2C,MAAA,MAAA,CAAI,UAAU,6DACb,SAAAA,EAAA,IAAC,MAAA,CACC,IAAK3C,EAAM,KACX,IAAI,qBACJ,UAAU,kCAAA,CAAA,CAEd,CAAA,EAEC2C,EAAAA,IAAA,MAAI,CAAA,UAAU,wBAAwB,SAEvC,kBAAA,CAAA,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACAA,EAAA,IAACK,EAAA,CACC,OAAM,GACN,WAAOS,EAAe,EAAA,EACtB,QAAS,IAAMxB,EAAkBjC,EAAM,EAAE,EACzC,UAAU,SAAA,CAAA,CACZ,CAAA,CACF,CACF,CAAA,CAAA,EAlGKA,EAAM,EAAA,CAmGb,CAAA,CAEJ,CAAA,CAAA,CACF,EAhII,GAAA,CAiIN,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAEJ,EC7+BM,CAAE,MAAAxC,EAAU,EAAAC,GACZ,CAAEC,SAAAA,EAAa,EAAAC,EAEfgG,GAAkB,CAAC,CAAE,OAAA9F,EAAQ,QAAAC,KAAc,CAC/C,KAAM,CAACC,CAAI,EAAIC,EAAK,QAAQ,EACtB,CAACC,EAASC,CAAU,EAAIC,EAAAA,SAAS,EAAK,EACtC,CAACC,EAAcC,CAAe,EAAIF,EAAAA,SAAS,EAAK,EAChD,CAACG,EAAaC,CAAc,EAAIJ,EAAAA,SAAS,EAAK,EAC9CS,EAAS,4BAET,CAACgF,EAAYC,CAAa,EAAI1F,WAAS,CAC3C,KAAM,CACJ,IAAK,GACL,IAAK,GACL,MAAO,IACP,OAAQ,EACV,EACA,MAAO,CAAC,EACR,QAAS,CACP,MAAO,GACP,MAAO,CAAA,CACT,EACA,OAAQ,CAAC,EACT,UAAW,CACT,KAAM,EAAA,CACR,CACD,EAEDU,EAAAA,UAAU,IAAM,CACVhB,GAAU,CAACS,IACGwF,EAAA,EAChBvF,EAAe,EAAI,EACrB,EACC,CAACV,EAAQS,CAAW,CAAC,EAExB,MAAMwF,EAAkB,SAAY,SAC9B,GAAA,CACF5F,EAAW,EAAI,EACf,MAAMa,EAAW,MAAM,MAAM,GAAGH,CAAM,iBAAiB,EAEnD,GAAA,CAACG,EAAS,GAAI,CACZ,GAAAA,EAAS,SAAW,IAAK,CACJC,EAAA,EACvB,MAAA,CAEI,MAAA,IAAI,MAAM,6BAA6B,CAAA,CAGzC,MAAAC,EAAO,MAAMF,EAAS,KAAK,EACjC8E,EAAc5E,CAAI,EAGlBlB,EAAK,eAAe,CAClB,OAAMoB,EAAAF,EAAK,OAAL,YAAAE,EAAW,MAAO,GACxB,gBAAeD,EAAAD,EAAK,YAAL,YAAAC,EAAgB,OAAQ,EAAA,CACxC,QACMe,EAAO,CACN,QAAA,MAAM,8BAA+BA,CAAK,EAClDC,EAAQ,MAAM,mDAAmD,EAC1ClB,EAAA,CAAA,QACvB,CACAd,EAAW,EAAK,CAAA,CAEpB,EAEMc,EAAyB,IAAM,CACnC,MAAM+E,EAAc,CAClB,KAAM,CACJ,IAAK,yBACL,IAAK,aACL,MAAO,IACP,OAAQ,EACV,EACA,MAAO,CACL,CAAE,KAAM,OAAQ,IAAK,GAAI,EACzB,CAAE,KAAM,WAAY,IAAK,WAAY,EACrC,CAAE,KAAM,cAAe,IAAK,cAAe,EAC3C,CAAE,KAAM,WAAY,IAAK,WAAY,EACrC,CAAE,KAAM,UAAW,IAAK,UAAW,EACnC,CAAE,KAAM,eAAgB,IAAK,aAAc,EAC3C,CAAE,KAAM,cAAe,IAAK,cAAe,EAC3C,CAAE,KAAM,aAAc,IAAK,UAAW,CACxC,EACA,QAAS,CACP,MAAO,UACP,MAAO,CACL,CAAE,KAAM,QAAS,KAAM,iBAAkB,IAAK,qBAAsB,EACpE,CAAE,KAAM,QAAS,KAAM,wBAAyB,IAAK,0BAA2B,EAChF,CAAE,KAAM,WAAY,KAAM;AAAA,iCAAiE,IAAK,GAAI,CAAA,CAExG,EACA,OAAQ,CACN,CAAE,KAAM,WAAY,IAAK,uBAAwB,KAAM,WAAY,QAAS,uBAAwB,EACpG,CAAE,KAAM,UAAW,IAAK,sBAAuB,KAAM,UAAW,QAAS,sBAAuB,EAChG,CAAE,KAAM,YAAa,IAAK,wBAAyB,KAAM,YAAa,QAAS,wBAAyB,EACxG,CAAE,KAAM,WAAY,IAAK,uBAAwB,KAAM,WAAY,QAAS,uBAAwB,CACtG,EACA,UAAW,CACT,KAAM,8BAAA,CAEV,EAEAF,EAAcE,CAAW,EACzBhG,EAAK,eAAe,CAClB,KAAMgG,EAAY,KAAK,IACvB,cAAeA,EAAY,UAAU,IAAA,CACtC,CACH,EAEM5D,EAAoB,MAAOC,EAAMC,IAAU,CACzC,MAAAC,EAAW,IAAI,SACZA,EAAA,OAAO,QAASF,CAAI,EACpBE,EAAA,OAAO,WAAY,OAAO,EAE/B,GAAA,CACFjC,EAAgB,EAAI,EACpB,MAAMU,EAAW,MAAM,MAAM,GAAGH,CAAM,WAAY,CAChD,OAAQ,OACR,KAAM0B,CAAA,CACP,EAEG,GAAA,CAACvB,EAAS,GACN,MAAA,IAAI,MAAM,eAAe,EAI3B,MAAAwB,EAAc,IADP,MAAMxB,EAAS,KAAK,GACL,KAAK,GAEjC,OAAA8E,EAAuBG,IAAA,CACrB,GAAGA,EACH,KAAM,CACJ,GAAGA,EAAK,KACR,CAAC3D,CAAK,EAAGE,CAAA,CACX,EACA,EAEFxC,EAAK,eAAe,CAClB,KAAMwC,CAAA,CACP,EAEMA,QACAN,EAAO,CACN,eAAA,MAAM,gBAAiBA,CAAK,EACpCC,EAAQ,MAAM,qBAAqB,EAC5B,IAAA,QACP,CACA7B,EAAgB,EAAK,CAAA,CAEzB,EAEMoC,EAAc,CAClB,KAAM,OACN,eAAgB,GAChB,cAAe,MAAO,CAAE,KAAAL,EAAM,UAAAM,EAAW,QAAAC,KAAc,CACrD,MAAMC,EAAW,MAAMT,EAAkBC,EAAM,KAAK,EAChDQ,EACFF,EAAUE,EAAUR,CAAI,EAEhBO,EAAA,IAAI,MAAM,eAAe,CAAC,CAEtC,EACA,aAAeP,GAAS,CACtB,MAAMS,EAAUT,EAAK,KAAK,WAAW,QAAQ,EAC7C,GAAI,CAACS,EACHX,OAAAA,EAAQ,MAAM,kCAAkC,EACzCY,EAAO,YAEhB,MAAMC,EAASX,EAAK,KAAO,KAAO,KAAO,EACzC,OAAKW,EAIEF,GAAWE,GAHhBb,EAAQ,MAAM,iCAAiC,EACxCY,EAAO,YAEE,CAEtB,EAEMmD,EAAgB,IAAM,CAC1B,MAAMC,EAAU,CACd,GAAI,KAAK,IAAI,EACb,KAAM,GACN,IAAK,EACP,EACAL,EAAuBG,IAAA,CACrB,GAAGA,EACH,MAAO,CAAC,GAAGA,EAAK,MAAOE,CAAO,CAAA,EAC9B,CACJ,EAEMC,EAAoBC,GAAU,CAClCP,EAAuBG,IAAA,CACrB,GAAGA,EACH,MAAOA,EAAK,MAAM,OAAO,CAACK,EAAG,IAAM,IAAMD,CAAK,CAAA,EAC9C,CACJ,EAEME,EAAmB,CAACF,EAAO/D,EAAOkB,IAAU,CAChDsC,EAAsBG,GAAA,CACpB,MAAMO,EAAe,CAAC,GAAGP,EAAK,KAAK,EACnC,OAAAO,EAAaH,CAAK,EAAI,CACpB,GAAGG,EAAaH,CAAK,EACrB,CAAC/D,CAAK,EAAGkB,CACX,EACO,CACL,GAAGyC,EACH,MAAOO,CACT,CAAA,CACD,CACH,EAEMC,EAAuB,IAAM,CACjC,MAAMvD,EAAU,CACd,GAAI,KAAK,IAAI,EACb,KAAM,GACN,KAAM,GACN,IAAK,EACP,EACA4C,EAAuBG,IAAA,CACrB,GAAGA,EACH,QAAS,CACP,GAAGA,EAAK,QACR,MAAO,CAAC,GAAGA,EAAK,QAAQ,MAAO/C,CAAO,CAAA,CACxC,EACA,CACJ,EAEMwD,EAA2BL,GAAU,CACzCP,EAAuBG,IAAA,CACrB,GAAGA,EACH,QAAS,CACP,GAAGA,EAAK,QACR,MAAOA,EAAK,QAAQ,MAAM,OAAO,CAACK,EAAG,IAAM,IAAMD,CAAK,CAAA,CACxD,EACA,CACJ,EAEMM,EAA0B,CAACN,EAAO/D,EAAOkB,IAAU,CACvDsC,EAAsBG,GAAA,CACpB,MAAMxC,EAAe,CAAC,GAAGwC,EAAK,QAAQ,KAAK,EAC3C,OAAAxC,EAAa4C,CAAK,EAAI,CACpB,GAAG5C,EAAa4C,CAAK,EACrB,CAAC/D,CAAK,EAAGkB,CACX,EACO,CACL,GAAGyC,EACH,QAAS,CACP,GAAGA,EAAK,QACR,MAAOxC,CAAA,CAEX,CAAA,CACD,CACH,EAEMmD,EAAsB,IAAM,CAChC,MAAM1D,EAAU,CACd,GAAI,KAAK,IAAI,EACb,KAAM,GACN,IAAK,GACL,KAAM,GACN,QAAS,EACX,EACA4C,EAAuBG,IAAA,CACrB,GAAGA,EACH,OAAQ,CAAC,GAAGA,EAAK,OAAQ/C,CAAO,CAAA,EAChC,CACJ,EAEM2D,EAA0BR,GAAU,CACxCP,EAAuBG,IAAA,CACrB,GAAGA,EACH,OAAQA,EAAK,OAAO,OAAO,CAACK,EAAG,IAAM,IAAMD,CAAK,CAAA,EAChD,CACJ,EAEMS,EAAyB,CAACT,EAAO/D,EAAOkB,IAAU,CACtDsC,EAAsBG,GAAA,CACpB,MAAMc,EAAgB,CAAC,GAAGd,EAAK,MAAM,EACrC,OAAAc,EAAcV,CAAK,EAAI,CACrB,GAAGU,EAAcV,CAAK,EACtB,CAAC/D,CAAK,EAAGkB,CACX,EACO,CACL,GAAGyC,EACH,OAAQc,CACV,CAAA,CACD,CACH,EAEMvC,EAAe,SAAY,CAC3B,GAAA,CACI,MAAAC,EAAS,MAAMzE,EAAK,eAAe,EACnC0E,EAAc,CAClB,KAAM,CACJ,GAAGmB,EAAW,KACd,IAAKpB,EAAO,IACd,EACA,MAAOoB,EAAW,MACf,UAAemB,EAAK,MAAQA,EAAK,GAAG,EACvC,QAAS,CACP,MAAOnB,EAAW,QAAQ,MAC1B,MAAOA,EAAW,QAAQ,MACvB,OAAejE,GAAAA,EAAK,MAAQA,EAAK,GAAG,CACzC,EACA,OAAQiE,EAAW,OAChB,OAAOoB,GAAUA,EAAO,MAAQA,EAAO,KAAOA,EAAO,IAAI,EAC5D,UAAW,CACT,KAAMxC,EAAO,aAAA,CAEjB,EAEMzD,EAAW,MAAM,MAAM,GAAGH,CAAM,kBAAmB,CACvD,OAAQ,QACR,QAAS,CACP,eAAgB,kBAClB,EACA,KAAM,KAAK,UAAU6D,CAAW,CAAA,CACjC,EAEG,GAAA,CAAC1D,EAAS,GAAI,CACV,MAAA2D,EAAY,MAAM3D,EAAS,KAAK,EACtC,MAAM,IAAI,MAAM2D,EAAU,SAAW,4BAA4B,CAAA,CAGnEtB,EAAK,KAAK,CACR,SAAU,UACV,KAAM,UACN,MAAO,8BACP,kBAAmB,GACnB,MAAO,GAAA,CACR,EACOtD,EAAA,QACDmC,EAAO,CACN,QAAA,MAAM,4BAA6BA,CAAK,EACxCC,EAAA,MAAMD,EAAM,SAAW,yBAAyB,CAAA,CAE5D,EAGE,OAAA0C,EAAA,IAACC,GAAA,CACC,YACG,OAAK,CAAA,UAAU,kCAAkC,SAElD,sBAAA,EAEF,KAAM/E,EACN,SAAUC,EACV,OAAQ,CACN6E,EAAA,IAACK,EAAA,CAEC,QAASlF,EACT,UAAU,yDACX,SAAA,QAAA,EAHK,MAKN,EACA6E,EAAA,IAACK,EAAA,CAEC,KAAK,UACL,QAAST,EACT,QAAAtE,EACA,UAAU,qDACX,SAAA,cAAA,EALK,QAAA,CAQR,EACA,MAAO,IACP,UAAU,6BACV,OAAQ,CAAE,KAAM,CAAE,QAAS,OAAS,EACpC,eAAc,GAEd,SAAA0E,EAAA,IAACM,GAAK,CAAA,SAAUhF,EACd,SAAC4E,EAAAA,KAAA7E,GAAK,KAAAD,EAAY,OAAO,WAAW,UAAU,YAC5C,SAAA,CAAA4E,EAAA,IAACQ,EAAA,CACC,MAAM,OACN,SAAU,GACV,UAAU,gCACV,UAAW,CACT,WAAY,mDACZ,aAAc,mBAChB,EAEA,SAAAN,EAAA,KAAC7E,EAAK,KAAL,CACC,KAAK,OACL,YACG,OAAK,CAAA,UAAU,4BAA4B,SAE5C,kBAAA,EAEF,MAAO,CAAC,CAAE,SAAU,GAAM,QAAS,6BAA8B,EAEjE,SAAA,CAAC6E,EAAAA,KAAA,MAAA,CAAI,UAAU,aACb,SAAA,CAAAF,EAAA,IAAChF,EAAA,CACC,MAAOiG,EAAW,KAAK,IACvB,SAAWJ,GAAMK,EAAuBG,IAAA,CACtC,GAAGA,EACH,KAAM,CAAE,GAAGA,EAAK,KAAM,IAAKR,EAAE,OAAO,KAAM,CAAA,EAC1C,EACF,YAAY,+BACZ,UAAU,+DAAA,CACZ,EACCb,EAAAA,IAAA7B,EAAQ,CAAA,GAAGL,EACV,SAAAkC,EAAA,IAACK,EAAA,CACC,WAAOK,EAAe,EAAA,EACtB,QAASjF,EACT,UAAU,2DACX,SAAA,QAAA,CAAA,CAGH,CAAA,CAAA,EACF,EACCwF,EAAW,KAAK,KACdjB,EAAA,IAAA,MAAA,CAAI,UAAU,OACb,SAAAA,EAAA,IAAC,MAAA,CACC,IAAKiB,EAAW,KAAK,IACrB,IAAI,sBACJ,UAAU,qBAAA,CAAA,CAEd,CAAA,CAAA,CAAA,CAAA,CAEJ,CACF,EAEAjB,EAAA,IAACQ,EAAA,CACC,MAAM,cACN,SAAU,GACV,UAAU,gCACV,UAAW,CACT,WAAY,mDACZ,aAAc,mBAChB,EACA,MACER,EAAA,IAACK,EAAA,CACC,KAAK,UACL,WAAOM,EAAa,EAAA,EACpB,QAASW,EACT,UAAU,kDACX,SAAA,UAAA,CAED,EAGF,SAAAtB,EAAA,IAACY,EAAA,CACC,WAAYK,EAAW,MACvB,WAAY,CAACmB,EAAMX,IAChBzB,EAAAA,IAAAY,EAAK,KAAL,CAAsB,UAAU,+CAC/B,SAACV,EAAAA,KAAA,MAAA,CAAI,UAAU,+CACb,SAAA,CAAAF,EAAA,IAAChF,EAAA,CACC,YAAY,YACZ,MAAOoH,EAAK,KACZ,SAAWvB,GAAMc,EAAiBF,EAAO,OAAQZ,EAAE,OAAO,KAAK,EAC/D,UAAU,wDAAA,CACZ,EACCX,EAAAA,KAAA,MAAI,CAAA,UAAU,aACb,SAAA,CAAAF,EAAA,IAAChF,EAAA,CACC,YAAY,MACZ,MAAOoH,EAAK,IACZ,SAAWvB,GAAMc,EAAiBF,EAAO,MAAOZ,EAAE,OAAO,KAAK,EAC9D,UAAU,+DAAA,CACZ,EACAb,EAAA,IAACK,EAAA,CACC,OAAM,GACN,WAAOS,EAAe,EAAA,EACtB,QAAS,IAAMU,EAAiBC,CAAK,CAAA,CAAA,CACvC,CACF,CAAA,CAAA,CACF,CAAA,GArBcA,CAsBhB,CAAA,CAAA,CAEJ,CACF,EAEAzB,EAAA,IAACQ,EAAA,CACC,MAAM,sBACN,SAAU,GACV,UAAU,gCACV,UAAW,CACT,WAAY,mDACZ,aAAc,mBAChB,EACA,MACER,EAAA,IAACK,EAAA,CACC,KAAK,UACL,WAAOM,EAAa,EAAA,EACpB,QAASkB,EACT,UAAU,kDACX,SAAA,aAAA,CAED,EAGF,SAAA7B,EAAA,IAACY,EAAA,CACC,WAAYK,EAAW,QAAQ,MAC/B,WAAY,CAACjE,EAAMyE,UAChBb,EAAK,KAAL,CAAsB,UAAU,+CAC/B,eAAC,MAAI,CAAA,UAAU,mBACb,gBAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAZ,EAAA,IAAChF,EAAA,CACC,YAAY,sCACZ,MAAOgC,EAAK,KACZ,SAAW6D,GAAMkB,EAAwBN,EAAO,OAAQZ,EAAE,OAAO,KAAK,EACtE,UAAU,wDAAA,CACZ,EACAb,EAAA,IAAChF,EAAA,CACC,YAAY,OACZ,MAAOgC,EAAK,KACZ,SAAW6D,GAAMkB,EAAwBN,EAAO,OAAQZ,EAAE,OAAO,KAAK,EACtE,UAAU,wDAAA,CACZ,EACCX,EAAAA,KAAA,MAAI,CAAA,UAAU,aACb,SAAA,CAAAF,EAAA,IAAChF,EAAA,CACC,YAAY,MACZ,MAAOgC,EAAK,IACZ,SAAW6D,GAAMkB,EAAwBN,EAAO,MAAOZ,EAAE,OAAO,KAAK,EACrE,UAAU,+DAAA,CACZ,EACAb,EAAA,IAACK,EAAA,CACC,OAAM,GACN,WAAOS,EAAe,EAAA,EACtB,QAAS,IAAMgB,EAAwBL,CAAK,CAAA,CAAA,CAC9C,CACF,CAAA,CAAA,EACF,CAAA,CACF,CAAA,EA7BcA,CA8BhB,CAAA,CAAA,CAEJ,CACF,EAEAzB,EAAA,IAACQ,EAAA,CACC,MAAM,eACN,SAAU,GACV,UAAU,gCACV,UAAW,CACT,WAAY,mDACZ,aAAc,mBAChB,EACA,MACER,EAAA,IAACK,EAAA,CACC,KAAK,UACL,WAAOM,EAAa,EAAA,EACpB,QAASqB,EACT,UAAU,kDACX,SAAA,iBAAA,CAED,EAGF,SAAAhC,EAAA,IAACY,EAAA,CACC,WAAYK,EAAW,OACvB,WAAY,CAACoB,EAAQZ,UAClBb,EAAK,KAAL,CAAsB,UAAU,+CAC/B,eAAC,MAAI,CAAA,UAAU,mBACb,gBAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAZ,EAAA,IAAChF,EAAA,CACC,YAAY,gBACZ,MAAOqH,EAAO,KACd,SAAWxB,GAAMqB,EAAuBT,EAAO,OAAQZ,EAAE,OAAO,KAAK,EACrE,UAAU,wDAAA,CACZ,EACAb,EAAA,IAAChF,EAAA,CACC,YAAY,MACZ,MAAOqH,EAAO,IACd,SAAWxB,GAAMqB,EAAuBT,EAAO,MAAOZ,EAAE,OAAO,KAAK,EACpE,UAAU,wDAAA,CACZ,EACAb,EAAA,IAAChF,EAAA,CACC,YAAY,iCACZ,MAAOqH,EAAO,KACd,SAAWxB,GAAMqB,EAAuBT,EAAO,OAAQZ,EAAE,OAAO,KAAK,EACrE,UAAU,wDAAA,CACZ,EACCX,EAAAA,KAAA,MAAI,CAAA,UAAU,aACb,SAAA,CAAAF,EAAA,IAAChF,EAAA,CACC,YAAY,UACZ,MAAOqH,EAAO,QACd,SAAWxB,GAAMqB,EAAuBT,EAAO,UAAWZ,EAAE,OAAO,KAAK,EACxE,UAAU,+DAAA,CACZ,EACAb,EAAA,IAACK,EAAA,CACC,OAAM,GACN,WAAOS,EAAe,EAAA,EACtB,QAAS,IAAMmB,EAAuBR,CAAK,CAAA,CAAA,CAC7C,CACF,CAAA,CAAA,EACF,CAAA,CACF,CAAA,EAnCcA,CAoChB,CAAA,CAAA,CAEJ,CACF,EAEAzB,EAAA,IAACQ,EAAA,CACC,MAAM,wBACN,SAAU,GACV,UAAU,gCACV,UAAW,CACT,WAAY,mDACZ,aAAc,mBAChB,EAEA,SAAAR,EAAA,IAAC3E,EAAK,KAAL,CACC,KAAK,gBACL,YACG,OAAK,CAAA,UAAU,4BAA4B,SAE5C,iBAAA,EAGF,SAAA2E,EAAA,IAAChF,EAAA,CACC,YAAY,+BACZ,UAAU,wDAAA,CAAA,CACZ,CAAA,CACF,CAAA,CACF,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAEJ,ECvmBM,CAAE,SAAAD,EAAa,EAAAC,EAEfsH,GAAmB,CAAC,CAAE,OAAApH,EAAQ,QAAAC,KAAc,CAC/C,KAAM,CAACoH,EAAeC,CAAc,EAAIhH,EAAAA,SAAS,EAAK,EAChD,CAACiH,EAAeC,CAAc,EAAIlH,EAAAA,SAAS,EAAK,EAGrD,OAAA0E,EAAA,KAAC,MAAI,CAAA,UAAU,0DAEb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,gDAEb,SAAA,CAACF,EAAAA,IAAA,SAAA,CAAO,UAAU,2BAA2B,QAAS,IAAMwC,EAAe,EAAI,EAAG,SAAM,QAAA,CAAA,EACxFxC,EAAAA,IAAC,UAAO,UAAU,2BAA2B,QAAS,IAAM0C,EAAe,EAAI,EAAG,SAAM,QAAA,CAAA,CAAA,EAC1F,EAEA1C,MAAC/E,IAAgB,OAAQsH,EAAe,QAAS,IAAMC,EAAe,EAAK,EAAG,EAC9ExC,MAACgB,IAAgB,OAAQyB,EAAe,QAAS,IAAMC,EAAe,EAAK,CAAG,CAAA,CAAA,EAChF,CAEJ"}