{"version":3,"file":"AboutEditor-BljFTiwT.js","sources":["../../src/components/editor_components/editor_modals/about_modals/About2Modal.jsx","../../src/components/editor_components/editor_modals/about_modals/TeamModal.jsx","../../src/components/editor_components/editor_modals/about_modals/MessageModal.jsx","../../src/components/editor_components/editor_modals/about_modals/CoreValuesModal.jsx","../../src/components/editor_components/editor_modals/about_modals/AboutDescriptionModal.jsx","../../src/components/editor_components/AboutEditor.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Modal, Form, Input, Button, message, Card, Divider, Space, Spin, Tag, Collapse, Select } from 'antd';\nimport { PlusOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { HexColorPicker } from 'react-colorful';\nimport Swal from 'sweetalert2';\n\nconst { Panel } = Collapse;\nconst { TextArea } = Input;\n\n// KAF TAR company colors\nconst COLORS = {\n  primary: '#7bbf42', // Vibrant green\n  secondary: '#f9b414', // Yellow\n  dark: '#040404', // Dark text\n  accent: '#70308c', // Purple\n  light: '#ffffff', // White\n};\n\nconst About2Modal = ({ isOpen, onClose }) => {\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const [saving, setSaving] = useState(false);\n  const [activePanels, setActivePanels] = useState(['vision', 'mission', 'values']);\n  const apiUrl = import.meta.env.VITE_API_URL;\n\n  // Emoji options for vision, mission, and values\n  const emojiOptions = [\n    'üëÅÔ∏è', 'üéØ', '‚ù§Ô∏è', 'üí°', 'ü§ù', 'üèóÔ∏è', 'üî®', '‚ö°', 'üöø', 'üß±',\n    'üè¢', 'üè†', 'üå±', '‚ú®', 'üåü', 'üíé', '‚öôÔ∏è', 'üõ†Ô∏è', 'üîß', 'üìê'\n  ];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!isOpen) return;\n      \n      setLoading(true);\n      try {\n        const response = await fetch(`${apiUrl}/about/about2`);\n        if (!response.ok) throw new Error('Failed to fetch data');\n        \n        // Sample data structure if API is not ready\n        const data = await response.json() || {\n          vision: {\n            title: \"Our Vision\",\n            content: \"At our company, we recognize the significance of smooth business operations for fostering growth. To empower businesses, we provide proficient support services that alleviate their time and resource constraints.\",\n            icon: \"üëÅÔ∏è\"\n          },\n          mission: {\n            title: \"Our Mission\",\n            content: \"We support businesses with a wide range of manpower ensuring efficient and timely assistance across diverse needs.\",\n            icon: \"üéØ\"\n          },\n          values: [\n            {\n              title: \"Client Focus\",\n              content: \"Absolute dedication to client needs and satisfaction\",\n              icon: \"‚ù§Ô∏è\"\n            },\n            {\n              title: \"Innovation\",\n              content: \"Continuous improvement through innovative solutions\",\n              icon: \"üí°\"\n            },\n            {\n              title: \"Integrity\",\n              content: \"Ethical business practices and transparency\",\n              icon: \"ü§ù\"\n            }\n          ]\n        };\n        \n        form.setFieldsValue(data);\n      } catch (error) {\n        message.error('Failed to load about data');\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [isOpen, apiUrl, form]);\n\n  const handleSave = async () => {\n    setSaving(true);\n    try {\n      const values = await form.validateFields();\n      \n      const response = await fetch(`${apiUrl}/about/about2/`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(values),\n      });\n\n      if (!response.ok) throw new Error('Failed to save');\n      \n      Swal.fire({\n        position: \"center\",\n        icon: \"success\",\n        title: \"About Section Updated\",\n        showConfirmButton: false,\n        timer: 2000,\n        background: COLORS.light,\n        color: COLORS.dark,\n      });\n      onClose();\n    } catch (error) {\n      message.error('Failed to save changes');\n      console.error(error);\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  return (\n    <Modal\n      title={\n        <div className=\"flex items-center\">\n          <span className=\"text-2xl font-bold\" style={{ color: COLORS.dark }}>\n            Edit About Section\n          </span>\n        </div>\n      }\n      open={isOpen}\n      onCancel={onClose}\n      width={900}\n      footer={[\n        <Button \n          key=\"cancel\" \n          onClick={onClose} \n          disabled={saving} \n          className=\"px-6 h-10 rounded-lg font-medium\"\n          style={{ \n            borderColor: COLORS.dark, \n            color: COLORS.dark,\n            backgroundColor: COLORS.light\n          }}\n        >\n          Cancel\n        </Button>,\n        <Button \n          key=\"save\" \n          type=\"primary\" \n          onClick={handleSave}\n          loading={saving}\n          style={{ \n            backgroundColor: COLORS.primary, \n            borderColor: COLORS.primary,\n            color: COLORS.light\n          }}\n          className=\"px-6 h-10 rounded-lg font-medium hover:opacity-90\"\n        >\n          {saving ? 'Saving...' : 'Save Changes'}\n        </Button>,\n      ]}\n      destroyOnClose\n      className=\"rounded-xl overflow-hidden\"\n      bodyStyle={{ padding: '24px' }}\n    >\n      <Spin spinning={loading}>\n        <Form form={form} layout=\"vertical\" className=\"space-y-6\">\n          <Collapse \n            activeKey={activePanels}\n            onChange={setActivePanels}\n            bordered={false}\n            className=\"bg-white\"\n          >\n            {/* Vision Section */}\n            <Panel \n              header={\n                <span className=\"font-semibold text-lg\" style={{ color: COLORS.dark }}>\n                  Vision\n                </span>\n              } \n              key=\"vision\"\n              className=\"mb-4\"\n              extra={\n                <span className=\"text-xl\">\n                  {form.getFieldValue(['vision', 'icon']) || 'üëÅÔ∏è'}\n                </span>\n              }\n            >\n              <div className=\"grid grid-cols-1 md:grid-cols-12 gap-6\">\n                <div className=\"md:col-span-2\">\n                  <Form.Item\n                    name={['vision', 'icon']}\n                    label={<span className=\"font-medium\" style={{ color: COLORS.dark }}>Icon</span>}\n                    rules={[{ required: true, message: 'Please select an icon' }]}\n                  >\n                    <Select \n                      placeholder=\"Select emoji\" \n                      className=\"w-full\"\n                      dropdownClassName=\"emoji-dropdown\"\n                    >\n                      {emojiOptions.map(emoji => (\n                        <Select.Option key={emoji} value={emoji}>\n                          <span className=\"text-xl\">{emoji}</span>\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  </Form.Item>\n                </div>\n                <div className=\"md:col-span-10 space-y-4\">\n                  <Form.Item\n                    name={['vision', 'title']}\n                    label={<span className=\"font-medium\" style={{ color: COLORS.dark }}>Title</span>}\n                    rules={[{ required: true, message: 'Please enter title' }]}\n                  >\n                    <Input \n                      placeholder=\"Our Vision\" \n                      className=\"rounded-lg hover:border-green-500 focus:border-green-500\"\n                    />\n                  </Form.Item>\n                  <Form.Item\n                    name={['vision', 'content']}\n                    label={<span className=\"font-medium\" style={{ color: COLORS.dark }}>Content</span>}\n                    rules={[{ required: true, message: 'Please enter content' }]}\n                  >\n                    <TextArea \n                      rows={4} \n                      placeholder=\"At our company, we recognize the significance...\" \n                      className=\"rounded-lg hover:border-green-500 focus:border-green-500\"\n                    />\n                  </Form.Item>\n                </div>\n              </div>\n            </Panel>\n\n            {/* Mission Section */}\n            <Panel \n              header={\n                <span className=\"font-semibold text-lg\" style={{ color: COLORS.dark }}>\n                  Mission\n                </span>\n              } \n              key=\"mission\"\n              className=\"mb-4\"\n              extra={\n                <span className=\"text-xl\">\n                  {form.getFieldValue(['mission', 'icon']) || 'üéØ'}\n                </span>\n              }\n            >\n              <div className=\"grid grid-cols-1 md:grid-cols-12 gap-6\">\n                <div className=\"md:col-span-2\">\n                  <Form.Item\n                    name={['mission', 'icon']}\n                    label={<span className=\"font-medium\" style={{ color: COLORS.dark }}>Icon</span>}\n                    rules={[{ required: true, message: 'Please select an icon' }]}\n                  >\n                    <Select \n                      placeholder=\"Select emoji\" \n                      className=\"w-full\"\n                      dropdownClassName=\"emoji-dropdown\"\n                    >\n                      {emojiOptions.map(emoji => (\n                        <Select.Option key={emoji} value={emoji}>\n                          <span className=\"text-xl\">{emoji}</span>\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  </Form.Item>\n                </div>\n                <div className=\"md:col-span-10 space-y-4\">\n                  <Form.Item\n                    name={['mission', 'title']}\n                    label={<span className=\"font-medium\" style={{ color: COLORS.dark }}>Title</span>}\n                    rules={[{ required: true, message: 'Please enter title' }]}\n                  >\n                    <Input \n                      placeholder=\"Our Mission\" \n                      className=\"rounded-lg hover:border-green-500 focus:border-green-500\"\n                    />\n                  </Form.Item>\n                  <Form.Item\n                    name={['mission', 'content']}\n                    label={<span className=\"font-medium\" style={{ color: COLORS.dark }}>Content</span>}\n                    rules={[{ required: true, message: 'Please enter content' }]}\n                  >\n                    <TextArea \n                      rows={4} \n                      placeholder=\"We support businesses with a wide range of manpower...\" \n                      className=\"rounded-lg hover:border-green-500 focus:border-green-500\"\n                    />\n                  </Form.Item>\n                </div>\n              </div>\n            </Panel>\n\n            {/* Values Section */}\n            <Panel \n              header={\n                <span className=\"font-semibold text-lg\" style={{ color: COLORS.dark }}>\n                  Core Values\n                </span>\n              } \n              key=\"values\"\n              className=\"mb-4\"\n            >\n              <Form.List name=\"values\">\n                {(fields, { add, remove }) => (\n                  <div className=\"space-y-4\">\n                    {fields.map(({ key, name, ...restField }) => (\n                      <div key={key} className=\"border border-gray-200 rounded-lg p-4 bg-gray-50 hover:bg-gray-100 transition-colors\">\n                        <div className=\"flex justify-between items-center mb-3\">\n                          <h4 className=\"font-medium\" style={{ color: COLORS.dark }}>\n                            Value {name + 1}\n                          </h4>\n                          <Button\n                            danger\n                            type=\"text\"\n                            icon={<DeleteOutlined />}\n                            onClick={() => remove(name)}\n                            style={{ color: '#ff4d4f' }}\n                          />\n                        </div>\n\n                        <div className=\"grid grid-cols-1 md:grid-cols-12 gap-4\">\n                          <div className=\"md:col-span-2\">\n                            <Form.Item\n                              {...restField}\n                              name={[name, 'icon']}\n                              label={<span className=\"font-medium\" style={{ color: COLORS.dark }}>Icon</span>}\n                              rules={[{ required: true, message: 'Please select an icon' }]}\n                            >\n                              <Select \n                                placeholder=\"Select emoji\" \n                                className=\"w-full\"\n                                dropdownClassName=\"emoji-dropdown\"\n                              >\n                                {emojiOptions.map(emoji => (\n                                  <Select.Option key={emoji} value={emoji}>\n                                    <span className=\"text-xl\">{emoji}</span>\n                                  </Select.Option>\n                                ))}\n                              </Select>\n                            </Form.Item>\n                          </div>\n\n                          <div className=\"md:col-span-10 space-y-4\">\n                            <Form.Item\n                              {...restField}\n                              name={[name, 'title']}\n                              label={<span className=\"font-medium\" style={{ color: COLORS.dark }}>Title</span>}\n                              rules={[{ required: true, message: 'Please enter title' }]}\n                            >\n                              <Input \n                                placeholder=\"Client Focus\" \n                                className=\"rounded-lg hover:border-green-500 focus:border-green-500\"\n                              />\n                            </Form.Item>\n\n                            <Form.Item\n                              {...restField}\n                              name={[name, 'content']}\n                              label={<span className=\"font-medium\" style={{ color: COLORS.dark }}>Description</span>}\n                              rules={[{ required: true, message: 'Please enter description' }]}\n                            >\n                              <TextArea \n                                rows={2} \n                                placeholder=\"Absolute dedication to client needs and satisfaction\" \n                                className=\"rounded-lg hover:border-green-500 focus:border-green-500\"\n                              />\n                            </Form.Item>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n\n                    <Button\n                      type=\"dashed\"\n                      onClick={() => add({\n                        icon: '‚ù§Ô∏è',\n                        title: '',\n                        content: ''\n                      })}\n                      icon={<PlusOutlined />}\n                      block\n                      className=\"mt-2 rounded-lg h-10\"\n                      style={{ \n                        borderColor: COLORS.secondary,\n                        color: COLORS.secondary,\n                        backgroundColor: `${COLORS.secondary}10` // 10% opacity\n                      }}\n                    >\n                      Add Core Value\n                    </Button>\n                  </div>\n                )}\n              </Form.List>\n            </Panel>\n          </Collapse>\n        </Form>\n      </Spin>\n    </Modal>\n  );\n};\n\nexport default About2Modal;","import React, { useState, useEffect } from \"react\";\nimport { Modal, Button, Form, Input, message, Upload, Spin, Card, List } from \"antd\";\nimport { UploadOutlined, DeleteOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport Swal from \"sweetalert2\";\n\nconst { TextArea } = Input;\n\nconst TeamModal = ({ isOpen, onClose }) => {\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const [imageLoading, setImageLoading] = useState(false);\n  const [directors, setDirectors] = useState([]);\n  const [initialized, setInitialized] = useState(false);\n\n  useEffect(() => {\n    if (isOpen && !initialized) {\n      fetchDirectorsData();\n      setInitialized(true);\n    }\n  }, [isOpen, initialized]);\n\n  const fetchDirectorsData = async () => {\n    try {\n      setLoading(true);\n      const apiUrl = import.meta.env.VITE_API_URL;\n      const response = await fetch(`${apiUrl}/directors/`);\n\n      if (!response.ok) {\n        if (response.status === 404) {\n          initializeWithDefaults();\n          return;\n        }\n        throw new Error(\"Failed to fetch directors data\");\n      }\n\n      const data = await response.json();\n\n      if (data) {\n        form.setFieldsValue({\n          title: data.title || \"\",\n          description: data.description || \"\",\n        });\n        setDirectors(data.members || []);\n      } else {\n        initializeWithDefaults();\n      }\n    } catch (error) {\n      console.error(\"Error fetching directors data:\", error);\n      message.error(\"Failed to load directors data. Using default values.\");\n      initializeWithDefaults();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const initializeWithDefaults = () => {\n    form.setFieldsValue({\n      title: \"Board of Directors\",\n      description: \"We are trying to build a global community within our Stech Group who believes in progress. Keeping a sustainable progressive plan, we are training up people to be leaders to lead the future. Check our Board of Corporate leaders below.\",\n    });\n    setDirectors([]);\n  };\n\n  const handleImageUpload = async (file, directorId) => {\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    formData.append(\"category\", \"director_photos\");\n\n    try {\n      setImageLoading(true);\n      const apiUrl = import.meta.env.VITE_API_URL;\n      const response = await fetch(`${apiUrl}/images/`, {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Upload failed\");\n      }\n\n      const data = await response.json();\n      const newImageUrl = data.image;\n\n      const updatedDirectors = directors.map(director => \n        director.id === directorId ? { ...director, image: newImageUrl } : director\n      );\n      setDirectors(updatedDirectors);\n\n      return newImageUrl;\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      message.error(\"Image upload failed\");\n      return null;\n    } finally {\n      setImageLoading(false);\n    }\n  };\n\n  const uploadProps = (directorId) => ({\n    name: \"image\",\n    showUploadList: false,\n    customRequest: async ({ file, onSuccess, onError }) => {\n      const imageUrl = await handleImageUpload(file, directorId);\n      if (imageUrl) {\n        onSuccess(imageUrl, file);\n      } else {\n        onError(new Error(\"Upload failed\"));\n      }\n    },\n    beforeUpload: (file) => {\n      const isImage = file.type.startsWith(\"image/\");\n      if (!isImage) {\n        message.error(\"You can only upload image files!\");\n        return Upload.LIST_IGNORE;\n      }\n      const isLt5M = file.size / 1024 / 1024 < 5;\n      if (!isLt5M) {\n        message.error(\"Image must be smaller than 5MB!\");\n        return Upload.LIST_IGNORE;\n      }\n      return isImage && isLt5M;\n    },\n  });\n\n  const handleAddDirector = () => {\n    const newDirector = {\n      id: Date.now(), // temporary ID\n      name: \"\",\n      designation: \"\",\n      image: \"\"\n    };\n    setDirectors([...directors, newDirector]);\n  };\n\n  const handleRemoveDirector = (id) => {\n    setDirectors(directors.filter(director => director.id !== id));\n  };\n\n  const handleDirectorChange = (id, field, value) => {\n    const updatedDirectors = directors.map(director => \n      director.id === id ? { ...director, [field]: value } : director\n    );\n    setDirectors(updatedDirectors);\n  };\n\n  const handleSubmit = async () => {\n    try {\n      const values = await form.validateFields();\n      const updatedData = {\n        title: values.title,\n        description: values.description,\n        members: directors.map(director => ({\n          name: director.name,\n          designation: director.designation,\n          image: director.image\n        })).filter(director => director.name) // filter out directors without a name\n      };\n\n      const apiUrl = import.meta.env.VITE_API_URL;\n      const response = await fetch(`${apiUrl}/directors/`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(updatedData),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to save directors data');\n      }\n\n      Swal.fire({\n        position: \"top-end\",\n        icon: \"success\",\n        title: \"Directors Content Updated Successfully\",\n        showConfirmButton: false,\n        timer: 3000,\n      });\n      onClose();\n    } catch (error) {\n      console.error(\"Error saving directors data:\", error);\n      message.error(error.message || \"Failed to update directors section\");\n    }\n  };\n\n  return (\n    <Modal\n      title={\n        <span className=\"text-xl font-bold text-gray-800\">\n          Edit Board of Directors\n        </span>\n      }\n      open={isOpen}\n      onCancel={onClose}\n      footer={[\n        <Button\n          key=\"back\"\n          onClick={onClose}\n          className=\"px-6 h-10 rounded-lg border-gray-300 hover:bg-gray-100\"\n        >\n          Cancel\n        </Button>,\n        <Button\n          key=\"submit\"\n          type=\"primary\"\n          onClick={handleSubmit}\n          loading={loading}\n          className=\"px-6 h-10 rounded-lg bg-blue-600 hover:bg-blue-700\"\n        >\n          Save Changes\n        </Button>,\n      ]}\n      width={800}\n      className=\"rounded-lg overflow-hidden\"\n      styles={{ body: { padding: \"24px\" } }}\n      destroyOnClose\n    >\n      <Spin spinning={loading}>\n        <Form form={form} layout=\"vertical\" className=\"space-y-6\">\n          <Card\n            title=\"Main Content\"\n            bordered={false}\n            className=\"rounded-lg shadow-sm border-0\"\n            headStyle={{\n              background: \"linear-gradient(90deg, #f8f9fa 0%, #ffffff 100%)\",\n              borderBottom: \"1px solid #e8e8e8\",\n            }}\n          >\n            <div className=\"grid grid-cols-1 gap-6\">\n              <Form.Item\n                name=\"title\"\n                label=\"Section Title\"\n                rules={[{ required: true, message: \"Please enter the title\" }]}\n              >\n                <Input\n                  size=\"large\"\n                  placeholder=\"e.g., Board of Directors\"\n                  className=\"rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                />\n              </Form.Item>\n\n              <Form.Item\n                name=\"description\"\n                label=\"Description\"\n                rules={[{ required: true, message: \"Please enter the description\" }]}\n              >\n                <TextArea\n                  rows={4}\n                  placeholder=\"Description about the board of directors\"\n                  className=\"rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                />\n              </Form.Item>\n            </div>\n          </Card>\n\n          <Card\n            title=\"Directors List\"\n            bordered={false}\n            className=\"rounded-lg shadow-sm border-0\"\n            headStyle={{\n              background: \"linear-gradient(90deg, #f8f9fa 0%, #ffffff 100%)\",\n              borderBottom: \"1px solid #e8e8e8\",\n            }}\n            extra={\n              <Button\n                type=\"primary\"\n                icon={<PlusOutlined />}\n                onClick={handleAddDirector}\n                className=\"flex items-center bg-blue-600 hover:bg-blue-700\"\n              >\n                Add Director\n              </Button>\n            }\n          >\n            <List\n              dataSource={directors}\n              renderItem={(director) => (\n                <List.Item key={director.id} className=\"p-4 border-b border-gray-200 last:border-b-0\">\n                  <div className=\"w-full\">\n                    <div className=\"flex justify-between items-start\">\n                      <div className=\"flex-1\">\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n                          <Input\n                            placeholder=\"Director Name\"\n                            value={director.name}\n                            onChange={(e) => handleDirectorChange(director.id, 'name', e.target.value)}\n                            className=\"rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                          />\n                          <Input\n                            placeholder=\"Designation\"\n                            value={director.designation}\n                            onChange={(e) => handleDirectorChange(director.id, 'designation', e.target.value)}\n                            className=\"rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                          />\n                        </div>\n                        \n                        <div className=\"flex items-center gap-4\">\n                          <Upload {...uploadProps(director.id)}>\n                            <Button\n                              icon={<UploadOutlined />}\n                              loading={imageLoading}\n                              className=\"h-10 rounded-lg bg-blue-600 hover:bg-blue-700 text-white\"\n                            >\n                              Upload Photo\n                            </Button>\n                          </Upload>\n                          {director.image && (\n                            <div className=\"relative w-16 h-16 rounded-full overflow-hidden border-2 border-gray-200\">\n                              <img\n                                src={director.image}\n                                alt=\"Director photo\"\n                                className=\"w-full h-full object-cover\"\n                              />\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                      <Button\n                        danger\n                        icon={<DeleteOutlined />}\n                        onClick={() => handleRemoveDirector(director.id)}\n                        className=\"ml-4\"\n                      />\n                    </div>\n                  </div>\n                </List.Item>\n              )}\n            />\n          </Card>\n        </Form>\n      </Spin>\n    </Modal>\n  );\n};\n\nexport default TeamModal;","import React, { useState, useEffect } from \"react\";\nimport { Modal, Button, Form, Input, message, Upload, Spin, Card } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport Swal from \"sweetalert2\";\n\nconst { TextArea } = Input;\n\nconst MessageModal = ({ isOpen, onClose }) => {\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const [imageLoading, setImageLoading] = useState(false);\n  const [initialized, setInitialized] = useState(false);\n\n  useEffect(() => {\n    if (isOpen && !initialized) {\n      fetchChairmanMessageData();\n      setInitialized(true);\n    }\n  }, [isOpen, initialized]);\n\n  const fetchChairmanMessageData = async () => {\n    try {\n      setLoading(true);\n      const apiUrl = import.meta.env.VITE_API_URL;\n      const response = await fetch(`${apiUrl}/chairman-message/`);\n\n      if (!response.ok) {\n        if (response.status === 404) {\n          initializeWithDefaults();\n          return;\n        }\n        throw new Error(\"Failed to fetch chairman message data\");\n      }\n\n      const data = await response.json();\n\n      if (data) {\n        form.setFieldsValue({\n          heading: data.heading || \"\",\n          subheading: data.subheading || \"\",\n          description: data.description || \"\",\n          name: data.name || \"\",\n          designation: data.designation || \"\",\n          image: data.image || \"\"\n        });\n      } else {\n        initializeWithDefaults();\n      }\n    } catch (error) {\n      console.error(\"Error fetching chairman message data:\", error);\n      message.error(\"Failed to load chairman message data. Using default values.\");\n      initializeWithDefaults();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const initializeWithDefaults = () => {\n    form.setFieldsValue({\n      heading: \"Chairman's Message\",\n      subheading: \"Stech Group is one of the most growing groups of companies in Bangladesh and we want to keep it that way. Our goal is to do something great for the nation globally. Keeping that in our mind, we are moving forward with the latest technology and implementing them on our sister's concerns.\",\n      description: \"Stech Group was created with the hope of many dreams coming together. We are passionate about the opportunity we have to be independent in all aspects of a sustainable environment. Our divisions were built in order to use our resources more effectively and avoid the need for subcontracting. This saves time when it comes to servicing. We're moving quickly and taking a keen interest in what our consumers want and need. We designed Stech Group to be consumer-focused from the get-go. We're expanding our operations and growing our workforce because we're committed to providing a one-stop solution for the heavy industrial market. The changes we see in our company underscore our commitment to this goal and demonstrate our progress. We are a practical organization that provides a wide range of services. We have planned and executed our projects well, and we continue to improve our services. Thanks to our new partners and our dedication to quality work, we are expanding and will continue to do so.\",\n      name: \"Md Sohel Rana\",\n      designation: \"Chairman\",\n      image: \"\"\n    });\n  };\n\n  const handleImageUpload = async (file) => {\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    formData.append(\"category\", \"chairman_photo\");\n\n    try {\n      setImageLoading(true);\n      const apiUrl = import.meta.env.VITE_API_URL;\n      const response = await fetch(`${apiUrl}/images/`, {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Upload failed\");\n      }\n\n      const data = await response.json();\n      const newImageUrl = data.image;\n\n      form.setFieldsValue({\n        image: newImageUrl\n      });\n\n      return newImageUrl;\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      message.error(\"Image upload failed\");\n      return null;\n    } finally {\n      setImageLoading(false);\n    }\n  };\n\n  const uploadProps = {\n    name: \"image\",\n    showUploadList: false,\n    customRequest: async ({ file, onSuccess, onError }) => {\n      const imageUrl = await handleImageUpload(file);\n      if (imageUrl) {\n        onSuccess(imageUrl, file);\n      } else {\n        onError(new Error(\"Upload failed\"));\n      }\n    },\n    beforeUpload: (file) => {\n      const isImage = file.type.startsWith(\"image/\");\n      if (!isImage) {\n        message.error(\"You can only upload image files!\");\n        return Upload.LIST_IGNORE;\n      }\n      const isLt5M = file.size / 1024 / 1024 < 5;\n      if (!isLt5M) {\n        message.error(\"Image must be smaller than 5MB!\");\n        return Upload.LIST_IGNORE;\n      }\n      return isImage && isLt5M;\n    },\n  };\n\n  const handleSubmit = async () => {\n    try {\n      const values = await form.validateFields();\n      const updatedData = {\n        heading: values.heading,\n        subheading: values.subheading,\n        description: values.description,\n        name: values.name,\n        designation: values.designation,\n        image: values.image || \"\"\n      };\n\n      const apiUrl = import.meta.env.VITE_API_URL;\n      const response = await fetch(`${apiUrl}/chairman-message/`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(updatedData),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to save chairman message data');\n      }\n\n      Swal.fire({\n        position: \"top-end\",\n        icon: \"success\",\n        title: \"Chairman's Message Updated Successfully\",\n        showConfirmButton: false,\n        timer: 3000,\n      });\n      onClose();\n    } catch (error) {\n      console.error(\"Error saving chairman message data:\", error);\n      message.error(error.message || \"Failed to update chairman's message\");\n    }\n  };\n\n  return (\n    <Modal\n      title={\n        <span className=\"text-xl font-bold text-gray-800\">\n          Edit Chairman's Message\n        </span>\n      }\n      open={isOpen}\n      onCancel={onClose}\n      footer={[\n        <Button\n          key=\"back\"\n          onClick={onClose}\n          className=\"px-6 h-10 rounded-lg border-gray-300 hover:bg-gray-100\"\n        >\n          Cancel\n        </Button>,\n        <Button\n          key=\"submit\"\n          type=\"primary\"\n          onClick={handleSubmit}\n          loading={loading}\n          className=\"px-6 h-10 rounded-lg bg-blue-600 hover:bg-blue-700\"\n        >\n          Save Changes\n        </Button>,\n      ]}\n      width={800}\n      className=\"rounded-lg overflow-hidden\"\n      styles={{ body: { padding: \"24px\" } }}\n      destroyOnClose\n    >\n      <Spin spinning={loading}>\n        <Form form={form} layout=\"vertical\" className=\"space-y-6\">\n          <Card\n            title=\"Chairman's Message Content\"\n            bordered={false}\n            className=\"rounded-lg shadow-sm border-0\"\n            headStyle={{\n              background: \"linear-gradient(90deg, #f8f9fa 0%, #ffffff 100%)\",\n              borderBottom: \"1px solid #e8e8e8\",\n            }}\n          >\n            <div className=\"grid grid-cols-1 gap-6\">\n              <Form.Item\n                name=\"heading\"\n                label=\"Heading\"\n                rules={[{ required: true, message: \"Please enter the heading\" }]}\n              >\n                <Input\n                  size=\"large\"\n                  placeholder=\"e.g., Chairman's Message\"\n                  className=\"rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                />\n              </Form.Item>\n\n              <Form.Item\n                name=\"subheading\"\n                label=\"Subheading\"\n                rules={[{ required: true, message: \"Please enter the subheading\" }]}\n              >\n                <TextArea\n                  rows={3}\n                  placeholder=\"Short introduction text\"\n                  className=\"rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                />\n              </Form.Item>\n\n              <Form.Item\n                name=\"description\"\n                label=\"Description\"\n                rules={[{ required: true, message: \"Please enter the description\" }]}\n              >\n                <TextArea\n                  rows={6}\n                  placeholder=\"Detailed message content\"\n                  className=\"rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                />\n              </Form.Item>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <Form.Item\n                  name=\"name\"\n                  label=\"Chairman's Name\"\n                  rules={[{ required: true, message: \"Please enter the name\" }]}\n                >\n                  <Input\n                    size=\"large\"\n                    placeholder=\"e.g., Md Sohel Rana\"\n                    className=\"rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                  />\n                </Form.Item>\n\n                <Form.Item\n                  name=\"designation\"\n                  label=\"Designation\"\n                  rules={[{ required: true, message: \"Please enter the designation\" }]}\n                >\n                  <Input\n                    size=\"large\"\n                    placeholder=\"e.g., Chairman\"\n                    className=\"rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                  />\n                </Form.Item>\n              </div>\n\n              <Form.Item label=\"Chairman's Photo\">\n                <div className=\"flex items-center gap-6\">\n                  <Upload {...uploadProps}>\n                    <Button\n                      icon={<UploadOutlined />}\n                      loading={imageLoading}\n                      className=\"h-10 rounded-lg bg-blue-600 hover:bg-blue-700 text-white\"\n                    >\n                      Upload Photo\n                    </Button>\n                  </Upload>\n                  {form.getFieldValue(\"image\") && (\n                    <div className=\"relative w-24 h-24 rounded-full overflow-hidden border-2 border-gray-200\">\n                      <img\n                        src={form.getFieldValue(\"image\")}\n                        alt=\"Chairman's photo\"\n                        className=\"w-full h-full object-cover\"\n                      />\n                    </div>\n                  )}\n                </div>\n              </Form.Item>\n            </div>\n          </Card>\n        </Form>\n      </Spin>\n    </Modal>\n  );\n};\n\nexport default MessageModal;","import React, { useState, useEffect } from \"react\";\nimport { Modal, Button, Form, Input, message, Upload, Spin, Card } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport Swal from \"sweetalert2\";\n\nconst { TextArea } = Input;\n\nconst CoreValuesModal = ({ isOpen, onClose }) => {\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const [imageLoading, setImageLoading] = useState({\n    image1: false,\n    image2: false\n  });\n  const [initialized, setInitialized] = useState(false);\n\n  useEffect(() => {\n    if (isOpen && !initialized) {\n      fetchCoreValuesData();\n      setInitialized(true);\n    }\n  }, [isOpen, initialized]);\n\n  const fetchCoreValuesData = async () => {\n    try {\n      setLoading(true);\n      const apiUrl = import.meta.env.VITE_API_URL;\n      const response = await fetch(`${apiUrl}/core-values/`);\n\n      if (!response.ok) {\n        if (response.status === 404) {\n          initializeWithDefaults();\n          return;\n        }\n        throw new Error(\"Failed to fetch core values data\");\n      }\n\n      const data = await response.json();\n\n      if (data) {\n        form.setFieldsValue({\n          title: data.title || \"\",\n          mission: data.mission || \"\",\n          vision: data.vision || \"\",\n          values: data.values || \"\",\n          image1: data.image1 || \"\",\n          image2: data.image2 || \"\"\n        });\n      } else {\n        initializeWithDefaults();\n      }\n    } catch (error) {\n      console.error(\"Error fetching core values data:\", error);\n      message.error(\"Failed to load core values data. Using default values.\");\n      initializeWithDefaults();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const initializeWithDefaults = () => {\n    form.setFieldsValue({\n      title: \"Our Mission, Vision, & Values\",\n      mission: \"Stech Group aims to deliver innovative and customer-centric solutions across diverse industries, fostering growth, trust, and value for our clients, employees, and partners while contributing to the socio-economic development of Bangladesh and beyond.\",\n      vision: \"To become a global leader in our industries by setting benchmarks for quality, integrity, and excellence, while driving sustainable growth and making a positive impact in the communities we serve.\",\n      values: \"At the heart of our Stech Group operations are five core values that guide us: Integrity, where we uphold transparency, trust, and ethical practices; Innovation, embracing creativity and advanced technologies to deliver exceptional solutions; Excellence, striving for superior performance and continuous improvement in every endeavor; Customer Focus, prioritizing the needs and satisfaction of our clients and stakeholders; and Social Responsibility, empowering communities through sustainable and meaningful initiatives. These values collectively drive our mission and vision toward achieving impactful growth and lasting success.\",\n      image1: \"\",\n      image2: \"\"\n    });\n  };\n\n  const handleImageUpload = async (file, imageField) => {\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    formData.append(\"category\", \"core_values_images\");\n\n    try {\n      setImageLoading(prev => ({ ...prev, [imageField]: true }));\n      const apiUrl = import.meta.env.VITE_API_URL;\n      const response = await fetch(`${apiUrl}/images/`, {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Upload failed\");\n      }\n\n      const data = await response.json();\n      const newImageUrl = data.image;\n\n      form.setFieldsValue({\n        [imageField]: newImageUrl\n      });\n\n      return newImageUrl;\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      message.error(\"Image upload failed\");\n      return null;\n    } finally {\n      setImageLoading(prev => ({ ...prev, [imageField]: false }));\n    }\n  };\n\n  const uploadProps = (imageField) => ({\n    name: \"image\",\n    showUploadList: false,\n    customRequest: async ({ file, onSuccess, onError }) => {\n      const imageUrl = await handleImageUpload(file, imageField);\n      if (imageUrl) {\n        onSuccess(imageUrl, file);\n      } else {\n        onError(new Error(\"Upload failed\"));\n      }\n    },\n    beforeUpload: (file) => {\n      const isImage = file.type.startsWith(\"image/\");\n      if (!isImage) {\n        message.error(\"You can only upload image files!\");\n        return Upload.LIST_IGNORE;\n      }\n      const isLt5M = file.size / 1024 / 1024 < 5;\n      if (!isLt5M) {\n        message.error(\"Image must be smaller than 5MB!\");\n        return Upload.LIST_IGNORE;\n      }\n      return isImage && isLt5M;\n    },\n  });\n\n  const handleSubmit = async () => {\n    try {\n      const values = await form.validateFields();\n      const updatedData = {\n        title: values.title,\n        mission: values.mission,\n        vision: values.vision,\n        values: values.values,\n        image1: values.image1 || \"\",\n        image2: values.image2 || \"\"\n      };\n\n      const apiUrl = import.meta.env.VITE_API_URL;\n      const response = await fetch(`${apiUrl}/core-values/`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(updatedData),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to save core values data');\n      }\n\n      Swal.fire({\n        position: \"top-end\",\n        icon: \"success\",\n        title: \"Core Values Updated Successfully\",\n        showConfirmButton: false,\n        timer: 3000,\n      });\n      onClose();\n    } catch (error) {\n      console.error(\"Error saving core values data:\", error);\n      message.error(error.message || \"Failed to update core values\");\n    }\n  };\n\n  return (\n    <Modal\n      title={\n        <span className=\"text-xl font-bold text-gray-800\">\n          Edit Mission, Vision & Values\n        </span>\n      }\n      open={isOpen}\n      onCancel={onClose}\n      footer={[\n        <Button\n          key=\"back\"\n          onClick={onClose}\n          className=\"px-6 h-10 rounded-lg border-gray-300 hover:bg-gray-100\"\n        >\n          Cancel\n        </Button>,\n        <Button\n          key=\"submit\"\n          type=\"primary\"\n          onClick={handleSubmit}\n          loading={loading}\n          className=\"px-6 h-10 rounded-lg bg-blue-600 hover:bg-blue-700\"\n        >\n          Save Changes\n        </Button>,\n      ]}\n      width={800}\n      className=\"rounded-lg overflow-hidden\"\n      styles={{ body: { padding: \"24px\" } }}\n      destroyOnClose\n    >\n      <Spin spinning={loading}>\n        <Form form={form} layout=\"vertical\" className=\"space-y-6\">\n          <Card\n            title=\"Main Content\"\n            bordered={false}\n            className=\"rounded-lg shadow-sm border-0\"\n            headStyle={{\n              background: \"linear-gradient(90deg, #f8f9fa 0%, #ffffff 100%)\",\n              borderBottom: \"1px solid #e8e8e8\",\n            }}\n          >\n            <div className=\"grid grid-cols-1 gap-6\">\n              <Form.Item\n                name=\"title\"\n                label=\"Section Title\"\n                rules={[{ required: true, message: \"Please enter the title\" }]}\n              >\n                <Input\n                  size=\"large\"\n                  placeholder=\"e.g., Our Mission, Vision & Values\"\n                  className=\"rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                />\n              </Form.Item>\n\n              <Form.Item\n                name=\"mission\"\n                label=\"Mission Statement\"\n                rules={[{ required: true, message: \"Please enter the mission statement\" }]}\n              >\n                <TextArea\n                  rows={4}\n                  placeholder=\"Enter the company mission statement\"\n                  className=\"rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                />\n              </Form.Item>\n\n              <Form.Item\n                name=\"vision\"\n                label=\"Vision Statement\"\n                rules={[{ required: true, message: \"Please enter the vision statement\" }]}\n              >\n                <TextArea\n                  rows={4}\n                  placeholder=\"Enter the company vision statement\"\n                  className=\"rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                />\n              </Form.Item>\n\n              <Form.Item\n                name=\"values\"\n                label=\"Core Values\"\n                rules={[{ required: true, message: \"Please enter the core values\" }]}\n              >\n                <TextArea\n                  rows={6}\n                  placeholder=\"Describe the company core values\"\n                  className=\"rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                />\n              </Form.Item>\n            </div>\n          </Card>\n\n          <Card\n            title=\"Images\"\n            bordered={false}\n            className=\"rounded-lg shadow-sm border-0\"\n            headStyle={{\n              background: \"linear-gradient(90deg, #f8f9fa 0%, #ffffff 100%)\",\n              borderBottom: \"1px solid #e8e8e8\",\n            }}\n          >\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <Form.Item label=\"Mission/Vision Image\">\n                <div className=\"flex flex-col gap-4\">\n                  <Upload {...uploadProps(\"image1\")}>\n                    <Button\n                      icon={<UploadOutlined />}\n                      loading={imageLoading.image1}\n                      className=\"h-10 rounded-lg bg-blue-600 hover:bg-blue-700 text-white\"\n                    >\n                      Upload Image\n                    </Button>\n                  </Upload>\n                  {form.getFieldValue(\"image1\") && (\n                    <div className=\"relative w-full h-48 rounded-lg overflow-hidden border-2 border-gray-200\">\n                      <img\n                        src={form.getFieldValue(\"image1\")}\n                        alt=\"Mission/Vision\"\n                        className=\"w-full h-full object-cover\"\n                      />\n                    </div>\n                  )}\n                </div>\n              </Form.Item>\n\n              <Form.Item label=\"Values Image\">\n                <div className=\"flex flex-col gap-4\">\n                  <Upload {...uploadProps(\"image2\")}>\n                    <Button\n                      icon={<UploadOutlined />}\n                      loading={imageLoading.image2}\n                      className=\"h-10 rounded-lg bg-blue-600 hover:bg-blue-700 text-white\"\n                    >\n                      Upload Image\n                    </Button>\n                  </Upload>\n                  {form.getFieldValue(\"image2\") && (\n                    <div className=\"relative w-full h-48 rounded-lg overflow-hidden border-2 border-gray-200\">\n                      <img\n                        src={form.getFieldValue(\"image2\")}\n                        alt=\"Core Values\"\n                        className=\"w-full h-full object-cover\"\n                      />\n                    </div>\n                  )}\n                </div>\n              </Form.Item>\n            </div>\n          </Card>\n        </Form>\n      </Spin>\n    </Modal>\n  );\n};\n\nexport default CoreValuesModal;","import React, { useState, useEffect } from \"react\";\nimport { Modal, Button, Form, Input, message, Upload, Spin, Card, Divider, Row, Col } from \"antd\";\nimport { UploadOutlined, DeleteOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport Swal from \"sweetalert2\";\n\nconst { TextArea } = Input;\n\nconst AboutDescriptionModal = ({ isOpen, onClose }) => {\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const [imageLoading, setImageLoading] = useState(false);\n  const [aboutData, setAboutData] = useState(null);\n  const [initialized, setInitialized] = useState(false);\n  console.log(aboutData)\n\n  useEffect(() => {\n    if (isOpen && !initialized) {\n      fetchAboutData();\n      setInitialized(true);\n    }\n  }, [isOpen, initialized]);\n\n  const fetchAboutData = async () => {\n    try {\n      setLoading(true);\n      const apiUrl = import.meta.env.VITE_API_URL;\n      const response = await fetch(`${apiUrl}/about/about2`);\n\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch about data\");\n      }\n\n      const data = await response.json();\n      setAboutData(data);\n      form.setFieldsValue({\n        title: data.title,\n        text: data.text,\n      });\n    } catch (error) {\n      console.error(\"Error fetching about data:\", error);\n      message.error(\"Failed to load about data.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleImageUpload = async (file, sectionId, imageId = null) => {\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    formData.append(\"category\", \"about_images\");\n\n    try {\n      setImageLoading(true);\n      const apiUrl = import.meta.env.VITE_API_URL;\n      const response = await fetch(`${apiUrl}/images/`, {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Upload failed\");\n      }\n\n      const data = await response.json();\n      const newImageUrl = `${data.image}`;\n\n      // Update the specific section's image\n      const updatedSections = aboutData.sections.map(section => {\n        if (section.id === sectionId) {\n          const updatedImages = section.images.map(img => \n            img.id === imageId ? { ...img, image: newImageUrl } : img\n          );\n          return { ...section, images: updatedImages };\n        }\n        return section;\n      });\n\n      setAboutData({ ...aboutData, sections: updatedSections });\n      return newImageUrl;\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      message.error(\"Image upload failed\");\n      return null;\n    } finally {\n      setImageLoading(false);\n    }\n  };\n\n  const uploadProps = (sectionId, imageId = null) => ({\n    name: \"image\",\n    showUploadList: false,\n    customRequest: async ({ file, onSuccess, onError }) => {\n      const imageUrl = await handleImageUpload(file, sectionId, imageId);\n      if (imageUrl) {\n        onSuccess(imageUrl, file);\n      } else {\n        onError(new Error(\"Upload failed\"));\n      }\n    },\n    beforeUpload: (file) => {\n      const isImage = file.type.startsWith(\"image/\");\n      if (!isImage) {\n        message.error(\"You can only upload image files!\");\n        return Upload.LIST_IGNORE;\n      }\n      const isLt5M = file.size / 1024 / 1024 < 5;\n      if (!isLt5M) {\n        message.error(\"Image must be smaller than 5MB!\");\n        return Upload.LIST_IGNORE;\n      }\n      return isImage && isLt5M;\n    },\n  });\n\n  const handleMainContentChange = (field, value) => {\n    setAboutData({ ...aboutData, [field]: value });\n  };\n\n  const handleSectionChange = (sectionId, field, value) => {\n    const updatedSections = aboutData.sections.map(section => \n      section.id === sectionId ? { ...section, [field]: value } : section\n    );\n    setAboutData({ ...aboutData, sections: updatedSections });\n  };\n\n  const handleImageChange = (sectionId, imageId, field, value) => {\n    const updatedSections = aboutData.sections.map(section => {\n      if (section.id === sectionId) {\n        const updatedImages = section.images.map(img => \n          img.id === imageId ? { ...img, [field]: value } : img\n        );\n        return { ...section, images: updatedImages };\n      }\n      return section;\n    });\n    setAboutData({ ...aboutData, sections: updatedSections });\n  };\n\n  const handlePortfolioChange = (portfolioId, field, value) => {\n    const portfolioSection = aboutData.sections.find(section => section.portfolios);\n    const updatedPortfolios = portfolioSection.portfolios.map(portfolio => \n      portfolio.id === portfolioId ? { ...portfolio, [field]: value } : portfolio\n    );\n    \n    const updatedSections = aboutData.sections.map(section => \n      section.portfolios ? { ...section, portfolios: updatedPortfolios } : section\n    );\n    \n    setAboutData({ ...aboutData, sections: updatedSections });\n  };\n\n  const handleAddImage = (sectionId) => {\n    const updatedSections = aboutData.sections.map(section => {\n      if (section.id === sectionId) {\n        const newImage = {\n          id: Date.now(),\n          image: \"\",\n          primary_text: \"\",\n          secondary_text: \"\",\n          description: \"\"\n        };\n        return {\n          ...section,\n          images: [...(section.images || []), newImage]\n        };\n      }\n      return section;\n    });\n    setAboutData({ ...aboutData, sections: updatedSections });\n  };\n\n  const handleRemoveImage = (sectionId, imageId) => {\n    const updatedSections = aboutData.sections.map(section => {\n      if (section.id === sectionId) {\n        return {\n          ...section,\n          images: section.images.filter(img => img.id !== imageId)\n        };\n      }\n      return section;\n    });\n    setAboutData({ ...aboutData, sections: updatedSections });\n  };\n\n  const handleAddPortfolio = () => {\n    const portfolioSection = aboutData.sections.find(section => section.portfolios);\n    const newPortfolio = {\n      id: Date.now(),\n      title: \"\",\n      portfolio: \"\"\n    };\n    \n    const updatedPortfolios = [...portfolioSection.portfolios, newPortfolio];\n    \n    const updatedSections = aboutData.sections.map(section => \n      section.portfolios ? { ...section, portfolios: updatedPortfolios } : section\n    );\n    \n    setAboutData({ ...aboutData, sections: updatedSections });\n  };\n\n  const handleRemovePortfolio = (portfolioId) => {\n    const portfolioSection = aboutData.sections.find(section => section.portfolios);\n    const updatedPortfolios = portfolioSection.portfolios.filter(\n      portfolio => portfolio.id !== portfolioId\n    );\n    \n    const updatedSections = aboutData.sections.map(section => \n      section.portfolios ? { ...section, portfolios: updatedPortfolios } : section\n    );\n    \n    setAboutData({ ...aboutData, sections: updatedSections });\n  };\n\n  const handleSubmit = async () => {\n    try {\n      const values = await form.validateFields();\n      const updatedData = {\n        ...aboutData,\n        title: values.title,\n        text: values.text,\n      };\n\n      const apiUrl = import.meta.env.VITE_API_URL;\n      const response = await fetch(`${apiUrl}/about/about2/`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(updatedData),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to save about data');\n      }\n\n      Swal.fire({\n        position: \"top-end\",\n        icon: \"success\",\n        title: \"About Content Updated Successfully\",\n        showConfirmButton: false,\n        timer: 3000,\n      });\n      onClose();\n    } catch (error) {\n      console.error(\"Error saving about data:\", error);\n      message.error(error.message || \"Failed to update about section\");\n    }\n  };\n\n  if (!aboutData) return null;\n\n  return (\n    <Modal\n      title={\n        <span className=\"text-xl font-bold text-gray-800\">\n          Edit About Section\n        </span>\n      }\n      open={isOpen}\n      onCancel={onClose}\n      footer={[\n        <Button\n          key=\"back\"\n          onClick={onClose}\n          className=\"px-6 h-10 rounded-lg border-gray-300 hover:bg-gray-100\"\n        >\n          Cancel\n        </Button>,\n        <Button\n          key=\"submit\"\n          type=\"primary\"\n          onClick={handleSubmit}\n          loading={loading}\n          className=\"px-6 h-10 rounded-lg bg-blue-600 hover:bg-blue-700\"\n        >\n          Save Changes\n        </Button>,\n      ]}\n      width={1000}\n      className=\"rounded-lg overflow-hidden\"\n      styles={{ body: { padding: \"24px\" } }}\n      destroyOnClose\n    >\n      <Spin spinning={loading}>\n        <Form form={form} layout=\"vertical\" className=\"space-y-6\">\n          <Card\n            title=\"Main Content\"\n            bordered={false}\n            className=\"rounded-lg shadow-sm border-0\"\n            headStyle={{\n              background: \"linear-gradient(90deg, #f8f9fa 0%, #ffffff 100%)\",\n              borderBottom: \"1px solid #e8e8e8\",\n            }}\n          >\n            <div className=\"grid grid-cols-1 gap-6\">\n              <Form.Item\n                name=\"title\"\n                label={\n                  <span className=\"font-medium text-gray-700\">\n                    Page Title\n                  </span>\n                }\n                rules={[{ required: true, message: \"Please enter the title\" }]}\n              >\n                <Input\n                  size=\"large\"\n                  onChange={(e) => handleMainContentChange('title', e.target.value)}\n                  className=\"rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                />\n              </Form.Item>\n\n              <Form.Item\n                name=\"text\"\n                label={\n                  <span className=\"font-medium text-gray-700\">\n                    Main Text\n                  </span>\n                }\n                rules={[{ required: true, message: \"Please enter the main text\" }]}\n              >\n                <TextArea\n                  rows={8}\n                  onChange={(e) => handleMainContentChange('text', e.target.value)}\n                  className=\"rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                />\n              </Form.Item>\n            </div>\n          </Card>\n\n          {aboutData.sections.map((section) => (\n            <Card\n              key={section.id}\n              title={section.title}\n              bordered={false}\n              className=\"rounded-lg shadow-sm border-0 mt-6\"\n              headStyle={{\n                background: \"linear-gradient(90deg, #f8f9fa 0%, #ffffff 100%)\",\n                borderBottom: \"1px solid #e8e8e8\",\n              }}\n              extra={\n                section.images && (\n                  <Button\n                    type=\"primary\"\n                    icon={<PlusOutlined />}\n                    onClick={() => handleAddImage(section.id)}\n                    className=\"flex items-center bg-blue-600 hover:bg-blue-700\"\n                  >\n                    Add Image\n                  </Button>\n                )\n              }\n            >\n              <div className=\"grid grid-cols-1 gap-6\">\n                <Form.Item\n                  label={\n                    <span className=\"font-medium text-gray-700\">\n                      Section Title\n                    </span>\n                  }\n                >\n                  <Input\n                    value={section.title}\n                    onChange={(e) => handleSectionChange(section.id, 'title', e.target.value)}\n                    className=\"rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                  />\n                </Form.Item>\n\n                {section.text && (\n                  <Form.Item\n                    label={\n                      <span className=\"font-medium text-gray-700\">\n                        Section Text\n                      </span>\n                    }\n                  >\n                    <TextArea\n                      rows={4}\n                      value={section.text}\n                      onChange={(e) => handleSectionChange(section.id, 'text', e.target.value)}\n                      className=\"rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                    />\n                  </Form.Item>\n                )}\n\n                {section.images && section.images.map((image) => (\n                  <div key={image.id} className=\"border border-gray-200 p-4 rounded-lg\">\n                    <Row gutter={16}>\n                      <Col span={12}>\n                        <div className=\"flex items-center gap-4 mb-4\">\n                          <Upload {...uploadProps(section.id, image.id)}>\n                            <Button\n                              icon={<UploadOutlined />}\n                              loading={imageLoading}\n                              className=\"h-10 rounded-lg bg-blue-600 hover:bg-blue-700 text-white\"\n                            >\n                              Upload Image\n                            </Button>\n                          </Upload>\n                          {image.image && (\n                            <div className=\"relative w-24 h-24\">\n                              <img\n                                src={image.image}\n                                alt=\"Section content\"\n                                className=\"w-full h-full object-contain\"\n                              />\n                            </div>\n                          )}\n                        </div>\n\n                        {image.primary_text !== undefined && (\n                          <Form.Item\n                            label={\n                              <span className=\"font-medium text-gray-700\">\n                                Primary Text\n                              </span>\n                            }\n                          >\n                            <Input\n                              value={image.primary_text}\n                              onChange={(e) => handleImageChange(section.id, image.id, 'primary_text', e.target.value)}\n                              className=\"rounded-lg hover:border-blue-400 focus:border-blue-400 mb-4\"\n                            />\n                          </Form.Item>\n                        )}\n\n                        {image.secondary_text !== undefined && (\n                          <Form.Item\n                            label={\n                              <span className=\"font-medium text-gray-700\">\n                                Secondary Text\n                              </span>\n                            }\n                          >\n                            <Input\n                              value={image.secondary_text}\n                              onChange={(e) => handleImageChange(section.id, image.id, 'secondary_text', e.target.value)}\n                              className=\"rounded-lg hover:border-blue-400 focus:border-blue-400 mb-4\"\n                            />\n                          </Form.Item>\n                        )}\n                      </Col>\n                      <Col span={12}>\n                        {image.description !== undefined && (\n                          <Form.Item\n                            label={\n                              <span className=\"font-medium text-gray-700\">\n                                Description\n                              </span>\n                            }\n                          >\n                            <TextArea\n                              rows={6}\n                              value={image.description}\n                              onChange={(e) => handleImageChange(section.id, image.id, 'description', e.target.value)}\n                              className=\"rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                            />\n                          </Form.Item>\n                        )}\n                      </Col>\n                    </Row>\n                    <div className=\"flex justify-end mt-4\">\n                      <Button\n                        danger\n                        icon={<DeleteOutlined />}\n                        onClick={() => handleRemoveImage(section.id, image.id)}\n                      />\n                    </div>\n                  </div>\n                ))}\n\n                {section.portfolios && (\n                  <>\n                    <Divider orientation=\"left\">Portfolios</Divider>\n                    <Button\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      onClick={handleAddPortfolio}\n                      className=\"flex items-center bg-blue-600 hover:bg-blue-700 mb-4\"\n                    >\n                      Add Portfolio\n                    </Button>\n                    \n                    {section.portfolios.map((portfolio) => (\n                      <div key={portfolio.id} className=\"border border-gray-200 p-4 rounded-lg mb-4\">\n                        <Form.Item\n                          label={\n                            <span className=\"font-medium text-gray-700\">\n                              Portfolio Title\n                            </span>\n                          }\n                        >\n                          <Input\n                            value={portfolio.title}\n                            onChange={(e) => handlePortfolioChange(portfolio.id, 'title', e.target.value)}\n                            className=\"rounded-lg hover:border-blue-400 focus:border-blue-400 mb-4\"\n                          />\n                        </Form.Item>\n\n                        <Form.Item\n                          label={\n                            <span className=\"font-medium text-gray-700\">\n                              Portfolio File URL\n                            </span>\n                          }\n                        >\n                          <Input\n                            value={portfolio.portfolio}\n                            onChange={(e) => handlePortfolioChange(portfolio.id, 'portfolio', e.target.value)}\n                            className=\"rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                          />\n                        </Form.Item>\n\n                        <div className=\"flex justify-end\">\n                          <Button\n                            danger\n                            icon={<DeleteOutlined />}\n                            onClick={() => handleRemovePortfolio(portfolio.id)}\n                          />\n                        </div>\n                      </div>\n                    ))}\n                  </>\n                )}\n              </div>\n            </Card>\n          ))}\n        </Form>\n      </Spin>\n    </Modal>\n  );\n};\n\nexport default AboutDescriptionModal;","import React, { useState } from 'react';\nimport About from '../../pages/About';\n// import About1Modal from './editor_modals/about_modals/AboutDescriptionModal';\nimport About2Modal from './editor_modals/about_modals/About2Modal';\nimport TeamModal from './editor_modals/about_modals/TeamModal';\nimport FAQModal from './editor_modals/about_modals/FAQModal';\nimport MessageModal from './editor_modals/about_modals/MessageModal';\nimport CoreValuesModal from './editor_modals/about_modals/CoreValuesModal';\nimport WhyUsModal from './editor_modals/home_modals/WhyUsModal';\nimport AboutDescriptionModal from './editor_modals/about_modals/AboutDescriptionModal';\n\n\nconst AboutEditor = () => {\n  const [isAbout1Open, setAbout1Open] = useState(false);\n  const [isAbout2Open, setAbout2Open] = useState(false);\n  const [messageOpen, setMessageOpen] = useState(false);\n  const [isTeamOpen, setTeamOpen] = useState(false);\n  const [isFAQOpen, setFAQOpen] = useState(false);\n  const [isWhyUsOpen, setWhyUsOpen] = useState(false);\n\n\n  return (\n    <div className='flex gap-20 items-center justify-between p-20'>\n      {/* Buttons Section */}\n      <div className='flex flex-col gap-10'>\n        <button className=\"btn btn-primary\" onClick={() => setAbout1Open(true)}>About Page Modal</button>\n        {/* <button className=\"btn btn-primary\" onClick={() => setAbout1Open(true)}>Description</button> */}\n        {/* <button className=\"btn btn-primary\" onClick={() => setAbout2Open(true)}>Core And Values</button> */}\n        {/* <button className=\"btn btn-primary\" onClick={() => setFAQOpen(true)}>Mission Values</button> */}\n\n        {/* <button className=\"btn btn-primary\" onClick={() => setMessageOpen(true)}>Message</button> */}\n        {/* <button className=\"btn btn-primary\" onClick={() => setMessageOpen(true)}>Quality Policy</button> */}\n\n        {/* <button className=\"btn btn-primary\" onClick={() => setTeamOpen(true)}>Team</button> */}\n        {/* <button className=\"btn btn-primary\" onClick={() => setWhyUsOpen(true)}>Why Us</button> */}\n      </div>\n\n      {/* Mockup Browser Section */}\n      <div className=\"mockup-browser bg-white border-8 border-black p-2 h-[700px] overflow-y-scroll\">\n        <div className='bg-base-300'>\n          <div className=\"mockup-browser-toolbar m-10\">\n            <div className=\"input\">https://sample-website.com</div>\n          </div>\n          <div className='overflow-scroll'>\n            <About />\n          </div>\n        </div>\n      </div>\n\n      {/* Modal Components */}\n      <AboutDescriptionModal isOpen={isAbout1Open} onClose={() => setAbout1Open(false)} />\n      <About2Modal isOpen={isAbout2Open} onClose={() => setAbout2Open(false)} />\n      <MessageModal isOpen={messageOpen} onClose={() => setMessageOpen(false)} />\n      <TeamModal isOpen={isTeamOpen} onClose={() => setTeamOpen(false)} />\n      <CoreValuesModal isOpen={isFAQOpen} onClose={() => setFAQOpen(false)} />\n      {/* <WhyUsModal isOpen={isWhyUsOpen} onClose={() => setWhyUsOpen(false)}></WhyUsModal> */}\n    </div>\n  );\n}\n\nexport default AboutEditor;\n"],"names":["Panel","Collapse","TextArea","Input","COLORS","About2Modal","isOpen","onClose","form","Form","loading","setLoading","useState","saving","setSaving","activePanels","setActivePanels","apiUrl","emojiOptions","useEffect","response","data","error","message","handleSave","values","Swal","jsx","Modal","Button","Spin","jsxs","Select","emoji","fields","add","remove","key","name","restField","DeleteOutlined","PlusOutlined","TeamModal","imageLoading","setImageLoading","directors","setDirectors","initialized","setInitialized","fetchDirectorsData","initializeWithDefaults","handleImageUpload","file","directorId","formData","newImageUrl","updatedDirectors","director","uploadProps","onSuccess","onError","imageUrl","isImage","Upload","isLt5M","handleAddDirector","newDirector","handleRemoveDirector","id","handleDirectorChange","field","value","handleSubmit","updatedData","errorData","Card","List","e","UploadOutlined","MessageModal","fetchChairmanMessageData","CoreValuesModal","fetchCoreValuesData","imageField","prev","AboutDescriptionModal","aboutData","setAboutData","fetchAboutData","sectionId","imageId","updatedSections","section","updatedImages","img","handleMainContentChange","handleSectionChange","handleImageChange","handlePortfolioChange","portfolioId","updatedPortfolios","portfolio","handleAddImage","newImage","handleRemoveImage","handleAddPortfolio","portfolioSection","newPortfolio","handleRemovePortfolio","image","Row","Col","Fragment","Divider","AboutEditor","isAbout1Open","setAbout1Open","isAbout2Open","setAbout2Open","messageOpen","setMessageOpen","isTeamOpen","setTeamOpen","isFAQOpen","setFAQOpen","isWhyUsOpen","setWhyUsOpen","About"],"mappings":"wNAMA,KAAM,CAAE,MAAAA,CAAU,EAAAC,GACZ,CAAEC,SAAAA,CAAa,EAAAC,EAGfC,EAAS,CACb,QAAS,UACT,UAAW,UACX,KAAM,UACN,OAAQ,UACR,MAAO,SACT,EAEMC,GAAc,CAAC,CAAE,OAAAC,EAAQ,QAAAC,KAAc,CAC3C,KAAM,CAACC,CAAI,EAAIC,EAAK,QAAQ,EACtB,CAACC,EAASC,CAAU,EAAIC,EAAAA,SAAS,EAAK,EACtC,CAACC,EAAQC,CAAS,EAAIF,EAAAA,SAAS,EAAK,EACpC,CAACG,EAAcC,CAAe,EAAIJ,EAAAA,SAAS,CAAC,SAAU,UAAW,QAAQ,CAAC,EAC1EK,EAAS,4BAGTC,EAAe,CACnB,MAAO,KAAM,KAAM,KAAM,KAAM,MAAO,KAAM,IAAK,KAAM,KACvD,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,MAAO,KAAM,IACxD,EAEAC,EAAAA,UAAU,IAAM,EACI,SAAY,CAC5B,GAAKb,EAEL,CAAAK,EAAW,EAAI,EACX,GAAA,CACF,MAAMS,EAAW,MAAM,MAAM,GAAGH,CAAM,eAAe,EACrD,GAAI,CAACG,EAAS,GAAU,MAAA,IAAI,MAAM,sBAAsB,EAGxD,MAAMC,EAAO,MAAMD,EAAS,QAAU,CACpC,OAAQ,CACN,MAAO,aACP,QAAS,sNACT,KAAM,KACR,EACA,QAAS,CACP,MAAO,cACP,QAAS,qHACT,KAAM,IACR,EACA,OAAQ,CACN,CACE,MAAO,eACP,QAAS,uDACT,KAAM,IACR,EACA,CACE,MAAO,aACP,QAAS,sDACT,KAAM,IACR,EACA,CACE,MAAO,YACP,QAAS,8CACT,KAAM,IAAA,CACR,CAEJ,EAEAZ,EAAK,eAAea,CAAI,QACjBC,EAAO,CACdC,EAAQ,MAAM,2BAA2B,EACzC,QAAQ,MAAMD,CAAK,CAAA,QACnB,CACAX,EAAW,EAAK,CAAA,EAEpB,GAEU,CACT,EAAA,CAACL,EAAQW,EAAQT,CAAI,CAAC,EAEzB,MAAMgB,EAAa,SAAY,CAC7BV,EAAU,EAAI,EACV,GAAA,CACI,MAAAW,EAAS,MAAMjB,EAAK,eAAe,EAUzC,GAAI,EARa,MAAM,MAAM,GAAGS,CAAM,iBAAkB,CACtD,OAAQ,QACR,QAAS,CACP,eAAgB,kBAClB,EACA,KAAM,KAAK,UAAUQ,CAAM,CAAA,CAC5B,GAEa,GAAU,MAAA,IAAI,MAAM,gBAAgB,EAElDC,EAAK,KAAK,CACR,SAAU,SACV,KAAM,UACN,MAAO,wBACP,kBAAmB,GACnB,MAAO,IACP,WAAYtB,EAAO,MACnB,MAAOA,EAAO,IAAA,CACf,EACOG,EAAA,QACDe,EAAO,CACdC,EAAQ,MAAM,wBAAwB,EACtC,QAAQ,MAAMD,CAAK,CAAA,QACnB,CACAR,EAAU,EAAK,CAAA,CAEnB,EAGE,OAAAa,EAAA,IAACC,EAAA,CACC,YACG,MAAA,CAAI,UAAU,oBACb,SAACD,MAAA,OAAK,CAAA,UAAU,qBAAqB,MAAO,CAAE,MAAOvB,EAAO,IAAA,EAAQ,6BAEpE,CAAA,EACF,EAEF,KAAME,EACN,SAAUC,EACV,MAAO,IACP,OAAQ,CACNoB,EAAA,IAACE,EAAA,CAEC,QAAStB,EACT,SAAUM,EACV,UAAU,mCACV,MAAO,CACL,YAAaT,EAAO,KACpB,MAAOA,EAAO,KACd,gBAAiBA,EAAO,KAC1B,EACD,SAAA,QAAA,EATK,QAWN,EACAuB,EAAA,IAACE,EAAA,CAEC,KAAK,UACL,QAASL,EACT,QAASX,EACT,MAAO,CACL,gBAAiBT,EAAO,QACxB,YAAaA,EAAO,QACpB,MAAOA,EAAO,KAChB,EACA,UAAU,oDAET,WAAS,YAAc,cAAA,EAXpB,MAAA,CAaR,EACA,eAAc,GACd,UAAU,6BACV,UAAW,CAAE,QAAS,MAAO,EAE7B,SAAAuB,EAAA,IAACG,EAAK,CAAA,SAAUpB,EACd,SAACiB,EAAA,IAAAlB,GAAK,KAAAD,EAAY,OAAO,WAAW,UAAU,YAC5C,SAAAuB,EAAA,KAAC9B,GAAA,CACC,UAAWc,EACX,SAAUC,EACV,SAAU,GACV,UAAU,WAGV,SAAA,CAAAW,EAAA,IAAC3B,EAAA,CACC,OACG2B,EAAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,MAAO,CAAE,MAAOvB,EAAO,IAAQ,EAAA,SAEvE,SAAA,EAGF,UAAU,OACV,MACEuB,EAAAA,IAAC,OAAK,CAAA,UAAU,UACb,SAAAnB,EAAK,cAAc,CAAC,SAAU,MAAM,CAAC,GAAK,MAC7C,EAGF,SAACuB,EAAA,KAAA,MAAI,CAAA,UAAU,yCACb,SAAA,CAACJ,EAAAA,IAAA,MAAA,CAAI,UAAU,gBACb,SAAAA,EAAA,IAAClB,EAAK,KAAL,CACC,KAAM,CAAC,SAAU,MAAM,EACvB,MAAQkB,EAAAA,IAAA,OAAA,CAAK,UAAU,cAAc,MAAO,CAAE,MAAOvB,EAAO,IAAQ,EAAA,SAAI,OAAA,EACxE,MAAO,CAAC,CAAE,SAAU,GAAM,QAAS,wBAAyB,EAE5D,SAAAuB,EAAA,IAACK,EAAA,CACC,YAAY,eACZ,UAAU,SACV,kBAAkB,iBAEjB,WAAa,IAAIC,GACfN,EAAAA,IAAAK,EAAO,OAAP,CAA0B,MAAOC,EAChC,SAACN,EAAA,IAAA,QAAK,UAAU,UAAW,SAAMM,EAAA,CADf,EAAAA,CAEpB,CACD,CAAA,CAAA,CACH,CAAA,EAEJ,EACCF,EAAAA,KAAA,MAAI,CAAA,UAAU,2BACb,SAAA,CAAAJ,EAAA,IAAClB,EAAK,KAAL,CACC,KAAM,CAAC,SAAU,OAAO,EACxB,MAAQkB,EAAAA,IAAA,OAAA,CAAK,UAAU,cAAc,MAAO,CAAE,MAAOvB,EAAO,IAAQ,EAAA,SAAK,QAAA,EACzE,MAAO,CAAC,CAAE,SAAU,GAAM,QAAS,qBAAsB,EAEzD,SAAAuB,EAAA,IAACxB,EAAA,CACC,YAAY,aACZ,UAAU,0DAAA,CAAA,CACZ,CACF,EACAwB,EAAA,IAAClB,EAAK,KAAL,CACC,KAAM,CAAC,SAAU,SAAS,EAC1B,MAAQkB,EAAAA,IAAA,OAAA,CAAK,UAAU,cAAc,MAAO,CAAE,MAAOvB,EAAO,IAAQ,EAAA,SAAO,UAAA,EAC3E,MAAO,CAAC,CAAE,SAAU,GAAM,QAAS,uBAAwB,EAE3D,SAAAuB,EAAA,IAACzB,EAAA,CACC,KAAM,EACN,YAAY,mDACZ,UAAU,0DAAA,CAAA,CACZ,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EAnDI,QAoDN,EAGAyB,EAAA,IAAC3B,EAAA,CACC,OACG2B,EAAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,MAAO,CAAE,MAAOvB,EAAO,IAAQ,EAAA,SAEvE,UAAA,EAGF,UAAU,OACV,MACEuB,EAAAA,IAAC,OAAK,CAAA,UAAU,UACb,SAAAnB,EAAK,cAAc,CAAC,UAAW,MAAM,CAAC,GAAK,KAC9C,EAGF,SAACuB,EAAA,KAAA,MAAI,CAAA,UAAU,yCACb,SAAA,CAACJ,EAAAA,IAAA,MAAA,CAAI,UAAU,gBACb,SAAAA,EAAA,IAAClB,EAAK,KAAL,CACC,KAAM,CAAC,UAAW,MAAM,EACxB,MAAQkB,EAAAA,IAAA,OAAA,CAAK,UAAU,cAAc,MAAO,CAAE,MAAOvB,EAAO,IAAQ,EAAA,SAAI,OAAA,EACxE,MAAO,CAAC,CAAE,SAAU,GAAM,QAAS,wBAAyB,EAE5D,SAAAuB,EAAA,IAACK,EAAA,CACC,YAAY,eACZ,UAAU,SACV,kBAAkB,iBAEjB,WAAa,IAAIC,GACfN,EAAAA,IAAAK,EAAO,OAAP,CAA0B,MAAOC,EAChC,SAACN,EAAA,IAAA,QAAK,UAAU,UAAW,SAAMM,EAAA,CADf,EAAAA,CAEpB,CACD,CAAA,CAAA,CACH,CAAA,EAEJ,EACCF,EAAAA,KAAA,MAAI,CAAA,UAAU,2BACb,SAAA,CAAAJ,EAAA,IAAClB,EAAK,KAAL,CACC,KAAM,CAAC,UAAW,OAAO,EACzB,MAAQkB,EAAAA,IAAA,OAAA,CAAK,UAAU,cAAc,MAAO,CAAE,MAAOvB,EAAO,IAAQ,EAAA,SAAK,QAAA,EACzE,MAAO,CAAC,CAAE,SAAU,GAAM,QAAS,qBAAsB,EAEzD,SAAAuB,EAAA,IAACxB,EAAA,CACC,YAAY,cACZ,UAAU,0DAAA,CAAA,CACZ,CACF,EACAwB,EAAA,IAAClB,EAAK,KAAL,CACC,KAAM,CAAC,UAAW,SAAS,EAC3B,MAAQkB,EAAAA,IAAA,OAAA,CAAK,UAAU,cAAc,MAAO,CAAE,MAAOvB,EAAO,IAAQ,EAAA,SAAO,UAAA,EAC3E,MAAO,CAAC,CAAE,SAAU,GAAM,QAAS,uBAAwB,EAE3D,SAAAuB,EAAA,IAACzB,EAAA,CACC,KAAM,EACN,YAAY,yDACZ,UAAU,0DAAA,CAAA,CACZ,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EAnDI,SAoDN,EAGAyB,EAAA,IAAC3B,EAAA,CACC,OACG2B,EAAAA,IAAA,OAAA,CAAK,UAAU,wBAAwB,MAAO,CAAE,MAAOvB,EAAO,IAAQ,EAAA,SAEvE,cAAA,EAGF,UAAU,OAEV,SAACuB,EAAA,IAAAlB,EAAK,KAAL,CAAU,KAAK,SACb,SAAA,CAACyB,EAAQ,CAAE,IAAAC,EAAK,OAAAC,KACdL,EAAA,KAAA,MAAA,CAAI,UAAU,YACZ,SAAA,CAAOG,EAAA,IAAI,CAAC,CAAE,IAAAG,EAAK,KAAAC,EAAM,GAAGC,KAC1BR,EAAAA,KAAA,MAAc,CAAA,UAAU,uFACvB,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACA,EAAAA,KAAA,KAAA,CAAG,UAAU,cAAc,MAAO,CAAE,MAAO3B,EAAO,IAAK,EAAG,SAAA,CAAA,SAClDkC,EAAO,CAAA,EAChB,EACAX,EAAA,IAACE,EAAA,CACC,OAAM,GACN,KAAK,OACL,WAAOW,EAAe,EAAA,EACtB,QAAS,IAAMJ,EAAOE,CAAI,EAC1B,MAAO,CAAE,MAAO,SAAU,CAAA,CAAA,CAC5B,EACF,EAECP,EAAAA,KAAA,MAAI,CAAA,UAAU,yCACb,SAAA,CAACJ,EAAAA,IAAA,MAAA,CAAI,UAAU,gBACb,SAAAA,EAAA,IAAClB,EAAK,KAAL,CACE,GAAG8B,EACJ,KAAM,CAACD,EAAM,MAAM,EACnB,MAAQX,EAAAA,IAAA,OAAA,CAAK,UAAU,cAAc,MAAO,CAAE,MAAOvB,EAAO,IAAQ,EAAA,SAAI,OAAA,EACxE,MAAO,CAAC,CAAE,SAAU,GAAM,QAAS,wBAAyB,EAE5D,SAAAuB,EAAA,IAACK,EAAA,CACC,YAAY,eACZ,UAAU,SACV,kBAAkB,iBAEjB,WAAa,IAAIC,GACfN,EAAAA,IAAAK,EAAO,OAAP,CAA0B,MAAOC,EAChC,SAACN,EAAA,IAAA,QAAK,UAAU,UAAW,SAAMM,EAAA,CADf,EAAAA,CAEpB,CACD,CAAA,CAAA,CACH,CAAA,EAEJ,EAECF,EAAAA,KAAA,MAAI,CAAA,UAAU,2BACb,SAAA,CAAAJ,EAAA,IAAClB,EAAK,KAAL,CACE,GAAG8B,EACJ,KAAM,CAACD,EAAM,OAAO,EACpB,MAAQX,EAAAA,IAAA,OAAA,CAAK,UAAU,cAAc,MAAO,CAAE,MAAOvB,EAAO,IAAQ,EAAA,SAAK,QAAA,EACzE,MAAO,CAAC,CAAE,SAAU,GAAM,QAAS,qBAAsB,EAEzD,SAAAuB,EAAA,IAACxB,EAAA,CACC,YAAY,eACZ,UAAU,0DAAA,CAAA,CACZ,CACF,EAEAwB,EAAA,IAAClB,EAAK,KAAL,CACE,GAAG8B,EACJ,KAAM,CAACD,EAAM,SAAS,EACtB,MAAQX,EAAAA,IAAA,OAAA,CAAK,UAAU,cAAc,MAAO,CAAE,MAAOvB,EAAO,IAAQ,EAAA,SAAW,cAAA,EAC/E,MAAO,CAAC,CAAE,SAAU,GAAM,QAAS,2BAA4B,EAE/D,SAAAuB,EAAA,IAACzB,EAAA,CACC,KAAM,EACN,YAAY,uDACZ,UAAU,0DAAA,CAAA,CACZ,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CA9DQ,EAAAmC,CA+DV,CACD,EAEDV,EAAA,IAACE,EAAA,CACC,KAAK,SACL,QAAS,IAAMM,EAAI,CACjB,KAAM,KACN,MAAO,GACP,QAAS,EAAA,CACV,EACD,WAAOM,EAAa,EAAA,EACpB,MAAK,GACL,UAAU,uBACV,MAAO,CACL,YAAarC,EAAO,UACpB,MAAOA,EAAO,UACd,gBAAiB,GAAGA,EAAO,SAAS,IACtC,EACD,SAAA,gBAAA,CAAA,CAED,CAAA,CACF,CAEJ,CAAA,CAAA,EA7FI,QAAA,CA8FN,CAAA,CACF,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAEJ,ECzYM,CAAEF,SAAAA,EAAa,EAAAC,EAEfuC,GAAY,CAAC,CAAE,OAAApC,EAAQ,QAAAC,KAAc,CACzC,KAAM,CAACC,CAAI,EAAIC,EAAK,QAAQ,EACtB,CAACC,EAASC,CAAU,EAAIC,EAAAA,SAAS,EAAK,EACtC,CAAC+B,EAAcC,CAAe,EAAIhC,EAAAA,SAAS,EAAK,EAChD,CAACiC,EAAWC,CAAY,EAAIlC,EAAAA,SAAS,CAAA,CAAE,EACvC,CAACmC,EAAaC,CAAc,EAAIpC,EAAAA,SAAS,EAAK,EAEpDO,EAAAA,UAAU,IAAM,CACVb,GAAU,CAACyC,IACME,EAAA,EACnBD,EAAe,EAAI,EACrB,EACC,CAAC1C,EAAQyC,CAAW,CAAC,EAExB,MAAME,EAAqB,SAAY,CACjC,GAAA,CACFtC,EAAW,EAAI,EAEf,MAAMS,EAAW,MAAM,MAAM,sCAAsB,EAE/C,GAAA,CAACA,EAAS,GAAI,CACZ,GAAAA,EAAS,SAAW,IAAK,CACJ8B,EAAA,EACvB,MAAA,CAEI,MAAA,IAAI,MAAM,gCAAgC,CAAA,CAG5C,MAAA7B,EAAO,MAAMD,EAAS,KAAK,EAE7BC,GACFb,EAAK,eAAe,CAClB,MAAOa,EAAK,OAAS,GACrB,YAAaA,EAAK,aAAe,EAAA,CAClC,EACYyB,EAAAzB,EAAK,SAAW,EAAE,GAER6B,EAAA,QAElB5B,EAAO,CACN,QAAA,MAAM,iCAAkCA,CAAK,EACrDC,EAAQ,MAAM,sDAAsD,EAC7C2B,EAAA,CAAA,QACvB,CACAvC,EAAW,EAAK,CAAA,CAEpB,EAEMuC,EAAyB,IAAM,CACnC1C,EAAK,eAAe,CAClB,MAAO,qBACP,YAAa,4OAAA,CACd,EACDsC,EAAa,CAAA,CAAE,CACjB,EAEMK,EAAoB,MAAOC,EAAMC,IAAe,CAC9C,MAAAC,EAAW,IAAI,SACZA,EAAA,OAAO,QAASF,CAAI,EACpBE,EAAA,OAAO,WAAY,iBAAiB,EAEzC,GAAA,CACFV,EAAgB,EAAI,EAEpB,MAAMxB,EAAW,MAAM,MAAM,oCAAqB,CAChD,OAAQ,OACR,KAAMkC,CAAA,CACP,EAEG,GAAA,CAAClC,EAAS,GACN,MAAA,IAAI,MAAM,eAAe,EAIjC,MAAMmC,GADO,MAAMnC,EAAS,KAAK,GACR,MAEnBoC,EAAmBX,EAAU,IAAIY,GACrCA,EAAS,KAAOJ,EAAa,CAAE,GAAGI,EAAU,MAAOF,GAAgBE,CACrE,EACA,OAAAX,EAAaU,CAAgB,EAEtBD,QACAjC,EAAO,CACN,eAAA,MAAM,gBAAiBA,CAAK,EACpCC,EAAQ,MAAM,qBAAqB,EAC5B,IAAA,QACP,CACAqB,EAAgB,EAAK,CAAA,CAEzB,EAEMc,EAAeL,IAAgB,CACnC,KAAM,QACN,eAAgB,GAChB,cAAe,MAAO,CAAE,KAAAD,EAAM,UAAAO,EAAW,QAAAC,KAAc,CACrD,MAAMC,EAAW,MAAMV,EAAkBC,EAAMC,CAAU,EACrDQ,EACFF,EAAUE,EAAUT,CAAI,EAEhBQ,EAAA,IAAI,MAAM,eAAe,CAAC,CAEtC,EACA,aAAeR,GAAS,CACtB,MAAMU,EAAUV,EAAK,KAAK,WAAW,QAAQ,EAC7C,GAAI,CAACU,EACHvC,OAAAA,EAAQ,MAAM,kCAAkC,EACzCwC,EAAO,YAEhB,MAAMC,EAASZ,EAAK,KAAO,KAAO,KAAO,EACzC,OAAKY,EAIEF,GAAWE,GAHhBzC,EAAQ,MAAM,iCAAiC,EACxCwC,EAAO,YAEE,CACpB,GAGIE,EAAoB,IAAM,CAC9B,MAAMC,EAAc,CAClB,GAAI,KAAK,IAAI,EACb,KAAM,GACN,YAAa,GACb,MAAO,EACT,EACApB,EAAa,CAAC,GAAGD,EAAWqB,CAAW,CAAC,CAC1C,EAEMC,EAAwBC,GAAO,CACnCtB,EAAaD,EAAU,OAAOY,GAAYA,EAAS,KAAOW,CAAE,CAAC,CAC/D,EAEMC,EAAuB,CAACD,EAAIE,EAAOC,IAAU,CACjD,MAAMf,EAAmBX,EAAU,IAAIY,GACrCA,EAAS,KAAOW,EAAK,CAAE,GAAGX,EAAU,CAACa,CAAK,EAAGC,GAAUd,CACzD,EACAX,EAAaU,CAAgB,CAC/B,EAEMgB,EAAe,SAAY,CAC3B,GAAA,CACI,MAAA/C,EAAS,MAAMjB,EAAK,eAAe,EACnCiE,EAAc,CAClB,MAAOhD,EAAO,MACd,YAAaA,EAAO,YACpB,QAASoB,EAAU,IAAiBY,IAAA,CAClC,KAAMA,EAAS,KACf,YAAaA,EAAS,YACtB,MAAOA,EAAS,OAChB,EAAE,OAAOA,GAAYA,EAAS,IAAI,CACtC,EAGMrC,EAAW,MAAM,MAAM,uCAAwB,CACnD,OAAQ,MACR,QAAS,CACP,eAAgB,kBAClB,EACA,KAAM,KAAK,UAAUqD,CAAW,CAAA,CACjC,EAEG,GAAA,CAACrD,EAAS,GAAI,CACV,MAAAsD,EAAY,MAAMtD,EAAS,KAAK,EACtC,MAAM,IAAI,MAAMsD,EAAU,SAAW,+BAA+B,CAAA,CAGtEhD,EAAK,KAAK,CACR,SAAU,UACV,KAAM,UACN,MAAO,yCACP,kBAAmB,GACnB,MAAO,GAAA,CACR,EACOnB,EAAA,QACDe,EAAO,CACN,QAAA,MAAM,+BAAgCA,CAAK,EAC3CC,EAAA,MAAMD,EAAM,SAAW,oCAAoC,CAAA,CAEvE,EAGE,OAAAK,EAAA,IAACC,EAAA,CACC,YACG,OAAK,CAAA,UAAU,kCAAkC,SAElD,0BAAA,EAEF,KAAMtB,EACN,SAAUC,EACV,OAAQ,CACNoB,EAAA,IAACE,EAAA,CAEC,QAAStB,EACT,UAAU,yDACX,SAAA,QAAA,EAHK,MAKN,EACAoB,EAAA,IAACE,EAAA,CAEC,KAAK,UACL,QAAS2C,EACT,QAAA9D,EACA,UAAU,qDACX,SAAA,cAAA,EALK,QAAA,CAQR,EACA,MAAO,IACP,UAAU,6BACV,OAAQ,CAAE,KAAM,CAAE,QAAS,OAAS,EACpC,eAAc,GAEd,SAAAiB,EAAA,IAACG,EAAK,CAAA,SAAUpB,EACd,SAACqB,EAAAA,KAAAtB,GAAK,KAAAD,EAAY,OAAO,WAAW,UAAU,YAC5C,SAAA,CAAAmB,EAAA,IAACgD,EAAA,CACC,MAAM,eACN,SAAU,GACV,UAAU,gCACV,UAAW,CACT,WAAY,mDACZ,aAAc,mBAChB,EAEA,SAAC5C,EAAA,KAAA,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAJ,EAAA,IAAClB,EAAK,KAAL,CACC,KAAK,QACL,MAAM,gBACN,MAAO,CAAC,CAAE,SAAU,GAAM,QAAS,yBAA0B,EAE7D,SAAAkB,EAAA,IAACxB,EAAA,CACC,KAAK,QACL,YAAY,2BACZ,UAAU,wDAAA,CAAA,CACZ,CACF,EAEAwB,EAAA,IAAClB,EAAK,KAAL,CACC,KAAK,cACL,MAAM,cACN,MAAO,CAAC,CAAE,SAAU,GAAM,QAAS,+BAAgC,EAEnE,SAAAkB,EAAA,IAACzB,GAAA,CACC,KAAM,EACN,YAAY,2CACZ,UAAU,wDAAA,CAAA,CACZ,CAAA,CACF,CACF,CAAA,CAAA,CACF,EAEAyB,EAAA,IAACgD,EAAA,CACC,MAAM,iBACN,SAAU,GACV,UAAU,gCACV,UAAW,CACT,WAAY,mDACZ,aAAc,mBAChB,EACA,MACEhD,EAAA,IAACE,EAAA,CACC,KAAK,UACL,WAAOY,EAAa,EAAA,EACpB,QAASwB,EACT,UAAU,kDACX,SAAA,cAAA,CAED,EAGF,SAAAtC,EAAA,IAACiD,EAAA,CACC,WAAY/B,EACZ,WAAaY,GACV9B,MAAAiD,EAAK,KAAL,CAA4B,UAAU,+CACrC,eAAC,OAAI,UAAU,SACb,gBAAC,MAAA,CAAI,UAAU,mCACb,SAAA,CAAC7C,EAAAA,KAAA,MAAA,CAAI,UAAU,SACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,6CACb,SAAA,CAAAJ,EAAA,IAACxB,EAAA,CACC,YAAY,gBACZ,MAAOsD,EAAS,KAChB,SAAWoB,GAAMR,EAAqBZ,EAAS,GAAI,OAAQoB,EAAE,OAAO,KAAK,EACzE,UAAU,wDAAA,CACZ,EACAlD,EAAA,IAACxB,EAAA,CACC,YAAY,cACZ,MAAOsD,EAAS,YAChB,SAAWoB,GAAMR,EAAqBZ,EAAS,GAAI,cAAeoB,EAAE,OAAO,KAAK,EAChF,UAAU,wDAAA,CAAA,CACZ,EACF,EAEC9C,EAAAA,KAAA,MAAI,CAAA,UAAU,0BACb,SAAA,CAAAJ,EAAA,IAACoC,EAAQ,CAAA,GAAGL,EAAYD,EAAS,EAAE,EACjC,SAAA9B,EAAA,IAACE,EAAA,CACC,WAAOiD,EAAe,EAAA,EACtB,QAASnC,EACT,UAAU,2DACX,SAAA,cAAA,CAAA,EAGH,EACCc,EAAS,OACP9B,MAAA,MAAA,CAAI,UAAU,2EACb,SAAAA,EAAA,IAAC,MAAA,CACC,IAAK8B,EAAS,MACd,IAAI,iBACJ,UAAU,4BAAA,CAAA,CAEd,CAAA,CAAA,CAEJ,CAAA,CAAA,EACF,EACA9B,EAAA,IAACE,EAAA,CACC,OAAM,GACN,WAAOW,EAAe,EAAA,EACtB,QAAS,IAAM2B,EAAqBV,EAAS,EAAE,EAC/C,UAAU,MAAA,CAAA,GAEd,CACF,CAAA,GA/CcA,EAAS,EAgDzB,CAAA,CAAA,CAEJ,CAAA,CACF,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAEJ,ECzUM,CAAEvD,SAAAA,EAAa,EAAAC,EAEf4E,GAAe,CAAC,CAAE,OAAAzE,EAAQ,QAAAC,KAAc,CAC5C,KAAM,CAACC,CAAI,EAAIC,EAAK,QAAQ,EACtB,CAACC,EAASC,CAAU,EAAIC,EAAAA,SAAS,EAAK,EACtC,CAAC+B,EAAcC,CAAe,EAAIhC,EAAAA,SAAS,EAAK,EAChD,CAACmC,EAAaC,CAAc,EAAIpC,EAAAA,SAAS,EAAK,EAEpDO,EAAAA,UAAU,IAAM,CACVb,GAAU,CAACyC,IACYiC,EAAA,EACzBhC,EAAe,EAAI,EACrB,EACC,CAAC1C,EAAQyC,CAAW,CAAC,EAExB,MAAMiC,EAA2B,SAAY,CACvC,GAAA,CACFrE,EAAW,EAAI,EAEf,MAAMS,EAAW,MAAM,MAAM,6CAA6B,EAEtD,GAAA,CAACA,EAAS,GAAI,CACZ,GAAAA,EAAS,SAAW,IAAK,CACJ8B,EAAA,EACvB,MAAA,CAEI,MAAA,IAAI,MAAM,uCAAuC,CAAA,CAGnD,MAAA7B,EAAO,MAAMD,EAAS,KAAK,EAE7BC,EACFb,EAAK,eAAe,CAClB,QAASa,EAAK,SAAW,GACzB,WAAYA,EAAK,YAAc,GAC/B,YAAaA,EAAK,aAAe,GACjC,KAAMA,EAAK,MAAQ,GACnB,YAAaA,EAAK,aAAe,GACjC,MAAOA,EAAK,OAAS,EAAA,CACtB,EAEsB6B,EAAA,QAElB5B,EAAO,CACN,QAAA,MAAM,wCAAyCA,CAAK,EAC5DC,EAAQ,MAAM,6DAA6D,EACpD2B,EAAA,CAAA,QACvB,CACAvC,EAAW,EAAK,CAAA,CAEpB,EAEMuC,EAAyB,IAAM,CACnC1C,EAAK,eAAe,CAClB,QAAS,qBACT,WAAY,kSACZ,YAAa,8+BACb,KAAM,gBACN,YAAa,WACb,MAAO,EAAA,CACR,CACH,EAEM2C,EAAoB,MAAOC,GAAS,CAClC,MAAAE,EAAW,IAAI,SACZA,EAAA,OAAO,QAASF,CAAI,EACpBE,EAAA,OAAO,WAAY,gBAAgB,EAExC,GAAA,CACFV,EAAgB,EAAI,EAEpB,MAAMxB,EAAW,MAAM,MAAM,oCAAqB,CAChD,OAAQ,OACR,KAAMkC,CAAA,CACP,EAEG,GAAA,CAAClC,EAAS,GACN,MAAA,IAAI,MAAM,eAAe,EAIjC,MAAMmC,GADO,MAAMnC,EAAS,KAAK,GACR,MAEzB,OAAAZ,EAAK,eAAe,CAClB,MAAO+C,CAAA,CACR,EAEMA,QACAjC,EAAO,CACN,eAAA,MAAM,gBAAiBA,CAAK,EACpCC,EAAQ,MAAM,qBAAqB,EAC5B,IAAA,QACP,CACAqB,EAAgB,EAAK,CAAA,CAEzB,EAEMc,EAAc,CAClB,KAAM,QACN,eAAgB,GAChB,cAAe,MAAO,CAAE,KAAAN,EAAM,UAAAO,EAAW,QAAAC,KAAc,CAC/C,MAAAC,EAAW,MAAMV,EAAkBC,CAAI,EACzCS,EACFF,EAAUE,EAAUT,CAAI,EAEhBQ,EAAA,IAAI,MAAM,eAAe,CAAC,CAEtC,EACA,aAAeR,GAAS,CACtB,MAAMU,EAAUV,EAAK,KAAK,WAAW,QAAQ,EAC7C,GAAI,CAACU,EACHvC,OAAAA,EAAQ,MAAM,kCAAkC,EACzCwC,EAAO,YAEhB,MAAMC,EAASZ,EAAK,KAAO,KAAO,KAAO,EACzC,OAAKY,EAIEF,GAAWE,GAHhBzC,EAAQ,MAAM,iCAAiC,EACxCwC,EAAO,YAEE,CAEtB,EAEMS,EAAe,SAAY,CAC3B,GAAA,CACI,MAAA/C,EAAS,MAAMjB,EAAK,eAAe,EACnCiE,EAAc,CAClB,QAAShD,EAAO,QAChB,WAAYA,EAAO,WACnB,YAAaA,EAAO,YACpB,KAAMA,EAAO,KACb,YAAaA,EAAO,YACpB,MAAOA,EAAO,OAAS,EACzB,EAGML,EAAW,MAAM,MAAM,8CAA+B,CAC1D,OAAQ,MACR,QAAS,CACP,eAAgB,kBAClB,EACA,KAAM,KAAK,UAAUqD,CAAW,CAAA,CACjC,EAEG,GAAA,CAACrD,EAAS,GAAI,CACV,MAAAsD,EAAY,MAAMtD,EAAS,KAAK,EACtC,MAAM,IAAI,MAAMsD,EAAU,SAAW,sCAAsC,CAAA,CAG7EhD,EAAK,KAAK,CACR,SAAU,UACV,KAAM,UACN,MAAO,0CACP,kBAAmB,GACnB,MAAO,GAAA,CACR,EACOnB,EAAA,QACDe,EAAO,CACN,QAAA,MAAM,sCAAuCA,CAAK,EAClDC,EAAA,MAAMD,EAAM,SAAW,qCAAqC,CAAA,CAExE,EAGE,OAAAK,EAAA,IAACC,EAAA,CACC,YACG,OAAK,CAAA,UAAU,kCAAkC,SAElD,0BAAA,EAEF,KAAMtB,EACN,SAAUC,EACV,OAAQ,CACNoB,EAAA,IAACE,EAAA,CAEC,QAAStB,EACT,UAAU,yDACX,SAAA,QAAA,EAHK,MAKN,EACAoB,EAAA,IAACE,EAAA,CAEC,KAAK,UACL,QAAS2C,EACT,QAAA9D,EACA,UAAU,qDACX,SAAA,cAAA,EALK,QAAA,CAQR,EACA,MAAO,IACP,UAAU,6BACV,OAAQ,CAAE,KAAM,CAAE,QAAS,OAAS,EACpC,eAAc,GAEd,SAAAiB,EAAA,IAACG,EAAK,CAAA,SAAUpB,EACd,SAACiB,EAAA,IAAAlB,GAAK,KAAAD,EAAY,OAAO,WAAW,UAAU,YAC5C,SAAAmB,EAAA,IAACgD,EAAA,CACC,MAAM,6BACN,SAAU,GACV,UAAU,gCACV,UAAW,CACT,WAAY,mDACZ,aAAc,mBAChB,EAEA,SAAC5C,EAAA,KAAA,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAJ,EAAA,IAAClB,EAAK,KAAL,CACC,KAAK,UACL,MAAM,UACN,MAAO,CAAC,CAAE,SAAU,GAAM,QAAS,2BAA4B,EAE/D,SAAAkB,EAAA,IAACxB,EAAA,CACC,KAAK,QACL,YAAY,2BACZ,UAAU,wDAAA,CAAA,CACZ,CACF,EAEAwB,EAAA,IAAClB,EAAK,KAAL,CACC,KAAK,aACL,MAAM,aACN,MAAO,CAAC,CAAE,SAAU,GAAM,QAAS,8BAA+B,EAElE,SAAAkB,EAAA,IAACzB,GAAA,CACC,KAAM,EACN,YAAY,0BACZ,UAAU,wDAAA,CAAA,CACZ,CACF,EAEAyB,EAAA,IAAClB,EAAK,KAAL,CACC,KAAK,cACL,MAAM,cACN,MAAO,CAAC,CAAE,SAAU,GAAM,QAAS,+BAAgC,EAEnE,SAAAkB,EAAA,IAACzB,GAAA,CACC,KAAM,EACN,YAAY,2BACZ,UAAU,wDAAA,CAAA,CACZ,CACF,EAEC6B,EAAAA,KAAA,MAAI,CAAA,UAAU,wCACb,SAAA,CAAAJ,EAAA,IAAClB,EAAK,KAAL,CACC,KAAK,OACL,MAAM,kBACN,MAAO,CAAC,CAAE,SAAU,GAAM,QAAS,wBAAyB,EAE5D,SAAAkB,EAAA,IAACxB,EAAA,CACC,KAAK,QACL,YAAY,sBACZ,UAAU,wDAAA,CAAA,CACZ,CACF,EAEAwB,EAAA,IAAClB,EAAK,KAAL,CACC,KAAK,cACL,MAAM,cACN,MAAO,CAAC,CAAE,SAAU,GAAM,QAAS,+BAAgC,EAEnE,SAAAkB,EAAA,IAACxB,EAAA,CACC,KAAK,QACL,YAAY,iBACZ,UAAU,wDAAA,CAAA,CACZ,CAAA,CACF,EACF,EAECwB,EAAAA,IAAAlB,EAAK,KAAL,CAAU,MAAM,mBACf,SAAAsB,EAAAA,KAAC,MAAI,CAAA,UAAU,0BACb,SAAA,CAACJ,EAAAA,IAAAoC,EAAA,CAAQ,GAAGL,EACV,SAAA/B,EAAA,IAACE,EAAA,CACC,WAAOiD,EAAe,EAAA,EACtB,QAASnC,EACT,UAAU,2DACX,SAAA,cAAA,CAAA,EAGH,EACCnC,EAAK,cAAc,OAAO,SACxB,MAAA,CAAI,UAAU,2EACb,SAAAmB,EAAA,IAAC,MAAA,CACC,IAAKnB,EAAK,cAAc,OAAO,EAC/B,IAAI,mBACJ,UAAU,4BAAA,CAAA,CAEd,CAAA,CAAA,CAAA,CAEJ,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAEJ,ECzSM,CAAEN,SAAAA,CAAa,EAAAC,EAEf8E,GAAkB,CAAC,CAAE,OAAA3E,EAAQ,QAAAC,KAAc,CAC/C,KAAM,CAACC,CAAI,EAAIC,EAAK,QAAQ,EACtB,CAACC,EAASC,CAAU,EAAIC,EAAAA,SAAS,EAAK,EACtC,CAAC+B,EAAcC,CAAe,EAAIhC,WAAS,CAC/C,OAAQ,GACR,OAAQ,EAAA,CACT,EACK,CAACmC,EAAaC,CAAc,EAAIpC,EAAAA,SAAS,EAAK,EAEpDO,EAAAA,UAAU,IAAM,CACVb,GAAU,CAACyC,IACOmC,EAAA,EACpBlC,EAAe,EAAI,EACrB,EACC,CAAC1C,EAAQyC,CAAW,CAAC,EAExB,MAAMmC,EAAsB,SAAY,CAClC,GAAA,CACFvE,EAAW,EAAI,EAEf,MAAMS,EAAW,MAAM,MAAM,wCAAwB,EAEjD,GAAA,CAACA,EAAS,GAAI,CACZ,GAAAA,EAAS,SAAW,IAAK,CACJ8B,EAAA,EACvB,MAAA,CAEI,MAAA,IAAI,MAAM,kCAAkC,CAAA,CAG9C,MAAA7B,EAAO,MAAMD,EAAS,KAAK,EAE7BC,EACFb,EAAK,eAAe,CAClB,MAAOa,EAAK,OAAS,GACrB,QAASA,EAAK,SAAW,GACzB,OAAQA,EAAK,QAAU,GACvB,OAAQA,EAAK,QAAU,GACvB,OAAQA,EAAK,QAAU,GACvB,OAAQA,EAAK,QAAU,EAAA,CACxB,EAEsB6B,EAAA,QAElB5B,EAAO,CACN,QAAA,MAAM,mCAAoCA,CAAK,EACvDC,EAAQ,MAAM,wDAAwD,EAC/C2B,EAAA,CAAA,QACvB,CACAvC,EAAW,EAAK,CAAA,CAEpB,EAEMuC,EAAyB,IAAM,CACnC1C,EAAK,eAAe,CAClB,MAAO,gCACP,QAAS,8PACT,OAAQ,uMACR,OAAQ,0nBACR,OAAQ,GACR,OAAQ,EAAA,CACT,CACH,EAEM2C,EAAoB,MAAOC,EAAM+B,IAAe,CAC9C,MAAA7B,EAAW,IAAI,SACZA,EAAA,OAAO,QAASF,CAAI,EACpBE,EAAA,OAAO,WAAY,oBAAoB,EAE5C,GAAA,CACcV,EAAAwC,IAAS,CAAE,GAAGA,EAAM,CAACD,CAAU,EAAG,EAAA,EAAO,EAEzD,MAAM/D,EAAW,MAAM,MAAM,oCAAqB,CAChD,OAAQ,OACR,KAAMkC,CAAA,CACP,EAEG,GAAA,CAAClC,EAAS,GACN,MAAA,IAAI,MAAM,eAAe,EAIjC,MAAMmC,GADO,MAAMnC,EAAS,KAAK,GACR,MAEzB,OAAAZ,EAAK,eAAe,CAClB,CAAC2E,CAAU,EAAG5B,CAAA,CACf,EAEMA,QACAjC,EAAO,CACN,eAAA,MAAM,gBAAiBA,CAAK,EACpCC,EAAQ,MAAM,qBAAqB,EAC5B,IAAA,QACP,CACgBqB,EAAAwC,IAAS,CAAE,GAAGA,EAAM,CAACD,CAAU,EAAG,EAAA,EAAQ,CAAA,CAE9D,EAEMzB,EAAeyB,IAAgB,CACnC,KAAM,QACN,eAAgB,GAChB,cAAe,MAAO,CAAE,KAAA/B,EAAM,UAAAO,EAAW,QAAAC,KAAc,CACrD,MAAMC,EAAW,MAAMV,EAAkBC,EAAM+B,CAAU,EACrDtB,EACFF,EAAUE,EAAUT,CAAI,EAEhBQ,EAAA,IAAI,MAAM,eAAe,CAAC,CAEtC,EACA,aAAeR,GAAS,CACtB,MAAMU,EAAUV,EAAK,KAAK,WAAW,QAAQ,EAC7C,GAAI,CAACU,EACHvC,OAAAA,EAAQ,MAAM,kCAAkC,EACzCwC,EAAO,YAEhB,MAAMC,EAASZ,EAAK,KAAO,KAAO,KAAO,EACzC,OAAKY,EAIEF,GAAWE,GAHhBzC,EAAQ,MAAM,iCAAiC,EACxCwC,EAAO,YAEE,CACpB,GAGIS,EAAe,SAAY,CAC3B,GAAA,CACI,MAAA/C,EAAS,MAAMjB,EAAK,eAAe,EACnCiE,EAAc,CAClB,MAAOhD,EAAO,MACd,QAASA,EAAO,QAChB,OAAQA,EAAO,OACf,OAAQA,EAAO,OACf,OAAQA,EAAO,QAAU,GACzB,OAAQA,EAAO,QAAU,EAC3B,EAGML,EAAW,MAAM,MAAM,yCAA0B,CACrD,OAAQ,MACR,QAAS,CACP,eAAgB,kBAClB,EACA,KAAM,KAAK,UAAUqD,CAAW,CAAA,CACjC,EAEG,GAAA,CAACrD,EAAS,GAAI,CACV,MAAAsD,EAAY,MAAMtD,EAAS,KAAK,EACtC,MAAM,IAAI,MAAMsD,EAAU,SAAW,iCAAiC,CAAA,CAGxEhD,EAAK,KAAK,CACR,SAAU,UACV,KAAM,UACN,MAAO,mCACP,kBAAmB,GACnB,MAAO,GAAA,CACR,EACOnB,EAAA,QACDe,EAAO,CACN,QAAA,MAAM,iCAAkCA,CAAK,EAC7CC,EAAA,MAAMD,EAAM,SAAW,8BAA8B,CAAA,CAEjE,EAGE,OAAAK,EAAA,IAACC,EAAA,CACC,YACG,OAAK,CAAA,UAAU,kCAAkC,SAElD,gCAAA,EAEF,KAAMtB,EACN,SAAUC,EACV,OAAQ,CACNoB,EAAA,IAACE,EAAA,CAEC,QAAStB,EACT,UAAU,yDACX,SAAA,QAAA,EAHK,MAKN,EACAoB,EAAA,IAACE,EAAA,CAEC,KAAK,UACL,QAAS2C,EACT,QAAA9D,EACA,UAAU,qDACX,SAAA,cAAA,EALK,QAAA,CAQR,EACA,MAAO,IACP,UAAU,6BACV,OAAQ,CAAE,KAAM,CAAE,QAAS,OAAS,EACpC,eAAc,GAEd,SAAAiB,EAAA,IAACG,EAAK,CAAA,SAAUpB,EACd,SAACqB,EAAAA,KAAAtB,GAAK,KAAAD,EAAY,OAAO,WAAW,UAAU,YAC5C,SAAA,CAAAmB,EAAA,IAACgD,EAAA,CACC,MAAM,eACN,SAAU,GACV,UAAU,gCACV,UAAW,CACT,WAAY,mDACZ,aAAc,mBAChB,EAEA,SAAC5C,EAAA,KAAA,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAJ,EAAA,IAAClB,EAAK,KAAL,CACC,KAAK,QACL,MAAM,gBACN,MAAO,CAAC,CAAE,SAAU,GAAM,QAAS,yBAA0B,EAE7D,SAAAkB,EAAA,IAACxB,EAAA,CACC,KAAK,QACL,YAAY,qCACZ,UAAU,wDAAA,CAAA,CACZ,CACF,EAEAwB,EAAA,IAAClB,EAAK,KAAL,CACC,KAAK,UACL,MAAM,oBACN,MAAO,CAAC,CAAE,SAAU,GAAM,QAAS,qCAAsC,EAEzE,SAAAkB,EAAA,IAACzB,EAAA,CACC,KAAM,EACN,YAAY,sCACZ,UAAU,wDAAA,CAAA,CACZ,CACF,EAEAyB,EAAA,IAAClB,EAAK,KAAL,CACC,KAAK,SACL,MAAM,mBACN,MAAO,CAAC,CAAE,SAAU,GAAM,QAAS,oCAAqC,EAExE,SAAAkB,EAAA,IAACzB,EAAA,CACC,KAAM,EACN,YAAY,qCACZ,UAAU,wDAAA,CAAA,CACZ,CACF,EAEAyB,EAAA,IAAClB,EAAK,KAAL,CACC,KAAK,SACL,MAAM,cACN,MAAO,CAAC,CAAE,SAAU,GAAM,QAAS,+BAAgC,EAEnE,SAAAkB,EAAA,IAACzB,EAAA,CACC,KAAM,EACN,YAAY,mCACZ,UAAU,wDAAA,CAAA,CACZ,CAAA,CACF,CACF,CAAA,CAAA,CACF,EAEAyB,EAAA,IAACgD,EAAA,CACC,MAAM,SACN,SAAU,GACV,UAAU,gCACV,UAAW,CACT,WAAY,mDACZ,aAAc,mBAChB,EAEA,SAAC5C,EAAA,KAAA,MAAI,CAAA,UAAU,wCACb,SAAA,CAACJ,EAAAA,IAAAlB,EAAK,KAAL,CAAU,MAAM,uBACf,SAACsB,EAAAA,KAAA,MAAA,CAAI,UAAU,sBACb,SAAA,OAACgC,EAAQ,CAAA,GAAGL,EAAY,QAAQ,EAC9B,SAAA/B,EAAA,IAACE,EAAA,CACC,WAAOiD,EAAe,EAAA,EACtB,QAASnC,EAAa,OACtB,UAAU,2DACX,SAAA,cAAA,CAAA,EAGH,EACCnC,EAAK,cAAc,QAAQ,SACzB,MAAA,CAAI,UAAU,2EACb,SAAAmB,EAAA,IAAC,MAAA,CACC,IAAKnB,EAAK,cAAc,QAAQ,EAChC,IAAI,iBACJ,UAAU,4BAAA,CAAA,CAEd,CAAA,CAAA,CAAA,CAEJ,CAAA,CACF,EAECmB,EAAAA,IAAAlB,EAAK,KAAL,CAAU,MAAM,eACf,SAAAsB,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACb,SAAA,OAACgC,EAAQ,CAAA,GAAGL,EAAY,QAAQ,EAC9B,SAAA/B,EAAA,IAACE,EAAA,CACC,WAAOiD,EAAe,EAAA,EACtB,QAASnC,EAAa,OACtB,UAAU,2DACX,SAAA,cAAA,CAAA,EAGH,EACCnC,EAAK,cAAc,QAAQ,SACzB,MAAA,CAAI,UAAU,2EACb,SAAAmB,EAAA,IAAC,MAAA,CACC,IAAKnB,EAAK,cAAc,QAAQ,EAChC,IAAI,cACJ,UAAU,4BAAA,CAAA,CAEd,CAAA,CAAA,CAAA,CAEJ,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAEJ,ECjUM,CAAE,SAAAN,CAAa,EAAAC,EAEfkF,GAAwB,CAAC,CAAE,OAAA/E,EAAQ,QAAAC,KAAc,CACrD,KAAM,CAACC,CAAI,EAAIC,EAAK,QAAQ,EACtB,CAACC,EAASC,CAAU,EAAIC,EAAAA,SAAS,EAAK,EACtC,CAAC+B,EAAcC,CAAe,EAAIhC,EAAAA,SAAS,EAAK,EAChD,CAAC0E,EAAWC,CAAY,EAAI3E,EAAAA,SAAS,IAAI,EACzC,CAACmC,EAAaC,CAAc,EAAIpC,EAAAA,SAAS,EAAK,EACpD,QAAQ,IAAI0E,CAAS,EAErBnE,EAAAA,UAAU,IAAM,CACVb,GAAU,CAACyC,IACEyC,EAAA,EACfxC,EAAe,EAAI,EACrB,EACC,CAAC1C,EAAQyC,CAAW,CAAC,EAExB,MAAMyC,EAAiB,SAAY,CAC7B,GAAA,CACF7E,EAAW,EAAI,EAEf,MAAMS,EAAW,MAAM,MAAM,wCAAwB,EAEjD,GAAA,CAACA,EAAS,GACN,MAAA,IAAI,MAAM,4BAA4B,EAGxC,MAAAC,EAAO,MAAMD,EAAS,KAAK,EACjCmE,EAAalE,CAAI,EACjBb,EAAK,eAAe,CAClB,MAAOa,EAAK,MACZ,KAAMA,EAAK,IAAA,CACZ,QACMC,EAAO,CACN,QAAA,MAAM,6BAA8BA,CAAK,EACjDC,EAAQ,MAAM,4BAA4B,CAAA,QAC1C,CACAZ,EAAW,EAAK,CAAA,CAEpB,EAEMwC,EAAoB,MAAOC,EAAMqC,EAAWC,EAAU,OAAS,CAC7D,MAAApC,EAAW,IAAI,SACZA,EAAA,OAAO,QAASF,CAAI,EACpBE,EAAA,OAAO,WAAY,cAAc,EAEtC,GAAA,CACFV,EAAgB,EAAI,EAEpB,MAAMxB,EAAW,MAAM,MAAM,oCAAqB,CAChD,OAAQ,OACR,KAAMkC,CAAA,CACP,EAEG,GAAA,CAAClC,EAAS,GACN,MAAA,IAAI,MAAM,eAAe,EAI3B,MAAAmC,EAAc,IADP,MAAMnC,EAAS,KAAK,GACL,KAAK,GAG3BuE,GAAkBL,EAAU,SAAS,IAAeM,GAAA,CACpD,GAAAA,EAAQ,KAAOH,EAAW,CACtB,MAAAI,GAAgBD,EAAQ,OAAO,IAAIE,GACvCA,EAAI,KAAOJ,EAAU,CAAE,GAAGI,EAAK,MAAOvC,GAAgBuC,CACxD,EACA,MAAO,CAAE,GAAGF,EAAS,OAAQC,EAAc,CAAA,CAEtC,OAAAD,CAAA,CACR,EAED,OAAAL,EAAa,CAAE,GAAGD,EAAW,SAAUK,GAAiB,EACjDpC,QACAjC,EAAO,CACN,eAAA,MAAM,gBAAiBA,CAAK,EACpCC,EAAQ,MAAM,qBAAqB,EAC5B,IAAA,QACP,CACAqB,EAAgB,EAAK,CAAA,CAEzB,EAEMc,EAAc,CAAC+B,EAAWC,EAAU,QAAU,CAClD,KAAM,QACN,eAAgB,GAChB,cAAe,MAAO,CAAE,KAAAtC,EAAM,UAAAO,EAAW,QAAAC,KAAc,CACrD,MAAMC,EAAW,MAAMV,EAAkBC,EAAMqC,EAAWC,CAAO,EAC7D7B,EACFF,EAAUE,EAAUT,CAAI,EAEhBQ,EAAA,IAAI,MAAM,eAAe,CAAC,CAEtC,EACA,aAAeR,GAAS,CACtB,MAAMU,EAAUV,EAAK,KAAK,WAAW,QAAQ,EAC7C,GAAI,CAACU,EACHvC,OAAAA,EAAQ,MAAM,kCAAkC,EACzCwC,EAAO,YAEhB,MAAMC,EAASZ,EAAK,KAAO,KAAO,KAAO,EACzC,OAAKY,EAIEF,GAAWE,GAHhBzC,EAAQ,MAAM,iCAAiC,EACxCwC,EAAO,YAEE,CACpB,GAGIgC,EAA0B,CAACzB,EAAOC,IAAU,CAChDgB,EAAa,CAAE,GAAGD,EAAW,CAAChB,CAAK,EAAGC,EAAO,CAC/C,EAEMyB,EAAsB,CAACP,EAAWnB,EAAOC,IAAU,CACjD,MAAAoB,EAAkBL,EAAU,SAAS,IAAIM,GAC7CA,EAAQ,KAAOH,EAAY,CAAE,GAAGG,EAAS,CAACtB,CAAK,EAAGC,GAAUqB,CAC9D,EACAL,EAAa,CAAE,GAAGD,EAAW,SAAUK,EAAiB,CAC1D,EAEMM,EAAoB,CAACR,EAAWC,EAASpB,EAAOC,IAAU,CAC9D,MAAMoB,EAAkBL,EAAU,SAAS,IAAeM,GAAA,CACpD,GAAAA,EAAQ,KAAOH,EAAW,CACtB,MAAAI,EAAgBD,EAAQ,OAAO,IAAIE,GACvCA,EAAI,KAAOJ,EAAU,CAAE,GAAGI,EAAK,CAACxB,CAAK,EAAGC,GAAUuB,CACpD,EACA,MAAO,CAAE,GAAGF,EAAS,OAAQC,CAAc,CAAA,CAEtC,OAAAD,CAAA,CACR,EACDL,EAAa,CAAE,GAAGD,EAAW,SAAUK,EAAiB,CAC1D,EAEMO,EAAwB,CAACC,EAAa7B,EAAOC,IAAU,CAErD,MAAA6B,EADmBd,EAAU,SAAS,KAAKM,GAAWA,EAAQ,UAAU,EACnC,WAAW,IAAIS,GACxDA,EAAU,KAAOF,EAAc,CAAE,GAAGE,EAAW,CAAC/B,CAAK,EAAGC,GAAU8B,CACpE,EAEMV,EAAkBL,EAAU,SAAS,IAAIM,GAC7CA,EAAQ,WAAa,CAAE,GAAGA,EAAS,WAAYQ,GAAsBR,CACvE,EAEAL,EAAa,CAAE,GAAGD,EAAW,SAAUK,EAAiB,CAC1D,EAEMW,EAAkBb,GAAc,CACpC,MAAME,EAAkBL,EAAU,SAAS,IAAeM,GAAA,CACpD,GAAAA,EAAQ,KAAOH,EAAW,CAC5B,MAAMc,EAAW,CACf,GAAI,KAAK,IAAI,EACb,MAAO,GACP,aAAc,GACd,eAAgB,GAChB,YAAa,EACf,EACO,MAAA,CACL,GAAGX,EACH,OAAQ,CAAC,GAAIA,EAAQ,QAAU,GAAKW,CAAQ,CAC9C,CAAA,CAEK,OAAAX,CAAA,CACR,EACDL,EAAa,CAAE,GAAGD,EAAW,SAAUK,EAAiB,CAC1D,EAEMa,EAAoB,CAACf,EAAWC,IAAY,CAChD,MAAMC,EAAkBL,EAAU,SAAS,IAAeM,GACpDA,EAAQ,KAAOH,EACV,CACL,GAAGG,EACH,OAAQA,EAAQ,OAAO,OAAcE,GAAAA,EAAI,KAAOJ,CAAO,CACzD,EAEKE,CACR,EACDL,EAAa,CAAE,GAAGD,EAAW,SAAUK,EAAiB,CAC1D,EAEMc,EAAqB,IAAM,CAC/B,MAAMC,EAAmBpB,EAAU,SAAS,KAAKM,GAAWA,EAAQ,UAAU,EACxEe,EAAe,CACnB,GAAI,KAAK,IAAI,EACb,MAAO,GACP,UAAW,EACb,EAEMP,EAAoB,CAAC,GAAGM,EAAiB,WAAYC,CAAY,EAEjEhB,EAAkBL,EAAU,SAAS,IAAIM,GAC7CA,EAAQ,WAAa,CAAE,GAAGA,EAAS,WAAYQ,GAAsBR,CACvE,EAEAL,EAAa,CAAE,GAAGD,EAAW,SAAUK,EAAiB,CAC1D,EAEMiB,EAAyBT,GAAgB,CAEvC,MAAAC,EADmBd,EAAU,SAAS,KAAKM,GAAWA,EAAQ,UAAU,EACnC,WAAW,OACpDS,GAAaA,EAAU,KAAOF,CAChC,EAEMR,EAAkBL,EAAU,SAAS,IAAIM,GAC7CA,EAAQ,WAAa,CAAE,GAAGA,EAAS,WAAYQ,GAAsBR,CACvE,EAEAL,EAAa,CAAE,GAAGD,EAAW,SAAUK,EAAiB,CAC1D,EAEMnB,EAAe,SAAY,CAC3B,GAAA,CACI,MAAA/C,EAAS,MAAMjB,EAAK,eAAe,EACnCiE,EAAc,CAClB,GAAGa,EACH,MAAO7D,EAAO,MACd,KAAMA,EAAO,IACf,EAGML,EAAW,MAAM,MAAM,0CAA2B,CACtD,OAAQ,QACR,QAAS,CACP,eAAgB,kBAClB,EACA,KAAM,KAAK,UAAUqD,CAAW,CAAA,CACjC,EAEG,GAAA,CAACrD,EAAS,GAAI,CACV,MAAAsD,EAAY,MAAMtD,EAAS,KAAK,EACtC,MAAM,IAAI,MAAMsD,EAAU,SAAW,2BAA2B,CAAA,CAGlEhD,EAAK,KAAK,CACR,SAAU,UACV,KAAM,UACN,MAAO,qCACP,kBAAmB,GACnB,MAAO,GAAA,CACR,EACOnB,EAAA,QACDe,EAAO,CACN,QAAA,MAAM,2BAA4BA,CAAK,EACvCC,EAAA,MAAMD,EAAM,SAAW,gCAAgC,CAAA,CAEnE,EAEI,OAACgE,EAGH3D,EAAA,IAACC,EAAA,CACC,YACG,OAAK,CAAA,UAAU,kCAAkC,SAElD,qBAAA,EAEF,KAAMtB,EACN,SAAUC,EACV,OAAQ,CACNoB,EAAA,IAACE,EAAA,CAEC,QAAStB,EACT,UAAU,yDACX,SAAA,QAAA,EAHK,MAKN,EACAoB,EAAA,IAACE,EAAA,CAEC,KAAK,UACL,QAAS2C,EACT,QAAA9D,EACA,UAAU,qDACX,SAAA,cAAA,EALK,QAAA,CAQR,EACA,MAAO,IACP,UAAU,6BACV,OAAQ,CAAE,KAAM,CAAE,QAAS,OAAS,EACpC,eAAc,GAEd,SAAAiB,EAAA,IAACG,EAAK,CAAA,SAAUpB,EACd,SAACqB,EAAAA,KAAAtB,GAAK,KAAAD,EAAY,OAAO,WAAW,UAAU,YAC5C,SAAA,CAAAmB,EAAA,IAACgD,EAAA,CACC,MAAM,eACN,SAAU,GACV,UAAU,gCACV,UAAW,CACT,WAAY,mDACZ,aAAc,mBAChB,EAEA,SAAC5C,EAAA,KAAA,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAJ,EAAA,IAAClB,EAAK,KAAL,CACC,KAAK,QACL,YACG,OAAK,CAAA,UAAU,4BAA4B,SAE5C,aAAA,EAEF,MAAO,CAAC,CAAE,SAAU,GAAM,QAAS,yBAA0B,EAE7D,SAAAkB,EAAA,IAACxB,EAAA,CACC,KAAK,QACL,SAAW0E,GAAMkB,EAAwB,QAASlB,EAAE,OAAO,KAAK,EAChE,UAAU,wDAAA,CAAA,CACZ,CACF,EAEAlD,EAAA,IAAClB,EAAK,KAAL,CACC,KAAK,OACL,YACG,OAAK,CAAA,UAAU,4BAA4B,SAE5C,YAAA,EAEF,MAAO,CAAC,CAAE,SAAU,GAAM,QAAS,6BAA8B,EAEjE,SAAAkB,EAAA,IAACzB,EAAA,CACC,KAAM,EACN,SAAW2E,GAAMkB,EAAwB,OAAQlB,EAAE,OAAO,KAAK,EAC/D,UAAU,wDAAA,CAAA,CACZ,CAAA,CACF,CACF,CAAA,CAAA,CACF,EAECS,EAAU,SAAS,IAAKM,GACvBjE,EAAA,IAACgD,EAAA,CAEC,MAAOiB,EAAQ,MACf,SAAU,GACV,UAAU,qCACV,UAAW,CACT,WAAY,mDACZ,aAAc,mBAChB,EACA,MACEA,EAAQ,QACNjE,EAAA,IAACE,EAAA,CACC,KAAK,UACL,WAAOY,EAAa,EAAA,EACpB,QAAS,IAAM6D,EAAeV,EAAQ,EAAE,EACxC,UAAU,kDACX,SAAA,WAAA,CAED,EAIJ,SAAC7D,EAAA,KAAA,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAJ,EAAA,IAAClB,EAAK,KAAL,CACC,YACG,OAAK,CAAA,UAAU,4BAA4B,SAE5C,gBAAA,EAGF,SAAAkB,EAAA,IAACxB,EAAA,CACC,MAAOyF,EAAQ,MACf,SAAWf,GAAMmB,EAAoBJ,EAAQ,GAAI,QAASf,EAAE,OAAO,KAAK,EACxE,UAAU,wDAAA,CAAA,CACZ,CACF,EAECe,EAAQ,MACPjE,EAAA,IAAClB,EAAK,KAAL,CACC,YACG,OAAK,CAAA,UAAU,4BAA4B,SAE5C,eAAA,EAGF,SAAAkB,EAAA,IAACzB,EAAA,CACC,KAAM,EACN,MAAO0F,EAAQ,KACf,SAAWf,GAAMmB,EAAoBJ,EAAQ,GAAI,OAAQf,EAAE,OAAO,KAAK,EACvE,UAAU,wDAAA,CAAA,CACZ,CACF,EAGDe,EAAQ,QAAUA,EAAQ,OAAO,IAAKiB,GACrC9E,EAAAA,KAAC,MAAmB,CAAA,UAAU,wCAC5B,SAAA,CAACA,EAAAA,KAAA+E,GAAA,CAAI,OAAQ,GACX,SAAA,CAAC/E,EAAAA,KAAAgF,GAAA,CAAI,KAAM,GACT,SAAA,CAAChF,EAAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAAAJ,MAACoC,GAAQ,GAAGL,EAAYkC,EAAQ,GAAIiB,EAAM,EAAE,EAC1C,SAAAlF,EAAA,IAACE,EAAA,CACC,WAAOiD,EAAe,EAAA,EACtB,QAASnC,EACT,UAAU,2DACX,SAAA,cAAA,CAAA,EAGH,EACCkE,EAAM,OACJlF,MAAA,MAAA,CAAI,UAAU,qBACb,SAAAA,EAAA,IAAC,MAAA,CACC,IAAKkF,EAAM,MACX,IAAI,kBACJ,UAAU,8BAAA,CAAA,CAEd,CAAA,CAAA,EAEJ,EAECA,EAAM,eAAiB,QACtBlF,EAAA,IAAClB,EAAK,KAAL,CACC,YACG,OAAK,CAAA,UAAU,4BAA4B,SAE5C,eAAA,EAGF,SAAAkB,EAAA,IAACxB,EAAA,CACC,MAAO0G,EAAM,aACb,SAAWhC,GAAMoB,EAAkBL,EAAQ,GAAIiB,EAAM,GAAI,eAAgBhC,EAAE,OAAO,KAAK,EACvF,UAAU,6DAAA,CAAA,CACZ,CACF,EAGDgC,EAAM,iBAAmB,QACxBlF,EAAA,IAAClB,EAAK,KAAL,CACC,YACG,OAAK,CAAA,UAAU,4BAA4B,SAE5C,iBAAA,EAGF,SAAAkB,EAAA,IAACxB,EAAA,CACC,MAAO0G,EAAM,eACb,SAAWhC,GAAMoB,EAAkBL,EAAQ,GAAIiB,EAAM,GAAI,iBAAkBhC,EAAE,OAAO,KAAK,EACzF,UAAU,6DAAA,CAAA,CACZ,CAAA,CACF,EAEJ,QACCkC,GAAI,CAAA,KAAM,GACR,SAAAF,EAAM,cAAgB,QACrBlF,EAAA,IAAClB,EAAK,KAAL,CACC,YACG,OAAK,CAAA,UAAU,4BAA4B,SAE5C,cAAA,EAGF,SAAAkB,EAAA,IAACzB,EAAA,CACC,KAAM,EACN,MAAO2G,EAAM,YACb,SAAWhC,GAAMoB,EAAkBL,EAAQ,GAAIiB,EAAM,GAAI,cAAehC,EAAE,OAAO,KAAK,EACtF,UAAU,wDAAA,CAAA,CACZ,CAAA,CAGN,CAAA,CAAA,EACF,EACClD,EAAAA,IAAA,MAAI,CAAA,UAAU,wBACb,SAAAA,EAAA,IAACE,EAAA,CACC,OAAM,GACN,WAAOW,EAAe,EAAA,EACtB,QAAS,IAAMgE,EAAkBZ,EAAQ,GAAIiB,EAAM,EAAE,CAAA,CAAA,CAEzD,CAAA,CAAA,GAjFQA,EAAM,EAkFhB,CACD,EAEAjB,EAAQ,YAEL7D,EAAAA,KAAAiF,EAAA,SAAA,CAAA,SAAA,OAACC,GAAA,CAAQ,YAAY,OAAO,SAAU,aAAA,EACtCtF,EAAA,IAACE,EAAA,CACC,KAAK,UACL,WAAOY,EAAa,EAAA,EACpB,QAASgE,EACT,UAAU,uDACX,SAAA,eAAA,CAED,EAECb,EAAQ,WAAW,IAAKS,UACtB,MAAA,CAAuB,UAAU,6CAChC,SAAA,CAAA1E,EAAA,IAAClB,EAAK,KAAL,CACC,YACG,OAAK,CAAA,UAAU,4BAA4B,SAE5C,kBAAA,EAGF,SAAAkB,EAAA,IAACxB,EAAA,CACC,MAAOkG,EAAU,MACjB,SAAWxB,GAAMqB,EAAsBG,EAAU,GAAI,QAASxB,EAAE,OAAO,KAAK,EAC5E,UAAU,6DAAA,CAAA,CACZ,CACF,EAEAlD,EAAA,IAAClB,EAAK,KAAL,CACC,YACG,OAAK,CAAA,UAAU,4BAA4B,SAE5C,qBAAA,EAGF,SAAAkB,EAAA,IAACxB,EAAA,CACC,MAAOkG,EAAU,UACjB,SAAWxB,GAAMqB,EAAsBG,EAAU,GAAI,YAAaxB,EAAE,OAAO,KAAK,EAChF,UAAU,wDAAA,CAAA,CACZ,CACF,EAEClD,EAAAA,IAAA,MAAI,CAAA,UAAU,mBACb,SAAAA,EAAA,IAACE,EAAA,CACC,OAAM,GACN,WAAOW,EAAe,EAAA,EACtB,QAAS,IAAMoE,EAAsBP,EAAU,EAAE,CAAA,CAAA,CAErD,CAAA,CAAA,CAnCQ,EAAAA,EAAU,EAoCpB,CACD,CAAA,CACH,CAAA,CAAA,CAEJ,CAAA,CAAA,EAhMKT,EAAQ,EAkMhB,CAAA,CAAA,CAAA,CACH,CACF,CAAA,CAAA,CACF,EAvRqB,IAyRzB,ECxgBMsB,GAAc,IAAM,CACxB,KAAM,CAACC,EAAcC,CAAa,EAAIxG,EAAAA,SAAS,EAAK,EAC9C,CAACyG,EAAcC,CAAa,EAAI1G,EAAAA,SAAS,EAAK,EAC9C,CAAC2G,EAAaC,CAAc,EAAI5G,EAAAA,SAAS,EAAK,EAC9C,CAAC6G,EAAYC,CAAW,EAAI9G,EAAAA,SAAS,EAAK,EAC1C,CAAC+G,EAAWC,CAAU,EAAIhH,EAAAA,SAAS,EAAK,EACxC,CAACiH,EAAaC,CAAY,EAAIlH,EAAAA,SAAS,EAAK,EAIhD,OAAAmB,EAAA,KAAC,MAAI,CAAA,UAAU,gDAEb,SAAA,CAAAJ,EAAA,IAAC,MAAI,CAAA,UAAU,uBACb,SAAAA,EAAAA,IAAC,SAAO,CAAA,UAAU,kBAAkB,QAAS,IAAMyF,EAAc,EAAI,EAAG,2BAAgB,CAAA,EAU1F,QAGC,MAAI,CAAA,UAAU,gFACb,SAACrF,EAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAACJ,EAAAA,IAAA,MAAA,CAAI,UAAU,8BACb,SAAAA,EAAA,IAAC,OAAI,UAAU,QAAQ,sCAA0B,CACnD,CAAA,QACC,MAAI,CAAA,UAAU,kBACb,SAAAA,EAAA,IAACoG,KAAM,CACT,CAAA,CAAA,CAAA,CACF,CACF,CAAA,EAGApG,MAAC0D,IAAsB,OAAQ8B,EAAc,QAAS,IAAMC,EAAc,EAAK,EAAG,EAClFzF,MAACtB,IAAY,OAAQgH,EAAc,QAAS,IAAMC,EAAc,EAAK,EAAG,EACxE3F,MAACoD,IAAa,OAAQwC,EAAa,QAAS,IAAMC,EAAe,EAAK,EAAG,EACzE7F,MAACe,IAAU,OAAQ+E,EAAY,QAAS,IAAMC,EAAY,EAAK,EAAG,EAClE/F,MAACsD,IAAgB,OAAQ0C,EAAW,QAAS,IAAMC,EAAW,EAAK,CAAG,CAAA,CAAA,EAExE,CAEJ"}