{"version":3,"file":"ServicesEditor-CpzWIAmv.js","sources":["../../src/components/editor_components/editor_modals/servicesModal/ServiceDescriptionModal.jsx","../../src/components/editor_components/editor_modals/servicesModal/ServiceModal.jsx","../../src/components/editor_components/ServicesEditor.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Modal, Button, Form, Input, message, Upload, Spin, Card } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport Swal from \"sweetalert2\";\n\nconst { TextArea } = Input;\n\nconst ServiceDescriptionModal = ({ isOpen, onClose }) => {\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const [imageLoading, setImageLoading] = useState(false);\n  const [initialized, setInitialized] = useState(false);\n\n  useEffect(() => {\n    if (isOpen && !initialized) {\n      fetchDescriptionData();\n      setInitialized(true);\n    }\n  }, [isOpen, initialized]);\n\n  const fetchDescriptionData = async () => {\n    try {\n      setLoading(true);\n      const apiUrl = import.meta.env.VITE_API_URL;\n      const response = await fetch(`${apiUrl}/service-description/`);\n\n      if (!response.ok) {\n        // If no data exists, initialize with default values\n        if (response.status === 404) {\n          initializeWithDefaults();\n          return;\n        }\n        throw new Error(\"Failed to fetch description data\");\n      }\n\n      const data = await response.json();\n\n      // Check if data exists and has the expected structure\n      if (data) {\n        form.setFieldsValue({\n          title: data.title || \"\",\n          description: data.description || \"\",\n        });\n\n        if (data.logo) {\n          form.setFieldsValue({\n            logo: data.logo\n          });\n        }\n      } else {\n        initializeWithDefaults();\n      }\n    } catch (error) {\n      console.error(\"Error fetching description data:\", error);\n      message.error(\"Failed to load description data. Using default values.\");\n      initializeWithDefaults();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const initializeWithDefaults = () => {\n    form.setFieldsValue({\n      title: \"The Latest News and Events on Stech Group Business Concerns\",\n      description: \"Our Latest News and Events on Stech Group are highlighted here to showcase the updates from its diverse business concerns. It highlights key milestones, recent achievements, community initiatives, and industry events involving Stech Group's ventures, such as JG Healthcare, JG Alfalah, Stech Holidays, and others. This section keeps stakeholders informed and engaged while reflecting the group's commitment to transparency, innovation, and progress. Stay connected to explore how Stech Group continues to shape industries and communities locally and internationally.\",\n      logo: \"\"\n    });\n  };\n\n  const handleImageUpload = async (file) => {\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    formData.append(\"category\", \"news_events\");\n\n    try {\n      setImageLoading(true);\n\n      const apiUrl = import.meta.env.VITE_API_URL;\n      const response = await fetch(`${apiUrl}/images/`, {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Upload failed\");\n      }\n\n      const data = await response.json();\n      const newImageUrl = `${data.image}`;\n\n      form.setFieldsValue({\n        logo: newImageUrl\n      });\n\n      return newImageUrl;\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      message.error(\"Image upload failed\");\n      return null;\n    } finally {\n      setImageLoading(false);\n    }\n  };\n\n  const uploadProps = {\n    name: \"logo\",\n    showUploadList: false,\n    customRequest: async ({ file, onSuccess, onError }) => {\n      const imageUrl = await handleImageUpload(file);\n      if (imageUrl) {\n        onSuccess(imageUrl, file);\n      } else {\n        onError(new Error(\"Upload failed\"));\n      }\n    },\n    beforeUpload: (file) => {\n      const isImage = file.type.startsWith(\"image/\");\n      if (!isImage) {\n        message.error(\"You can only upload image files!\");\n        return Upload.LIST_IGNORE;\n      }\n      const isLt5M = file.size / 1024 / 1024 < 5;\n      if (!isLt5M) {\n        message.error(\"Image must be smaller than 5MB!\");\n        return Upload.LIST_IGNORE;\n      }\n      return isImage && isLt5M;\n    },\n  };\n\n  const handleSubmit = async () => {\n    try {\n      const values = await form.validateFields();\n      const updatedData = {\n        title: values.title,\n        description: values.description,\n        logo: values.logo || \"\"\n      };\n\n      const apiUrl = import.meta.env.VITE_API_URL;\n      const response = await fetch(`${apiUrl}/service-description/`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(updatedData),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to save description data');\n      }\n\n      Swal.fire({\n        position: \"top-end\",\n        icon: \"success\",\n        title: \"Description Updated Successfully\",\n        showConfirmButton: false,\n        timer: 3000,\n      });\n      onClose();\n    } catch (error) {\n      console.error(\"Error saving description data:\", error);\n      message.error(error.message || \"Failed to update description\");\n    }\n  };\n\n  return (\n    <Modal\n      title={\n        <span className=\"text-xl font-bold text-gray-800\">\n          Edit News & Events Description\n        </span>\n      }\n      open={isOpen}\n      onCancel={onClose}\n      footer={[\n        <Button\n          key=\"back\"\n          onClick={onClose}\n          className=\"px-6 h-10 rounded-lg border-gray-300 hover:bg-gray-100\"\n        >\n          Cancel\n        </Button>,\n        <Button\n          key=\"submit\"\n          type=\"primary\"\n          onClick={handleSubmit}\n          loading={loading}\n          className=\"px-6 h-10 rounded-lg bg-blue-600 hover:bg-blue-700\"\n        >\n          Save Changes\n        </Button>,\n      ]}\n      width={800}\n      className=\"rounded-lg overflow-hidden\"\n      styles={{ body: { padding: \"24px\" } }}\n      destroyOnClose\n    >\n      <Spin spinning={loading}>\n        <Form form={form} layout=\"vertical\" className=\"space-y-6\">\n          <Card\n            title=\"Main Content\"\n            bordered={false}\n            className=\"rounded-lg shadow-sm border-0\"\n            headStyle={{\n              background: \"linear-gradient(90deg, #f8f9fa 0%, #ffffff 100%)\",\n              borderBottom: \"1px solid #e8e8e8\",\n            }}\n          >\n            <div className=\"grid grid-cols-1 gap-6\">\n              <Form.Item\n                name=\"title\"\n                label={\n                  <span className=\"font-medium text-gray-700\">\n                    Section Title\n                  </span>\n                }\n                rules={[{ required: true, message: \"Please enter the title\" }]}\n              >\n                <Input\n                  size=\"large\"\n                  placeholder=\"e.g., The Latest News and Events\"\n                  className=\"rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                />\n              </Form.Item>\n\n              <Form.Item\n                name=\"description\"\n                label={\n                  <span className=\"font-medium text-gray-700\">\n                    Description\n                  </span>\n                }\n                rules={[\n                  { required: true, message: \"Please enter the description\" },\n                ]}\n              >\n                <TextArea\n                  rows={6}\n                  placeholder=\"Description about the news and events section\"\n                  className=\"rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                />\n              </Form.Item>\n\n              <Form.Item\n                name=\"logo\"\n                label={\n                  <span className=\"font-medium text-gray-700\">\n                    Section Logo\n                  </span>\n                }\n              >\n                <div className=\"flex items-center gap-4\">\n                  <Upload {...uploadProps}>\n                    <Button\n                      icon={<UploadOutlined />}\n                      loading={imageLoading}\n                      className=\"h-10 rounded-lg bg-blue-600 hover:bg-blue-700 text-white\"\n                    >\n                      Upload Logo\n                    </Button>\n                  </Upload>\n                  {form.getFieldValue('logo') && (\n                    <div className=\"relative w-16 h-16\">\n                      <img\n                        src={form.getFieldValue('logo')}\n                        alt=\"Section logo\"\n                        className=\"w-full h-full object-contain\"\n                      />\n                    </div>\n                  )}\n                </div>\n              </Form.Item>\n            </div>\n          </Card>\n        </Form>\n      </Spin>\n    </Modal>\n  );\n};\n\nexport default ServiceDescriptionModal;","import React, { useState, useEffect } from \"react\";\nimport { Modal, Button, Form, Input, message, Upload, Spin, Card, List, Collapse, Tooltip, Alert } from \"antd\";\nimport { UploadOutlined, DeleteOutlined, PlusOutlined, QuestionCircleOutlined, InfoCircleOutlined } from \"@ant-design/icons\";\nimport Swal from \"sweetalert2\";\n\nconst { TextArea } = Input;\nconst { Panel } = Collapse;\n\nconst OurServiceModal = ({ isOpen, onClose }) => {\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const [imageLoading, setImageLoading] = useState(false);\n  const [principles, setPrinciples] = useState([]);\n  const [serviceCategories, setServiceCategories] = useState([]);\n  const [initialized, setInitialized] = useState(false);\n  const [activePanels, setActivePanels] = useState(['1', '2']);\n  const apiUrl = import.meta.env.VITE_API_URL;\n\n  useEffect(() => {\n    if (isOpen) {\n      fetchServicesData();\n    }\n  }, [isOpen]);\n\n  const fetchServicesData = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(`${apiUrl}/service-model/`);\n\n      if (!response.ok) {\n        if (response.status === 404) {\n          initializeWithDefaults();\n          return;\n        }\n        throw new Error(\"Failed to fetch services data\");\n      }\n\n      const data = await response.json();\n      const servicesData = data.services_section || {};\n\n      form.setFieldsValue({\n        title: servicesData.title || \"\",\n        text: servicesData.text || \"\",\n      });\n\n      setPrinciples((servicesData.principles || []).map(item => ({\n        ...item,\n        id: item.id || Date.now() + Math.random()\n      })));\n\n      setServiceCategories((servicesData.service_categories || []).map(item => ({\n        ...item,\n        id: item.id || Date.now() + Math.random()\n      })));\n      \n      setInitialized(true);\n    } catch (error) {\n      console.error(\"Error fetching services data:\", error);\n      message.error(\"Failed to load services data. Using default values.\");\n      initializeWithDefaults();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const initializeWithDefaults = () => {\n    form.setFieldsValue({\n      title: \"Our Services\",\n      text: \"At Stech Group, we offer a wide range of innovative services across the industries we serve...\",\n    });\n    setPrinciples([]);\n    setServiceCategories([]);\n    setInitialized(true);\n  };\n\n  const handleImageUpload = async (file, itemId, isPrinciple = true) => {\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    formData.append(\"category\", isPrinciple ? \"principles\" : \"service_categories\");\n\n    try {\n      setImageLoading(true);\n      const response = await fetch(`${apiUrl}/images/`, {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Upload failed\");\n      }\n\n      const data = await response.json();\n      const newImageUrl = `${data.image}`;\n\n      if (isPrinciple) {\n        setPrinciples(prev => prev.map(item => \n          item.id === itemId ? { ...item, image: newImageUrl } : item\n        ));\n      } else {\n        setServiceCategories(prev => prev.map(item => \n          item.id === itemId ? { ...item, logo: newImageUrl } : item\n        ));\n      }\n\n      message.success(\"Image uploaded successfully!\");\n      return newImageUrl;\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      message.error(\"Image upload failed\");\n      return null;\n    } finally {\n      setImageLoading(false);\n    }\n  };\n\n  const uploadProps = (itemId, isPrinciple = true) => ({\n    name: isPrinciple ? \"principle_image\" : \"service_logo\",\n    showUploadList: false,\n    customRequest: async ({ file, onSuccess, onError }) => {\n      const imageUrl = await handleImageUpload(file, itemId, isPrinciple);\n      if (imageUrl) {\n        onSuccess(imageUrl, file);\n      } else {\n        onError(new Error(\"Upload failed\"));\n      }\n    },\n    beforeUpload: (file) => {\n      const isImage = file.type.startsWith(\"image/\");\n      if (!isImage) {\n        message.error(\"You can only upload image files!\");\n        return Upload.LIST_IGNORE;\n      }\n      const isLt5M = file.size / 1024 / 1024 < 5;\n      if (!isLt5M) {\n        message.error(\"Image must be smaller than 5MB!\");\n        return Upload.LIST_IGNORE;\n      }\n      return isImage && isLt5M;\n    },\n  });\n\n  const handleAddPrinciple = () => {\n    const newPrinciple = {\n      id: Date.now() + Math.random(),\n      primary_text: \"\",\n      description: \"\",\n      image: \"\"\n    };\n    setPrinciples(prev => [...prev, newPrinciple]);\n    setActivePanels(['1', ...activePanels]);\n  };\n\n  const handleRemovePrinciple = (id) => {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        setPrinciples(prev => prev.filter(principle => principle.id !== id));\n        message.success('Principle removed successfully');\n      }\n    });\n  };\n\n  const handlePrincipleChange = (id, field, value) => {\n    setPrinciples(prev => prev.map(principle => \n      principle.id === id ? { ...principle, [field]: value } : principle\n    ));\n  };\n\n  const handleAddServiceCategory = () => {\n    const newCategory = {\n      id: Date.now() + Math.random(),\n      title: \"\",\n      text: \"\",\n      logo: \"\"\n    };\n    setServiceCategories(prev => [...prev, newCategory]);\n    setActivePanels(['2', ...activePanels]);\n  };\n\n  const handleRemoveServiceCategory = (id) => {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        setServiceCategories(prev => prev.filter(category => category.id !== id));\n        message.success('Service category removed successfully');\n      }\n    });\n  };\n\n  const handleServiceCategoryChange = (id, field, value) => {\n    setServiceCategories(prev => prev.map(category => \n      category.id === id ? { ...category, [field]: value } : category\n    ));\n  };\n\n  const handleSubmit = async () => {\n    try {\n      const values = await form.validateFields();\n      \n      const incompletePrinciples = principles.filter(p => !p.primary_text || !p.description || !p.image);\n      if (incompletePrinciples.length > 0) {\n        throw new Error(\"Please complete all principle fields or remove incomplete principles\");\n      }\n      \n      const incompleteCategories = serviceCategories.filter(c => !c.title || !c.text || !c.logo);\n      if (incompleteCategories.length > 0) {\n        throw new Error(\"Please complete all service category fields or remove incomplete categories\");\n      }\n\n      const updatedData = {\n        services_section: {\n          title: values.title,\n          text: values.text,\n          principles: principles.map(({ id, ...rest }) => rest),\n          service_categories: serviceCategories.map(({ id, ...rest }) => rest)\n        }\n      };\n\n      setLoading(true);\n      const response = await fetch(`${apiUrl}/service-model/`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(updatedData),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Failed to save services data');\n      }\n\n      Swal.fire({\n        position: \"top-end\",\n        icon: \"success\",\n        title: \"Services Content Updated Successfully\",\n        showConfirmButton: false,\n        timer: 3000,\n      });\n      onClose();\n    } catch (error) {\n      console.error(\"Error saving services data:\", error);\n      message.error(error.message || \"Failed to update services section\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePanelChange = (keys) => {\n    setActivePanels(keys);\n  };\n\n  return (\n    <Modal\n      title={\n        <div className=\"flex items-center\">\n          <span className=\"text-xl font-bold text-gray-800\">\n            Edit Services Section\n          </span>\n          <Tooltip title=\"This section displays your company's services and guiding principles\">\n            <InfoCircleOutlined className=\"ml-2 text-blue-500\" />\n          </Tooltip>\n        </div>\n      }\n      open={isOpen}\n      onCancel={onClose}\n      footer={[\n        <Button\n          key=\"back\"\n          onClick={onClose}\n          className=\"px-6 h-10 rounded-lg border-gray-300 hover:bg-gray-100\"\n        >\n          Cancel\n        </Button>,\n        <Button\n          key=\"submit\"\n          type=\"primary\"\n          onClick={handleSubmit}\n          loading={loading}\n          className=\"px-6 h-10 rounded-lg bg-blue-600 hover:bg-blue-700\"\n        >\n          Save Changes\n        </Button>,\n      ]}\n      width={1000}\n      className=\"rounded-lg overflow-hidden\"\n      styles={{ body: { padding: \"24px\" } }}\n      destroyOnClose\n    >\n      <Spin spinning={loading} tip=\"Loading service data...\">\n        <Form form={form} layout=\"vertical\" className=\"space-y-6\">\n          <Card\n            title=\"Main Content\"\n            bordered={false}\n            className=\"rounded-lg shadow-sm border-0\"\n            headStyle={{\n              background: \"linear-gradient(90deg, #f8f9fa 0%, #ffffff 100%)\",\n              borderBottom: \"1px solid #e8e8e8\",\n            }}\n          >\n            <div className=\"grid grid-cols-1 gap-6\">\n              <Form.Item\n                name=\"title\"\n                label={\n                  <div className=\"flex items-center\">\n                    <span className=\"font-medium text-gray-700\">\n                      Section Title\n                    </span>\n                    <Tooltip title=\"This will be the main heading for the Services section\">\n                      <QuestionCircleOutlined className=\"ml-2 text-gray-400\" />\n                    </Tooltip>\n                  </div>\n                }\n                rules={[{ required: true, message: \"Please enter the title\" }]}\n              >\n                <Input\n                  size=\"large\"\n                  placeholder=\"e.g., Our Services\"\n                  className=\"rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                />\n              </Form.Item>\n\n              <Form.Item\n                name=\"text\"\n                label={\n                  <div className=\"flex items-center\">\n                    <span className=\"font-medium text-gray-700\">\n                      Description\n                    </span>\n                    <Tooltip title=\"This introductory text appears below the section title\">\n                      <QuestionCircleOutlined className=\"ml-2 text-gray-400\" />\n                    </Tooltip>\n                  </div>\n                }\n                rules={[\n                  { required: true, message: \"Please enter the description\" }\n                ]}\n              >\n                <TextArea\n                  rows={4}\n                  placeholder=\"Description about the services section\"\n                  className=\"rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                />\n              </Form.Item>\n            </div>\n          </Card>\n\n          <Collapse \n            activeKey={activePanels}\n            onChange={handlePanelChange}\n            className=\"bg-white rounded-lg shadow-sm\"\n            expandIconPosition=\"end\"\n          >\n            <Panel \n              header={\n                <div className=\"flex items-center\">\n                  <span className=\"font-medium\">Our Principles</span>\n                  <Tooltip title=\"Add your company's guiding principles with images\">\n                    <QuestionCircleOutlined className=\"ml-2 text-gray-400\" />\n                  </Tooltip>\n                </div>\n              } \n              key=\"1\" \n              extra={\n                <Button\n                  type=\"primary\"\n                  icon={<PlusOutlined />}\n                  onClick={handleAddPrinciple}\n                  size=\"small\"\n                  className=\"flex items-center bg-blue-600 hover:bg-blue-700\"\n                >\n                  Add Principle\n                </Button>\n              }\n            >\n              {principles.length === 0 ? (\n                <div className=\"text-center py-4 text-gray-500\">\n                  No principles added yet. Click \"Add Principle\" to get started.\n                </div>\n              ) : (\n                <List\n                  dataSource={principles}\n                  renderItem={(principle) => (\n                    <List.Item key={principle.id} className=\"p-4 mb-4 border border-gray-200 rounded-lg\">\n                      <div className=\"w-full\">\n                        <div className=\"flex justify-between items-start gap-4\">\n                          <div className=\"flex-1 space-y-4\">\n                            <div>\n                              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                Principle Title*\n                              </label>\n                              <Input\n                                value={principle.primary_text}\n                                onChange={(e) => handlePrincipleChange(principle.id, 'primary_text', e.target.value)}\n                                placeholder=\"e.g., Innovation\"\n                                className=\"rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                              />\n                            </div>\n                            \n                            <div>\n                              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                Description*\n                              </label>\n                              <TextArea\n                                value={principle.description}\n                                onChange={(e) => handlePrincipleChange(principle.id, 'description', e.target.value)}\n                                placeholder=\"Detailed description of the principle...\"\n                                rows={3}\n                                className=\"rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                              />\n                            </div>\n                            \n                            <div>\n                              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                Image*\n                                <Tooltip title=\"Recommended size: 600x400px\">\n                                  <QuestionCircleOutlined className=\"ml-1 text-gray-400\" />\n                                </Tooltip>\n                              </label>\n                              <div className=\"flex items-center gap-4\">\n                                <Upload {...uploadProps(principle.id, true)}>\n                                  <Button\n                                    icon={<UploadOutlined />}\n                                    loading={imageLoading}\n                                    className=\"h-10 rounded-lg bg-blue-600 hover:bg-blue-700 text-white\"\n                                  >\n                                    {principle.image ? \"Change Image\" : \"Upload Image\"}\n                                  </Button>\n                                </Upload>\n                                {principle.image && (\n                                  <div className=\"relative group w-32 h-24\">\n                                    <img\n                                      src={principle.image}\n                                      alt=\"Principle\"\n                                      className=\"w-full h-full object-cover rounded-lg\"\n                                    />\n                                    <div className=\"absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity rounded-lg\">\n                                      <span className=\"text-white text-xs text-center p-1\">Click 'Change Image' to update</span>\n                                    </div>\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                          <Button\n                            danger\n                            type=\"text\"\n                            icon={<DeleteOutlined />}\n                            onClick={() => handleRemovePrinciple(principle.id)}\n                            className=\"ml-2\"\n                          />\n                        </div>\n                        {(!principle.primary_text || !principle.description || !principle.image) && (\n                          <Alert\n                            message=\"Complete all fields for this principle\"\n                            type=\"warning\"\n                            showIcon\n                            className=\"mt-3\"\n                          />\n                        )}\n                      </div>\n                    </List.Item>\n                  )}\n                />\n              )}\n            </Panel>\n\n            <Panel \n              header={\n                <div className=\"flex items-center\">\n                  <span className=\"font-medium\">Service Categories</span>\n                  <Tooltip title=\"Add different service categories your company offers\">\n                    <QuestionCircleOutlined className=\"ml-2 text-gray-400\" />\n                  </Tooltip>\n                </div>\n              } \n              key=\"2\" \n              extra={\n                <Button\n                  type=\"primary\"\n                  icon={<PlusOutlined />}\n                  onClick={handleAddServiceCategory}\n                  size=\"small\"\n                  className=\"flex items-center bg-blue-600 hover:bg-blue-700\"\n                >\n                  Add Category\n                </Button>\n              }\n            >\n              {serviceCategories.length === 0 ? (\n                <div className=\"text-center py-4 text-gray-500\">\n                  No service categories added yet. Click \"Add Category\" to get started.\n                </div>\n              ) : (\n                <List\n                  dataSource={serviceCategories}\n                  renderItem={(category) => (\n                    <List.Item key={category.id} className=\"p-4 mb-4 border border-gray-200 rounded-lg\">\n                      <div className=\"w-full\">\n                        <div className=\"flex justify-between items-start gap-4\">\n                          <div className=\"flex-1 space-y-4\">\n                            <div>\n                              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                Category Title*\n                              </label>\n                              <Input\n                                value={category.title}\n                                onChange={(e) => handleServiceCategoryChange(category.id, 'title', e.target.value)}\n                                placeholder=\"e.g., IT Services\"\n                                className=\"rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                              />\n                            </div>\n                            \n                            <div>\n                              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                Description*\n                              </label>\n                              <Input\n                                value={category.text}\n                                onChange={(e) => handleServiceCategoryChange(category.id, 'text', e.target.value)}\n                                placeholder=\"Brief description of the service category...\"\n                                className=\"rounded-lg hover:border-blue-400 focus:border-blue-400\"\n                              />\n                            </div>\n                            \n                            <div>\n                              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                Logo*\n                                <Tooltip title=\"Recommended size: 200x200px with transparent background\">\n                                  <QuestionCircleOutlined className=\"ml-1 text-gray-400\" />\n                                </Tooltip>\n                              </label>\n                              <div className=\"flex items-center gap-4\">\n                                <Upload {...uploadProps(category.id, false)}>\n                                  <Button\n                                    icon={<UploadOutlined />}\n                                    loading={imageLoading}\n                                    className=\"h-10 rounded-lg bg-blue-600 hover:bg-blue-700 text-white\"\n                                  >\n                                    {category.logo ? \"Change Logo\" : \"Upload Logo\"}\n                                  </Button>\n                                </Upload>\n                                {category.logo && (\n                                  <div className=\"relative group w-16 h-16\">\n                                    <img\n                                      src={category.logo}\n                                      alt=\"Service category\"\n                                      className=\"w-full h-full object-contain\"\n                                    />\n                                    <div className=\"absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity rounded\">\n                                      <span className=\"text-white text-xs text-center p-1\">Click 'Change Logo' to update</span>\n                                    </div>\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                          <Button\n                            danger\n                            type=\"text\"\n                            icon={<DeleteOutlined />}\n                            onClick={() => handleRemoveServiceCategory(category.id)}\n                            className=\"ml-2\"\n                          />\n                        </div>\n                        {(!category.title || !category.text || !category.logo) && (\n                          <Alert\n                            message=\"Complete all fields for this category\"\n                            type=\"warning\"\n                            showIcon\n                            className=\"mt-3\"\n                          />\n                        )}\n                      </div>\n                    </List.Item>\n                  )}\n                />\n              )}\n            </Panel>\n          </Collapse>\n        </Form>\n      </Spin>\n    </Modal>\n  );\n};\n\nexport default OurServiceModal;","import React, { useState } from 'react';\nimport Home from '../../pages/Home';\nimport ServiceDescriptionModal from './editor_modals/servicesModal/ServiceDescriptionModal';\n// import ServiceModel from './editor_modals/servicesModal/ServiceModal';\nimport ServiceModal from './editor_modals/servicesModal/ServiceModal';\n\nconst ServicesEditor = ({ getDivider, availableShapes }) => {\n  const [isCarouselOpen, setCarouselOpen] = useState(false);\n  const [isAboutPreview, setAboutPreview] = useState(false);\n  const [isHeroOpen, setHeroOpen] = useState(false);\n  const [isCardsOpen, setCardsOpen] = useState(false);\n  const [isServicesOpen, setServicesOpen] = useState(false);\n  const [isStatisticsOpen, setStatisticsOpen] = useState(false);\n  const [isGridCardsOpen, setGridCardsOpen] = useState(false);\n  const [isWhyUsOpen, setWhyUsOpen] = useState(false);\n  const [isOurClientsOpen, setOurClientsOpen] = useState(false);\n  const [isAssociatesOpen, setAssociatesOpen] = useState(false);\n  const [isNewsOpen, setNewsOpen] = useState(false);\n  const [isLocationOpen, setLocationOpen] = useState(false);\n\n  return (\n    <div className='flex gap-40 items-start justify-between p-20 w-[1300px]'>\n      {/* Buttons Section */}\n      <div className='grid grid-cols-2 gap-28 font-bold text-center'>\n        {/* <button className=\"btn btn-primary w-20 m-2\" onClick={() => setHeroOpen(true)}>Description</button> */}\n        <button className=\"btn btn-primary w-20 m-2\" onClick={() => setLocationOpen(true)}>Services</button>\n      </div>\n\n      {/* Mockup Browser Section */}\n      <div className=\"mockup-browser bg-white border-8 border-black p-2 h-[1000px] overflow-y-scroll\">\n        <div>\n          <div className=\"mockup-browser-toolbar m-10\">\n            <div className=\"input\">https://sample-website.com</div>\n          </div>\n          <div className='overflow-scroll'>\n            {/* <Home context={{ getDivider, availableShapes }} /> */}\n          </div>\n        </div>\n      </div>\n\n      {/* Modal Components */}\n      <ServiceDescriptionModal isOpen={isHeroOpen} onClose={() => setHeroOpen(false)} />\n      <ServiceModal isOpen={isLocationOpen} onClose={() => setLocationOpen(false)} />\n      \n    </div>\n  );\n};\n\nexport default ServicesEditor;\n"],"names":["TextArea","Input","ServiceDescriptionModal","isOpen","onClose","form","Form","loading","setLoading","useState","imageLoading","setImageLoading","initialized","setInitialized","useEffect","fetchDescriptionData","response","initializeWithDefaults","data","error","message","handleImageUpload","file","formData","newImageUrl","uploadProps","onSuccess","onError","imageUrl","isImage","Upload","isLt5M","handleSubmit","values","updatedData","errorData","Swal","jsx","Modal","Button","Spin","Card","jsxs","UploadOutlined","Panel","Collapse","OurServiceModal","principles","setPrinciples","serviceCategories","setServiceCategories","activePanels","setActivePanels","apiUrl","fetchServicesData","servicesData","item","itemId","isPrinciple","prev","handleAddPrinciple","newPrinciple","handleRemovePrinciple","id","result","principle","handlePrincipleChange","field","value","handleAddServiceCategory","newCategory","handleRemoveServiceCategory","category","handleServiceCategoryChange","p","c","rest","handlePanelChange","keys","Tooltip","InfoCircleOutlined","QuestionCircleOutlined","PlusOutlined","List","e","DeleteOutlined","Alert","ServicesEditor","getDivider","availableShapes","isCarouselOpen","setCarouselOpen","isAboutPreview","setAboutPreview","isHeroOpen","setHeroOpen","isCardsOpen","setCardsOpen","isServicesOpen","setServicesOpen","isStatisticsOpen","setStatisticsOpen","isGridCardsOpen","setGridCardsOpen","isWhyUsOpen","setWhyUsOpen","isOurClientsOpen","setOurClientsOpen","isAssociatesOpen","setAssociatesOpen","isNewsOpen","setNewsOpen","isLocationOpen","setLocationOpen","ServiceModal"],"mappings":"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"}